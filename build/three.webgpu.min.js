/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{Color as e,Vector2 as t,Vector3 as s,Vector4 as r,Matrix3 as i,Matrix4 as n,EventDispatcher as o,MathUtils as a,ColorManagement as u,LinearSRGBColorSpace as l,SRGBColorSpace as d,NoToneMapping as c,StaticDrawUsage as h,InterleavedBuffer as p,DynamicDrawUsage as g,InterleavedBufferAttribute as m,NoColorSpace as f,UnsignedIntType as x,IntType as y,WebGLCoordinateSystem as T,BackSide as b,CubeReflectionMapping as _,CubeRefractionMapping as N,WebGPUCoordinateSystem as v,TangentSpaceNormalMap as S,ObjectSpaceNormalMap as R,InstancedInterleavedBuffer as A,InstancedBufferAttribute as C,DataArrayTexture as E,FloatType as w,FramebufferTexture as M,LinearMipmapLinearFilter as B,DepthTexture as U,Material as F,NormalBlending as P,PointsMaterial as I,LineBasicMaterial as L,LineDashedMaterial as V,MeshNormalMaterial as D,WebGLCubeRenderTarget as O,BoxGeometry as G,NoBlending as z,Mesh as k,Scene as $,LinearFilter as H,CubeCamera as W,CubeTexture as j,EquirectangularReflectionMapping as q,EquirectangularRefractionMapping as X,AddOperation as K,MixOperation as Y,MultiplyOperation as Q,MeshBasicMaterial as Z,MeshLambertMaterial as J,MeshPhongMaterial as ee,Texture as te,MeshStandardMaterial as se,MeshPhysicalMaterial as re,MeshToonMaterial as ie,MeshMatcapMaterial as ne,SpriteMaterial as oe,ShadowMaterial as ae,Plane as ue,Uint32BufferAttribute as le,Uint16BufferAttribute as de,BufferGeometry as ce,BufferAttribute as he,RenderTarget as pe,CubeUVReflectionMapping as ge,OrthographicCamera as me,PerspectiveCamera as fe,HalfFloatType as xe,RGBAFormat as ye,LinearMipmapNearestFilter as Te,NearestMipmapLinearFilter as be,Float16BufferAttribute as _e,REVISION as Ne,Object3D as ve,LinearMipMapLinearFilter as Se,Float32BufferAttribute as Re,DataTexture as Ae,RepeatWrapping as Ce,NearestFilter as Ee,AdditiveBlending as we,StereoCamera as Me,LessCompare as Be,VSMShadowMap as Ue,RGFormat as Fe,DepthStencilFormat as Pe,DepthFormat as Ie,UnsignedInt248Type as Le,UnsignedByteType as Ve,SphereGeometry as De,PCFShadowMap as Oe,DoubleSide as Ge,FrontSide as ze,Frustum as ke,RedIntegerFormat as $e,RedFormat as He,RGIntegerFormat as We,RGBIntegerFormat as je,RGBFormat as qe,RGBAIntegerFormat as Xe,UnsignedShortType as Ke,ByteType as Ye,ShortType as Qe,createCanvasElement as Ze,AddEquation as Je,SubtractEquation as et,ReverseSubtractEquation as tt,ZeroFactor as st,OneFactor as rt,SrcColorFactor as it,SrcAlphaFactor as nt,SrcAlphaSaturateFactor as ot,DstColorFactor as at,DstAlphaFactor as ut,OneMinusSrcColorFactor as lt,OneMinusSrcAlphaFactor as dt,OneMinusDstColorFactor as ct,OneMinusDstAlphaFactor as ht,CullFaceNone as pt,CullFaceBack as gt,CullFaceFront as mt,CustomBlending as ft,MultiplyBlending as xt,SubtractiveBlending as yt,NotEqualDepth as Tt,GreaterDepth as bt,GreaterEqualDepth as _t,EqualDepth as Nt,LessEqualDepth as vt,LessDepth as St,AlwaysDepth as Rt,NeverDepth as At,UnsignedShort4444Type as Ct,UnsignedShort5551Type as Et,UnsignedInt5999Type as wt,AlphaFormat as Mt,LuminanceFormat as Bt,LuminanceAlphaFormat as Ut,RGB_S3TC_DXT1_Format as Ft,RGBA_S3TC_DXT1_Format as Pt,RGBA_S3TC_DXT3_Format as It,RGBA_S3TC_DXT5_Format as Lt,RGB_PVRTC_4BPPV1_Format as Vt,RGB_PVRTC_2BPPV1_Format as Dt,RGBA_PVRTC_4BPPV1_Format as Ot,RGBA_PVRTC_2BPPV1_Format as Gt,RGB_ETC1_Format as zt,RGB_ETC2_Format as kt,RGBA_ETC2_EAC_Format as $t,RGBA_ASTC_4x4_Format as Ht,RGBA_ASTC_5x4_Format as Wt,RGBA_ASTC_5x5_Format as jt,RGBA_ASTC_6x5_Format as qt,RGBA_ASTC_6x6_Format as Xt,RGBA_ASTC_8x5_Format as Kt,RGBA_ASTC_8x6_Format as Yt,RGBA_ASTC_8x8_Format as Qt,RGBA_ASTC_10x5_Format as Zt,RGBA_ASTC_10x6_Format as Jt,RGBA_ASTC_10x8_Format as es,RGBA_ASTC_10x10_Format as ts,RGBA_ASTC_12x10_Format as ss,RGBA_ASTC_12x12_Format as rs,RGBA_BPTC_Format as is,RED_RGTC1_Format as ns,SIGNED_RED_RGTC1_Format as os,RED_GREEN_RGTC2_Format as as,SIGNED_RED_GREEN_RGTC2_Format as us,ClampToEdgeWrapping as ls,MirroredRepeatWrapping as ds,NearestMipmapNearestFilter as cs,NeverCompare as hs,AlwaysCompare as ps,LessEqualCompare as gs,EqualCompare as ms,GreaterEqualCompare as fs,GreaterCompare as xs,NotEqualCompare as ys,w as Ts,NotEqualStencilFunc as bs,GreaterStencilFunc as _s,GreaterEqualStencilFunc as Ns,EqualStencilFunc as vs,LessEqualStencilFunc as Ss,LessStencilFunc as Rs,AlwaysStencilFunc as As,NeverStencilFunc as Cs,DecrementWrapStencilOp as Es,IncrementWrapStencilOp as ws,DecrementStencilOp as Ms,IncrementStencilOp as Bs,InvertStencilOp as Us,ReplaceStencilOp as Fs,ZeroStencilOp as Ps,KeepStencilOp as Is,MaxEquation as Ls,MinEquation as Vs,SpotLight as Ds,PointLight as Os,DirectionalLight as Gs,RectAreaLight as zs,AmbientLight as ks,HemisphereLight as $s,LightProbe as Hs,LinearToneMapping as Ws,ReinhardToneMapping as js,CineonToneMapping as qs,ACESFilmicToneMapping as Xs,AgXToneMapping as Ks,NeutralToneMapping as Ys,Group as Qs,Loader as Zs,FileLoader as Js,MaterialLoader as er,ObjectLoader as tr}from"./three.core.min.js";export{AdditiveAnimationBlendMode,AnimationAction,AnimationClip,AnimationLoader,AnimationMixer,AnimationObjectGroup,AnimationUtils,ArcCurve,ArrayCamera,ArrowHelper,AttachedBindMode,Audio,AudioAnalyser,AudioContext,AudioListener,AudioLoader,AxesHelper,BasicDepthPacking,BasicShadowMap,BatchedMesh,Bone,BooleanKeyframeTrack,Box2,Box3,Box3Helper,BoxHelper,BufferGeometryLoader,Cache,Camera,CameraHelper,CanvasTexture,CapsuleGeometry,CatmullRomCurve3,CircleGeometry,Clock,ColorKeyframeTrack,CompressedArrayTexture,CompressedCubeTexture,CompressedTexture,CompressedTextureLoader,ConeGeometry,ConstantAlphaFactor,ConstantColorFactor,Controls,CubeTextureLoader,CubicBezierCurve,CubicBezierCurve3,CubicInterpolant,CullFaceFrontBack,Curve,CurvePath,CustomToneMapping,CylinderGeometry,Cylindrical,Data3DTexture,DataTextureLoader,DataUtils,DefaultLoadingManager,DetachedBindMode,DirectionalLightHelper,DiscreteInterpolant,DisplayP3ColorSpace,DodecahedronGeometry,DynamicCopyUsage,DynamicReadUsage,EdgesGeometry,EllipseCurve,Euler,ExtrudeGeometry,Fog,FogExp2,GLBufferAttribute,GLSL1,GLSL3,GridHelper,HemisphereLightHelper,IcosahedronGeometry,ImageBitmapLoader,ImageLoader,ImageUtils,InstancedBufferGeometry,InstancedMesh,Int16BufferAttribute,Int32BufferAttribute,Int8BufferAttribute,Interpolant,InterpolateDiscrete,InterpolateLinear,InterpolateSmooth,KeyframeTrack,LOD,LatheGeometry,Layers,Light,Line,Line3,LineCurve,LineCurve3,LineLoop,LineSegments,LinearDisplayP3ColorSpace,LinearInterpolant,LinearMipMapNearestFilter,LinearTransfer,LoaderUtils,LoadingManager,LoopOnce,LoopPingPong,LoopRepeat,MOUSE,Matrix2,MeshDepthMaterial,MeshDistanceMaterial,NearestMipMapLinearFilter,NearestMipMapNearestFilter,NormalAnimationBlendMode,NumberKeyframeTrack,OctahedronGeometry,OneMinusConstantAlphaFactor,OneMinusConstantColorFactor,P3Primaries,PCFSoftShadowMap,Path,PlaneGeometry,PlaneHelper,PointLightHelper,Points,PolarGridHelper,PolyhedronGeometry,PositionalAudio,PropertyBinding,PropertyMixer,QuadraticBezierCurve,QuadraticBezierCurve3,Quaternion,QuaternionKeyframeTrack,QuaternionLinearInterpolant,RGBADepthPacking,RGBDepthPacking,RGB_BPTC_SIGNED_Format,RGB_BPTC_UNSIGNED_Format,RGDepthPacking,RawShaderMaterial,Ray,Raycaster,Rec709Primaries,RingGeometry,SRGBTransfer,ShaderMaterial,Shape,ShapeGeometry,ShapePath,ShapeUtils,Skeleton,SkeletonHelper,SkinnedMesh,Source,Sphere,Spherical,SphericalHarmonics3,SplineCurve,SpotLightHelper,Sprite,StaticCopyUsage,StaticReadUsage,StreamCopyUsage,StreamDrawUsage,StreamReadUsage,StringKeyframeTrack,TOUCH,TetrahedronGeometry,TextureLoader,TextureUtils,TorusGeometry,TorusKnotGeometry,Triangle,TriangleFanDrawMode,TriangleStripDrawMode,TrianglesDrawMode,TubeGeometry,UVMapping,Uint8BufferAttribute,Uint8ClampedBufferAttribute,Uniform,UniformsGroup,VectorKeyframeTrack,VideoTexture,WebGL3DRenderTarget,WebGLArrayRenderTarget,WebGLMultipleRenderTargets,WebGLRenderTarget,WireframeGeometry,WrapAroundEnding,ZeroCurvatureEnding,ZeroSlopeEnding}from"./three.core.min.js";const sr=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class rr{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.refreshUniforms=sr,this.renderId=0}firstInitialization(e){return!1===this.renderObjects.has(e)&&(this.getRenderObjectData(e),!0)}getRenderObjectData(e){let t=this.renderObjects.get(e);return void 0===t&&(t={material:this.getMaterialData(e.material),worldMatrix:e.object.matrixWorld.clone()},null!==e.bundle&&(t.version=e.bundle.version),this.renderObjects.set(e,t)),t}containsNode(e){const t=e.material;for(const e in t)if(t[e]&&t[e].isNode)return!0;return null!==e.renderer.nodes.modelViewMatrix||null!==e.renderer.nodes.modelNormalViewMatrix}getMaterialData(e){const t={};for(const s of this.refreshUniforms){const r=e[s];null!=r&&("object"==typeof r&&void 0!==r.clone?t[s]=r.clone():t[s]=r)}return t}equals(e){const t=this.getRenderObjectData(e);if(!0!==t.worldMatrix.equals(e.object.matrixWorld))return t.worldMatrix.copy(e.object.matrixWorld),!1;const s=t.material,r=e.material;for(const e in s){const t=s[e],i=r[e];if(void 0!==t.equals){if(!1===t.equals(i))return t.copy(i),!1}else t!==i&&(s[e]=i)}return null!==e.bundle&&(t.version=e.bundle.version),!0}needsRefresh(e,t){if(this.hasNode||this.firstInitialization(e))return!0;const{renderId:s}=t;if(this.renderId!==s)return this.renderId=s,!0;const r=!0===e.object.static,i=null!==e.bundle&&!0===e.bundle.static&&this.getRenderObjectData(e).version===e.bundle.version;if(r||i)return!1;return!0!==this.equals(e)}}function ir(e,t=!1){let s="{";!0===e.isNode&&(s+=e.id,e=e.getSelf());for(const{property:r,childNode:i}of nr(e))s+=","+r.slice(0,-4)+":"+i.getCacheKey(t);return s+="}",s}function*nr(e,t=!1){for(const s in e){if(!0===s.startsWith("_"))continue;const r=e[s];if(!0===Array.isArray(r))for(let e=0;e<r.length;e++){const i=r[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:s,index:e,childNode:i})}else if(r&&!0===r.isNode)yield{property:s,childNode:r};else if("object"==typeof r)for(const e in r){const i=r[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:s,index:e,childNode:i})}}}function or(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function ar(o,...a){const u=o?o.slice(-4):void 0;return 1===a.length&&("vec2"===u?a=[a[0],a[0]]:"vec3"===u?a=[a[0],a[0],a[0]]:"vec4"===u&&(a=[a[0],a[0],a[0],a[0]])),"color"===o?new e(...a):"vec2"===u?new t(...a):"vec3"===u?new s(...a):"vec4"===u?new r(...a):"mat3"===u?new i(...a):"mat4"===u?new n(...a):"bool"===o?a[0]||!1:"float"===o||"int"===o||"uint"===o?a[0]||0:"string"===o?a[0]||"":"ArrayBuffer"===o?lr(a[0]):null}function ur(e){let t="";const s=new Uint8Array(e);for(let e=0;e<s.length;e++)t+=String.fromCharCode(s[e]);return btoa(t)}function lr(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}var dr=Object.freeze({__proto__:null,arrayBufferToBase64:ur,base64ToArrayBuffer:lr,getCacheKey:ir,getNodeChildren:nr,getValueFromType:ar,getValueType:or});const cr={VERTEX:"vertex",FRAGMENT:"fragment"},hr={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},pr={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},gr=["fragment","vertex"],mr=["setup","analyze","generate"],fr=[...gr,"compute"],xr=["x","y","z","w"];let yr=0;class Tr extends o{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=hr.NONE,this.updateBeforeType=hr.NONE,this.updateAfterType=hr.NONE,this.uuid=a.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:yr++})}set needsUpdate(e){!0===e&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,hr.FRAME)}onRenderUpdate(e){return this.onUpdate(e,hr.RENDER)}onObjectUpdate(e){return this.onUpdate(e,hr.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of nr(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return!0!==(e=e||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=ir(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let s=0;for(const e of this.getChildren())t["node"+s++]=e;return null}analyze(e){if(1===e.increaseUsage(this)){const t=e.getNodeProperties(this);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&!0===s.isNode)return s.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let r=null;const i=e.getBuildStage();if("setup"===i){this.updateReference(e);const t=e.getNodeProperties(this);if(!0!==t.initialized){e.stack.nodes.length;t.initialized=!0,t.outputNode=this.setup(e),null!==t.outputNode&&e.stack.nodes.length;for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}else if("analyze"===i)this.analyze(e);else if("generate"===i){if(1===this.generate.length){const s=this.getNodeType(e),i=e.getDataFromNode(this);r=i.snippet,void 0===r&&(r=this.generate(e)||"",i.snippet=r),r=e.format(r,s,t)}else r=this.generate(e,t)||""}return e.removeChain(this),r}getSerializeChildren(){return nr(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:r,index:i,childNode:n}of t)void 0!==i?(void 0===s[r]&&(s[r]=Number.isInteger(i)?[]:{}),s[r][i]=n.toJSON(e.meta).uuid):s[r]=n.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const r=[];for(const i of e.inputNodes[s])r.push(t[i]);this[s]=r}else if("object"==typeof e.inputNodes[s]){const r={};for(const i in e.inputNodes[s]){const n=e.inputNodes[s][i];r[i]=t[n]}this[s]=r}else{const r=e.inputNodes[s];this[s]=t[r]}}}toJSON(e){const{uuid:t,type:s}=this,r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{},nodes:{}});let i=e.nodes[t];function n(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(void 0===i&&(i={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==r&&(e.nodes[i.uuid]=i),this.serialize(i),delete i.meta),r){const t=n(e.textures),s=n(e.images),r=n(e.nodes);t.length>0&&(i.textures=t),s.length>0&&(i.images=s),r.length>0&&(i.nodes=r)}return i}}class br extends Tr{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}}class _r extends Tr{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const r of this.convertTo.split("|"))null!==s&&e.getTypeLength(t)!==e.getTypeLength(r)||(s=r);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,r=this.getNodeType(e),i=s.build(e,r);return e.format(i,r,t)}}class Nr extends Tr{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if("generate"===e.getBuildStage()){const s=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(void 0!==r.propertyName)return e.format(r.propertyName,s,t);if("void"!==s&&"void"!==t&&this.hasDependencies(e)){const i=super.build(e,s),n=e.getVarFromNode(this,null,s),o=e.getPropertyName(n);return e.addLineFlowCode(`${o} = ${i}`),r.snippet=i,r.propertyName=o,e.format(r.propertyName,s,t)}}return super.build(e,t)}}class vr extends Nr{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,s)=>t+e.getTypeLength(s.getNodeType(e))),0))}generate(e,t){const s=this.getNodeType(e),r=this.nodes,i=e.getComponentType(s),n=[];for(const t of r){let s=t.build(e);const r=e.getComponentType(t.getNodeType(e));r!==i&&(s=e.format(s,r,i)),n.push(s)}const o=`${e.getType(s)}( ${n.join(", ")} )`;return e.format(o,s,t)}}const Sr=xr.join("");class Rr extends Tr{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(xr.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const s=this.node,r=e.getTypeLength(s.getNodeType(e));let i=null;if(r>1){let n=null;this.getVectorLength()>=r&&(n=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const o=s.build(e,n);i=this.components.length===r&&this.components===Sr.slice(0,this.components.length)?e.format(o,n,t):e.format(`${o}.${this.components}`,this.getNodeType(e),t)}else i=s.build(e,t);return i}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class Ar extends Nr{static get type(){return"SetNode"}constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:r}=this,i=this.getNodeType(e),n=e.getTypeFromLength(s.length),o=r.build(e,n),a=t.build(e,i),u=e.getTypeLength(i),l=[];for(let e=0;e<u;e++){const t=xr[e];t===s[0]?(l.push(o),e+=s.length-1):l.push(a+"."+t)}return`${e.getType(i)}( ${l.join(", ")} )`}}class Cr extends Nr{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:s}=this,r=this.getNodeType(e),i=s.build(e),n=e.getVarFromNode(this),o=e.getPropertyName(n);e.addLineFlowCode(o+" = "+i);const a=e.getTypeLength(r),u=[];let l=0;for(let e=0;e<a;e++){const s=xr[e];s===t[l]?(u.push("1.0 - "+o+"."+s),l++):u.push(o+"."+s)}return`${e.getType(r)}( ${u.join(", ")} )`}}class Er extends Tr{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?or(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=or(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=ur(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?ar(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class wr extends Er{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return e.format(this.generateConst(e),s,t)}}let Mr=null;const Br=new Map;function Ur(e,t){if(Br.has(e))console.warn(`Redefinition of method chaining ${e}`);else{if("function"!=typeof t)throw new Error(`Node element ${e} is not a function`);Br.set(e,t)}}const Fr=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Pr=e=>Fr(e).split("").sort().join(""),Ir={setup(e,t){const s=t.shift();return e(oi(s),...t)},get(e,t,s){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>(Mr.assign(s,...e),s);if(Br.has(t)){const r=Br.get(t);return e.isStackNode?(...e)=>s.add(r(...e)):(...e)=>r(s,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&Br.has(t.slice(0,t.length-6))){const r=Br.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>s.assign(e[0],r(...e)):(...e)=>s.assign(r(s,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=Fr(t),ni(new Rr(s,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=Pr(t.slice(3).toLowerCase()),s=>ni(new Ar(e,t,s));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(t))return t=Pr(t.slice(4).toLowerCase()),()=>ni(new Cr(ni(e),t));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),ni(new Rr(e,t));if(!0===/^\d+$/.test(t))return ni(new br(s,new wr(Number(t),"uint")))}return Reflect.get(e,t,s)},set:(e,t,s,r)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,s,r):(r[t].assign(s),!0)},Lr=new WeakMap,Vr=new WeakMap,Dr=function(e,t=null){for(const s in e)e[s]=ni(e[s],t);return e},Or=function(e,t=null){const s=e.length;for(let r=0;r<s;r++)e[r]=ni(e[r],t);return e},Gr=function(e,t=null,s=null,r=null){const i=e=>ni(null!==r?Object.assign(e,r):e);return null===t?(...t)=>i(new e(...ai(t))):null!==s?(s=ni(s),(...r)=>i(new e(t,...ai(r),s))):(...s)=>i(new e(t,...ai(s)))},zr=function(e,...t){return ni(new e(...ai(t)))};class kr extends Tr{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:s}=this,r=e.getNodeProperties(t);if(r.onceOutput)return r.onceOutput;let i=null;if(t.layout){let r=Vr.get(e.constructor);void 0===r&&(r=new WeakMap,Vr.set(e.constructor,r));let n=r.get(t);void 0===n&&(n=ni(e.buildFunctionNode(t)),r.set(t,n)),null!==e.currentFunctionNode&&e.currentFunctionNode.includes.push(n),i=ni(n.call(s))}else{const r=t.jsFunc,n=null!==s?r(s,e):r(e);i=ni(n)}return t.once&&(r.onceOutput=i),i}getOutputNode(e){const t=e.getNodeProperties(this);return null===t.outputNode&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class $r extends Tr{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return oi(e),ni(new kr(this,e))}setup(){return this.call()}}const Hr=[!1,!0],Wr=[0,1,2,3],jr=[-1,-2],qr=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],Xr=new Map;for(const e of Hr)Xr.set(e,new wr(e));const Kr=new Map;for(const e of Wr)Kr.set(e,new wr(e,"uint"));const Yr=new Map([...Kr].map((e=>new wr(e.value,"int"))));for(const e of jr)Yr.set(e,new wr(e,"int"));const Qr=new Map([...Yr].map((e=>new wr(e.value))));for(const e of qr)Qr.set(e,new wr(e));for(const e of qr)Qr.set(-e,new wr(-e));const Zr={bool:Xr,uint:Kr,ints:Yr,float:Qr},Jr=new Map([...Xr,...Qr]),ei=(e,t)=>Jr.has(e)?Jr.get(e):!0===e.isNode?e:new wr(e,t),ti=function(e,t=null){return(...s)=>{if((0===s.length||!["bool","float","int","uint"].includes(e)&&s.every((e=>"object"!=typeof e)))&&(s=[ar(e,...s)]),1===s.length&&null!==t&&t.has(s[0]))return ni(t.get(s[0]));if(1===s.length){const t=ei(s[0],e);return(e=>{try{return e.getNodeType()}catch(e){return}})(t)===e?ni(t):ni(new _r(t,e))}const r=s.map((e=>ei(e)));return ni(new vr(r,e))}},si=e=>"object"==typeof e&&null!==e?e.value:e,ri=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function ii(e,t){return new Proxy(new $r(e,t),Ir)}const ni=(e,t=null)=>function(e,t=null){const s=or(e);if("node"===s){let t=Lr.get(e);return void 0===t&&(t=new Proxy(e,Ir),Lr.set(e,t),Lr.set(t,t)),t}return null===t&&("float"===s||"boolean"===s)||s&&"shader"!==s&&"string"!==s?ni(ei(e,t)):"shader"===s?di(e):e}(e,t),oi=(e,t=null)=>new Dr(e,t),ai=(e,t=null)=>new Or(e,t),ui=(...e)=>new Gr(...e),li=(...e)=>new zr(...e),di=(e,t)=>{const s=new ii(e,t),r=(...e)=>{let t;return oi(e),t=e[0]&&e[0].isNode?[...e]:e[0],s.call(t)};return r.shaderNode=s,r.setLayout=e=>(s.setLayout(e),r),r.once=()=>(s.once=!0,r),r},ci=(...e)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),di(...e));Ur("toGlobal",(e=>(e.global=!0,e)));const hi=e=>{Mr=e},pi=()=>Mr,gi=(...e)=>Mr.If(...e);function mi(e){return Mr&&Mr.add(e),e}Ur("append",mi);const fi=new ti("color"),xi=new ti("float",Zr.float),yi=new ti("int",Zr.ints),Ti=new ti("uint",Zr.uint),bi=new ti("bool",Zr.bool),_i=new ti("vec2"),Ni=new ti("ivec2"),vi=new ti("uvec2"),Si=new ti("bvec2"),Ri=new ti("vec3"),Ai=new ti("ivec3"),Ci=new ti("uvec3"),Ei=new ti("bvec3"),wi=new ti("vec4"),Mi=new ti("ivec4"),Bi=new ti("uvec4"),Ui=new ti("bvec4"),Fi=new ti("mat2"),Pi=new ti("mat3"),Ii=new ti("mat4"),Li=(e="")=>ni(new wr(e,"string")),Vi=e=>ni(new wr(e,"ArrayBuffer"));Ur("toColor",fi),Ur("toFloat",xi),Ur("toInt",yi),Ur("toUint",Ti),Ur("toBool",bi),Ur("toVec2",_i),Ur("toIVec2",Ni),Ur("toUVec2",vi),Ur("toBVec2",Si),Ur("toVec3",Ri),Ur("toIVec3",Ai),Ur("toUVec3",Ci),Ur("toBVec3",Ei),Ur("toVec4",wi),Ur("toIVec4",Mi),Ur("toUVec4",Bi),Ur("toBVec4",Ui),Ur("toMat2",Fi),Ur("toMat3",Pi),Ur("toMat4",Ii);const Di=ui(br),Oi=(e,t)=>ni(new _r(ni(e),t)),Gi=(e,t)=>ni(new Rr(ni(e),t));Ur("element",Di),Ur("convert",Oi);class zi extends Tr{static get type(){return"UniformGroupNode"}constructor(e,t=!1,s=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=s,this.isUniformGroup=!0}set needsUpdate(e){!0===e&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const ki=e=>new zi(e),$i=(e,t=0)=>new zi(e,!0,t),Hi=$i("frame"),Wi=$i("render"),ji=ki("object");class qi extends Er{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=ji}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const s=this.getSelf();return e=e.bind(s),super.onUpdate((t=>{const r=e(t,s);void 0!==r&&(this.value=r)}),t)}generate(e,t){const s=this.getNodeType(e),r=this.getUniformHash(e);let i=e.getNodeFromHash(r);void 0===i&&(e.setHashNode(this,r),i=this);const n=i.getInputType(e),o=e.getUniformFromNode(i,n,e.shaderStage,this.name||e.context.label),a=e.getPropertyName(o);return void 0!==e.context.label&&delete e.context.label,e.format(a,s,t)}}const Xi=(e,t)=>{const s=ri(t||e),r=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return ni(new qi(r,s))};class Ki extends Tr{static get type(){return"PropertyNode"}constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const Yi=(e,t)=>ni(new Ki(e,t)),Qi=(e,t)=>ni(new Ki(e,t,!0)),Zi=li(Ki,"vec4","DiffuseColor"),Ji=li(Ki,"vec3","EmissiveColor"),en=li(Ki,"float","Roughness"),tn=li(Ki,"float","Metalness"),sn=li(Ki,"float","Clearcoat"),rn=li(Ki,"float","ClearcoatRoughness"),nn=li(Ki,"vec3","Sheen"),on=li(Ki,"float","SheenRoughness"),an=li(Ki,"float","Iridescence"),un=li(Ki,"float","IridescenceIOR"),ln=li(Ki,"float","IridescenceThickness"),dn=li(Ki,"float","AlphaT"),cn=li(Ki,"float","Anisotropy"),hn=li(Ki,"vec3","AnisotropyT"),pn=li(Ki,"vec3","AnisotropyB"),gn=li(Ki,"color","SpecularColor"),mn=li(Ki,"float","SpecularF90"),fn=li(Ki,"float","Shininess"),xn=li(Ki,"vec4","Output"),yn=li(Ki,"float","dashSize"),Tn=li(Ki,"float","gapSize"),bn=li(Ki,"float","pointWidth"),_n=li(Ki,"float","IOR"),Nn=li(Ki,"float","Transmission"),vn=li(Ki,"float","Thickness"),Sn=li(Ki,"float","AttenuationDistance"),Rn=li(Ki,"color","AttenuationColor"),An=li(Ki,"float","Dispersion");class Cn extends Nr{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(!1===e.isAvailable("swizzleAssign")&&t.isSplitNode&&t.components.length>1){const s=e.getTypeLength(t.node.getNodeType(e));return xr.join("").slice(0,s)!==t.components}return!1}generate(e,t){const{targetNode:s,sourceNode:r}=this,i=this.needsSplitAssign(e),n=s.getNodeType(e),o=s.context({assign:!0}).build(e),a=r.build(e,n),u=r.getNodeType(e),l=e.getDataFromNode(this);let d;if(!0===l.initialized)"void"!==t&&(d=o);else if(i){const r=e.getVarFromNode(this,null,n),i=e.getPropertyName(r);e.addLineFlowCode(`${i} = ${a}`);const u=s.node.context({assign:!0}).build(e);for(let t=0;t<s.components.length;t++){const r=s.components[t];e.addLineFlowCode(`${u}.${r} = ${i}[ ${t} ]`)}"void"!==t&&(d=o)}else d=`${o} = ${a}`,"void"!==t&&"void"!==u||(e.addLineFlowCode(d),"void"!==t&&(d=o));return l.initialized=!0,e.format(d,n,t)}}const En=ui(Cn);Ur("assign",En);class wn extends Nr{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,r=s.getInputs(e),i=this.parameters;if(Array.isArray(i))for(let s=0;s<i.length;s++){const n=r[s],o=i[s];t.push(o.build(e,n.type))}else for(const s of r){const r=i[s.name];if(void 0===r)throw new Error(`FunctionCallNode: Input '${s.name}' not found in FunctionNode.`);t.push(r.build(e,s.type))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const Mn=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?ai(t):oi(t[0]),ni(new wn(ni(e),t)));Ur("call",Mn);class Bn extends Nr{static get type(){return"OperatorNode"}constructor(e,t,s,...r){if(super(),r.length>0){let i=new Bn(e,t,s);for(let t=0;t<r.length-1;t++)i=new Bn(e,i,r[t]);t=i,s=r[r.length-1]}this.op=e,this.aNode=t,this.bNode=s}getNodeType(e,t){const s=this.op,r=this.aNode,i=this.bNode,n=r.getNodeType(e),o=void 0!==i?i.getNodeType(e):null;if("void"===n||"void"===o)return"void";if("%"===s)return n;if("~"===s||"&"===s||"|"===s||"^"===s||">>"===s||"<<"===s)return e.getIntegerType(n);if("!"===s||"=="===s||"&&"===s||"||"===s||"^^"===s)return"bool";if("<"===s||">"===s||"<="===s||">="===s){const s=t?e.getTypeLength(t):Math.max(e.getTypeLength(n),e.getTypeLength(o));return s>1?`bvec${s}`:"bool"}return"float"===n&&e.isMatrix(o)?o:e.isMatrix(n)&&e.isVector(o)?e.getVectorFromMatrix(n):e.isVector(n)&&e.isMatrix(o)?e.getVectorFromMatrix(o):e.getTypeLength(o)>e.getTypeLength(n)?o:n}generate(e,t){const s=this.op,r=this.aNode,i=this.bNode,n=this.getNodeType(e,t);let o=null,a=null;"void"!==n?(o=r.getNodeType(e),a=void 0!==i?i.getNodeType(e):null,"<"===s||">"===s||"<="===s||">="===s||"=="===s?e.isVector(o)?a=o:o!==a&&(o=a="float"):">>"===s||"<<"===s?(o=n,a=e.changeComponentType(a,"uint")):e.isMatrix(o)&&e.isVector(a)?a=e.getVectorFromMatrix(o):o=e.isVector(o)&&e.isMatrix(a)?e.getVectorFromMatrix(a):a=n):o=a=n;const u=r.build(e,o),l=void 0!==i?i.build(e,a):null,d=e.getTypeLength(t),c=e.getFunctionOperator(s);return"void"!==t?"<"===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${u}, ${l} )`,n,t):e.format(`( ${u} < ${l} )`,n,t):"<="===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${u}, ${l} )`,n,t):e.format(`( ${u} <= ${l} )`,n,t):">"===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${u}, ${l} )`,n,t):e.format(`( ${u} > ${l} )`,n,t):">="===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${u}, ${l} )`,n,t):e.format(`( ${u} >= ${l} )`,n,t):"!"===s||"~"===s?e.format(`(${s}${u})`,o,t):c?e.format(`${c}( ${u}, ${l} )`,n,t):e.format(`( ${u} ${s} ${l} )`,n,t):"void"!==o?c?e.format(`${c}( ${u}, ${l} )`,n,t):e.format(`${u} ${s} ${l}`,n,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Un=ui(Bn,"+"),Fn=ui(Bn,"-"),Pn=ui(Bn,"*"),In=ui(Bn,"/"),Ln=ui(Bn,"%"),Vn=ui(Bn,"=="),Dn=ui(Bn,"!="),On=ui(Bn,"<"),Gn=ui(Bn,">"),zn=ui(Bn,"<="),kn=ui(Bn,">="),$n=ui(Bn,"&&"),Hn=ui(Bn,"||"),Wn=ui(Bn,"!"),jn=ui(Bn,"^^"),qn=ui(Bn,"&"),Xn=ui(Bn,"~"),Kn=ui(Bn,"|"),Yn=ui(Bn,"^"),Qn=ui(Bn,"<<"),Zn=ui(Bn,">>");Ur("add",Un),Ur("sub",Fn),Ur("mul",Pn),Ur("div",In),Ur("modInt",Ln),Ur("equal",Vn),Ur("notEqual",Dn),Ur("lessThan",On),Ur("greaterThan",Gn),Ur("lessThanEqual",zn),Ur("greaterThanEqual",kn),Ur("and",$n),Ur("or",Hn),Ur("not",Wn),Ur("xor",jn),Ur("bitAnd",qn),Ur("bitNot",Xn),Ur("bitOr",Kn),Ur("bitXor",Yn),Ur("shiftLeft",Qn),Ur("shiftRight",Zn);const Jn=(...e)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),Ln(...e));Ur("remainder",Jn);class eo extends Nr{static get type(){return"MathNode"}constructor(e,t,s=null,r=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=r}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,r=this.cNode?this.cNode.getNodeType(e):null,i=e.isMatrix(t)?0:e.getTypeLength(t),n=e.isMatrix(s)?0:e.getTypeLength(s),o=e.isMatrix(r)?0:e.getTypeLength(r);return i>n&&i>o?t:n>o?s:o>i?r:t}getNodeType(e){const t=this.method;return t===eo.LENGTH||t===eo.DISTANCE||t===eo.DOT?"float":t===eo.CROSS?"vec3":t===eo.ALL?"bool":t===eo.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===eo.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const s=this.method,r=this.getNodeType(e),i=this.getInputType(e),n=this.aNode,o=this.bNode,a=this.cNode,u=!0===e.renderer.isWebGLRenderer;if(s===eo.TRANSFORM_DIRECTION){let s=n,r=o;e.isMatrix(s.getNodeType(e))?r=wi(Ri(r),0):s=wi(Ri(s),0);const i=Pn(s,r).xyz;return To(i).build(e,t)}if(s===eo.NEGATE)return e.format("( - "+n.build(e,i)+" )",r,t);if(s===eo.ONE_MINUS)return Fn(1,n).build(e,t);if(s===eo.RECIPROCAL)return In(1,n).build(e,t);if(s===eo.DIFFERENCE)return Co(Fn(n,o)).build(e,t);{const l=[];return s===eo.CROSS||s===eo.MOD?l.push(n.build(e,r),o.build(e,r)):u&&s===eo.STEP?l.push(n.build(e,1===e.getTypeLength(n.getNodeType(e))?"float":i),o.build(e,i)):u&&(s===eo.MIN||s===eo.MAX)||s===eo.MOD?l.push(n.build(e,i),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":i)):s===eo.REFRACT?l.push(n.build(e,i),o.build(e,i),a.build(e,"float")):s===eo.MIX?l.push(n.build(e,i),o.build(e,i),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":i)):(l.push(n.build(e,i)),null!==o&&l.push(o.build(e,i)),null!==a&&l.push(a.build(e,i))),e.format(`${e.getMethod(s,r)}( ${l.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}eo.ALL="all",eo.ANY="any",eo.EQUALS="equals",eo.RADIANS="radians",eo.DEGREES="degrees",eo.EXP="exp",eo.EXP2="exp2",eo.LOG="log",eo.LOG2="log2",eo.SQRT="sqrt",eo.INVERSE_SQRT="inversesqrt",eo.FLOOR="floor",eo.CEIL="ceil",eo.NORMALIZE="normalize",eo.FRACT="fract",eo.SIN="sin",eo.COS="cos",eo.TAN="tan",eo.ASIN="asin",eo.ACOS="acos",eo.ATAN="atan",eo.ABS="abs",eo.SIGN="sign",eo.LENGTH="length",eo.NEGATE="negate",eo.ONE_MINUS="oneMinus",eo.DFDX="dFdx",eo.DFDY="dFdy",eo.ROUND="round",eo.RECIPROCAL="reciprocal",eo.TRUNC="trunc",eo.FWIDTH="fwidth",eo.BITCAST="bitcast",eo.TRANSPOSE="transpose",eo.ATAN2="atan2",eo.MIN="min",eo.MAX="max",eo.MOD="mod",eo.STEP="step",eo.REFLECT="reflect",eo.DISTANCE="distance",eo.DIFFERENCE="difference",eo.DOT="dot",eo.CROSS="cross",eo.POW="pow",eo.TRANSFORM_DIRECTION="transformDirection",eo.MIX="mix",eo.CLAMP="clamp",eo.REFRACT="refract",eo.SMOOTHSTEP="smoothstep",eo.FACEFORWARD="faceforward";const to=xi(1e-6),so=xi(1e6),ro=xi(Math.PI),io=xi(2*Math.PI),no=ui(eo,eo.ALL),oo=ui(eo,eo.ANY),ao=ui(eo,eo.EQUALS),uo=ui(eo,eo.RADIANS),lo=ui(eo,eo.DEGREES),co=ui(eo,eo.EXP),ho=ui(eo,eo.EXP2),po=ui(eo,eo.LOG),go=ui(eo,eo.LOG2),mo=ui(eo,eo.SQRT),fo=ui(eo,eo.INVERSE_SQRT),xo=ui(eo,eo.FLOOR),yo=ui(eo,eo.CEIL),To=ui(eo,eo.NORMALIZE),bo=ui(eo,eo.FRACT),_o=ui(eo,eo.SIN),No=ui(eo,eo.COS),vo=ui(eo,eo.TAN),So=ui(eo,eo.ASIN),Ro=ui(eo,eo.ACOS),Ao=ui(eo,eo.ATAN),Co=ui(eo,eo.ABS),Eo=ui(eo,eo.SIGN),wo=ui(eo,eo.LENGTH),Mo=ui(eo,eo.NEGATE),Bo=ui(eo,eo.ONE_MINUS),Uo=ui(eo,eo.DFDX),Fo=ui(eo,eo.DFDY),Po=ui(eo,eo.ROUND),Io=ui(eo,eo.RECIPROCAL),Lo=ui(eo,eo.TRUNC),Vo=ui(eo,eo.FWIDTH),Do=ui(eo,eo.BITCAST),Oo=ui(eo,eo.TRANSPOSE),Go=ui(eo,eo.ATAN2),zo=ui(eo,eo.MIN),ko=ui(eo,eo.MAX),$o=ui(eo,eo.MOD),Ho=ui(eo,eo.STEP),Wo=ui(eo,eo.REFLECT),jo=ui(eo,eo.DISTANCE),qo=ui(eo,eo.DIFFERENCE),Xo=ui(eo,eo.DOT),Ko=ui(eo,eo.CROSS),Yo=ui(eo,eo.POW),Qo=ui(eo,eo.POW,2),Zo=ui(eo,eo.POW,3),Jo=ui(eo,eo.POW,4),ea=ui(eo,eo.TRANSFORM_DIRECTION),ta=e=>Pn(Eo(e),Yo(Co(e),1/3)),sa=e=>Xo(e,e),ra=ui(eo,eo.MIX),ia=(e,t=0,s=1)=>ni(new eo(eo.CLAMP,ni(e),ni(t),ni(s))),na=e=>ia(e),oa=ui(eo,eo.REFRACT),aa=ui(eo,eo.SMOOTHSTEP),ua=ui(eo,eo.FACEFORWARD),la=di((([e])=>{const t=Xo(e.xy,_i(12.9898,78.233)),s=$o(t,ro);return bo(_o(s).mul(43758.5453))})),da=(e,t,s)=>ra(t,s,e),ca=(e,t,s)=>aa(t,s,e);Ur("all",no),Ur("any",oo),Ur("equals",ao),Ur("radians",uo),Ur("degrees",lo),Ur("exp",co),Ur("exp2",ho),Ur("log",po),Ur("log2",go),Ur("sqrt",mo),Ur("inverseSqrt",fo),Ur("floor",xo),Ur("ceil",yo),Ur("normalize",To),Ur("fract",bo),Ur("sin",_o),Ur("cos",No),Ur("tan",vo),Ur("asin",So),Ur("acos",Ro),Ur("atan",Ao),Ur("abs",Co),Ur("sign",Eo),Ur("length",wo),Ur("lengthSq",sa),Ur("negate",Mo),Ur("oneMinus",Bo),Ur("dFdx",Uo),Ur("dFdy",Fo),Ur("round",Po),Ur("reciprocal",Io),Ur("trunc",Lo),Ur("fwidth",Vo),Ur("atan2",Go),Ur("min",zo),Ur("max",ko),Ur("mod",$o),Ur("step",Ho),Ur("reflect",Wo),Ur("distance",jo),Ur("dot",Xo),Ur("cross",Ko),Ur("pow",Yo),Ur("pow2",Qo),Ur("pow3",Zo),Ur("pow4",Jo),Ur("transformDirection",ea),Ur("mix",da),Ur("clamp",ia),Ur("refract",oa),Ur("smoothstep",ca),Ur("faceForward",ua),Ur("difference",qo),Ur("saturate",na),Ur("cbrt",ta),Ur("transpose",Oo),Ur("rand",la);class ha extends Tr{static get type(){return"ConditionalNode"}constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const t=this.ifNode.getNodeType(e);if(null!==this.elseNode){const s=this.elseNode.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(t))return s}return t}setup(e){const t=e.getNodeProperties(this);t.condNode=this.condNode.cache(),t.ifNode=this.ifNode.cache(),t.elseNode=this.elseNode?this.elseNode.cache():null}generate(e,t){const s=this.getNodeType(e),r=e.getDataFromNode(this);if(void 0!==r.nodeProperty)return r.nodeProperty;const{condNode:i,ifNode:n,elseNode:o}=e.getNodeProperties(this),a="void"!==t,u=a?Yi(s).build(e):"";r.nodeProperty=u;const l=i.build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${l} ) {\n\n`).addFlowTab();let d=n.build(e,s);if(d&&(d=a?u+" = "+d+";":"return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"\t"+d+"\n\n"+e.tab+"}"),null!==o){e.addFlowCode(" else {\n\n").addFlowTab();let t=o.build(e,s);t&&(t=a?u+" = "+t+";":"return "+t+";"),e.removeFlowTab().addFlowCode(e.tab+"\t"+t+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return e.format(u,s,t)}}const pa=ui(ha);Ur("select",pa);const ga=(...e)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),pa(...e));Ur("cond",ga);class ma extends Tr{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.value});const r=this.node.build(e,t);return e.setContext(s),r}}const fa=ui(ma),xa=(e,t)=>fa(e,{label:t});Ur("context",fa),Ur("label",xa);class ya extends Tr{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s}=this,r=e.getVarFromNode(this,s,e.getVectorType(this.getNodeType(e))),i=e.getPropertyName(r),n=t.build(e,r.type);return e.addLineFlowCode(`${i} = ${n}`),i}}const Ta=ui(ya);Ur("temp",Ta),Ur("toVar",((...e)=>Ta(...e).append()));class ba extends Tr{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let s=t.varying;if(void 0===s){const r=this.name,i=this.getNodeType(e);t.varying=s=e.getVaryingFromNode(this,r,i),t.node=this.node}return s.needsInterpolation||(s.needsInterpolation="fragment"===e.shaderStage),s}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),s=this.setupVarying(e);if(void 0===t.propertyName){const r=this.getNodeType(e),i=e.getPropertyName(s,cr.VERTEX);e.flowNodeFromShaderStage(cr.VERTEX,this.node,r,i),t.propertyName=i}return e.getPropertyName(s)}}const _a=ui(ba);Ur("varying",_a);const Na="WorkingColorSpace",va="OutputColorSpace";function Sa(e){let t=null;return e===l?t="Linear":e===d&&(t="sRGB"),t}function Ra(e,t){return Sa(e)+"To"+Sa(t)}class Aa extends Nr{static get type(){return"ColorSpaceNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.source=t,this.target=s}getColorSpace(e,t){return t===Na?u.workingColorSpace:t===va?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{renderer:t}=e,{colorNode:s}=this,r=this.getColorSpace(e,this.source),i=this.getColorSpace(e,this.target);if(r===i)return s;const n=Ra(r,i);let o=null;const a=t.nodes.library.getColorSpaceFunction(n);return null!==a?o=wi(a(s.rgb),s.a):(console.error("ColorSpaceNode: Unsupported Color Space configuration.",n),o=s),o}}const Ca=e=>ni(new Aa(ni(e),Na,va)),Ea=e=>ni(new Aa(ni(e),va,Na)),wa=(e,t)=>ni(new Aa(ni(e),Na,t)),Ma=(e,t)=>ni(new Aa(ni(e),t,Na));Ur("toOutputColorSpace",Ca),Ur("toWorkingColorSpace",Ea),Ur("workingToColorSpace",wa),Ur("colorSpaceToWorking",Ma);let Ba=class extends br{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,s,r)}};class Ua extends Tr{static get type(){return"ReferenceBaseNode"}constructor(e,t,s=null,r=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=r,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=hr.OBJECT}setGroup(e){return this.group=e,this}element(e){return ni(new Ba(this,ni(e)))}setNodeType(e){const t=Xi(null,e).getSelf();null!==this.group&&t.setGroup(this.group),this.node=t}getNodeType(e){return null===this.node&&this.updateValue(),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let e=1;e<t.length;e++)s=s[t[e]];return s}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class Fa extends Ua{static get type(){return"RendererReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.renderer=s,this.setGroup(Wi)}updateReference(e){return this.reference=null!==this.renderer?this.renderer:e.renderer,this.reference}}const Pa=(e,t,s)=>ni(new Fa(e,t,s));class Ia extends Nr{static get type(){return"ToneMappingNode"}constructor(e,t=Va,s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}getCacheKey(){let e=super.getCacheKey();return e="{toneMapping:"+this.toneMapping+",nodes:"+e+"}",e}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===c)return t;let r=null;const i=e.renderer.nodes.library.getToneMappingFunction(s);return null!==i?r=wi(i(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",s),r=t),r}}const La=(e,t,s)=>ni(new Ia(e,ni(t),ni(s))),Va=Pa("toneMappingExposure","float");Ur("toneMapping",((e,t,s)=>La(t,s,e)));class Da extends Er{static get type(){return"BufferAttributeNode"}constructor(e,t=null,s=0,r=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=r,this.usage=h,this.instanced=!1,this.attribute=null,this.global=!0,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(0===this.bufferStride&&0===this.bufferOffset){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),s=this.value,r=e.getTypeLength(t),i=this.bufferStride||r,n=this.bufferOffset,o=!0===s.isInterleavedBuffer?s:new p(s,i),a=new m(o,r,n);o.setUsage(this.usage),this.attribute=a,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),r=e.getPropertyName(s);let i=null;if("vertex"===e.shaderStage||"compute"===e.shaderStage)this.name=r,i=r;else{i=_a(this).build(e,t)}return i}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const Oa=(e,t,s,r)=>ni(new Da(e,t,s,r)),Ga=(e,t,s,r)=>Oa(e,t,s,r).setUsage(g),za=(e,t,s,r)=>Oa(e,t,s,r).setInstanced(!0),ka=(e,t,s,r)=>Ga(e,t,s,r).setInstanced(!0);Ur("toAttribute",(e=>Oa(e.value)));class $a extends Tr{static get type(){return"ComputeNode"}constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.updateBeforeType=hr.OBJECT,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let e=1;e<t.length;e++)s*=t[e];this.dispatchCount=Math.ceil(e/s)}onInit(){}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t)}}}const Ha=(e,t,s)=>ni(new $a(ni(e),t,s));Ur("compute",Ha);class Wa extends Tr{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const s=e.getCache(),r=e.getCacheFromNode(this,this.parent);e.setCache(r);const i=this.node.build(e,...t);return e.setCache(s),i}}const ja=(e,...t)=>ni(new Wa(ni(e),...t));Ur("cache",ja);class qa extends Tr{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t),this.outputNode.build(e)}}const Xa=ui(qa);Ur("bypass",Xa);class Ka extends Tr{static get type(){return"RemapNode"}constructor(e,t,s,r=xi(0),i=xi(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=r,this.outHighNode=i,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:r,outHighNode:i,doClamp:n}=this;let o=e.sub(t).div(s.sub(t));return!0===n&&(o=o.clamp()),o.mul(i.sub(r)).add(r)}}const Ya=ui(Ka,null,null,{doClamp:!1}),Qa=ui(Ka);Ur("remap",Ya),Ur("remapClamp",Qa);class Za extends Tr{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),r=this.snippet;if("void"!==s)return e.format(`( ${r} )`,s,t);e.addLineFlowCode(r)}}const Ja=ui(Za),eu=e=>(e?pa(e,Ja("discard")):Ja("discard")).append(),tu=()=>Ja("return").append();Ur("discard",eu);class su extends Nr{static get type(){return"RenderOutputNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=s,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const s=(null!==this.toneMapping?this.toneMapping:e.toneMapping)||c,r=(null!==this.outputColorSpace?this.outputColorSpace:e.outputColorSpace)||f;return s!==c&&(t=t.toneMapping(s)),r!==f&&r!==u.workingColorSpace&&(t=t.workingToColorSpace(r)),t}}const ru=(e,t=null,s=null)=>ni(new su(ni(e),t,s));function iu(e){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",e)}Ur("renderOutput",ru);class nu extends Tr{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(null===t){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const r=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(r)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const r=e.geometry.getAttribute(t),i=e.getTypeFromAttribute(r),n=e.getAttribute(t,i);if("vertex"===e.shaderStage)return e.format(n.name,i,s);return _a(this).build(e,s)}return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(s)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const ou=(e,t)=>ni(new nu(e,t)),au=e=>ou("uv"+(e>0?e:""),"vec2");class uu extends Tr{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),r=this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${r} )`,this.getNodeType(e),t)}}const lu=ui(uu);class du extends qi{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=hr.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&void 0!==s.width){const{width:e,height:t}=s;this.value=Math.log2(Math.max(e,t))}}}const cu=ui(du);class hu extends qi{static get type(){return"TextureNode"}constructor(e,t=null,s=null,r=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.biasNode=r,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=hr.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(null===t)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===x?"uvec4":this.value.type===y?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return au(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return null===this._matrixUniform&&(this._matrixUniform=Xi(this.value.matrix)),this._matrixUniform.mul(Ri(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?hr.FRAME:hr.NONE,this}setupUV(e,t){const s=this.value;return!e.isFlipY()||!0!==s.isRenderTargetTexture&&!0!==s.isFramebufferTexture&&!0!==s.isDepthTexture||(t=t.setY(t.y.oneMinus())),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let s=this.uvNode;null!==s&&!0!==e.context.forceUVContext||!e.context.getUV||(s=e.context.getUV(this)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s)),s=this.setupUV(e,s);let r=this.levelNode;null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=s,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateSnippet(e,t,s,r,i,n,o,a){const u=this.value;let l;return l=r?e.generateTextureLevel(u,t,s,r,n):i?e.generateTextureBias(u,t,s,i,n):a?e.generateTextureGrad(u,t,s,a,n):o?e.generateTextureCompare(u,t,s,o,n):!1===this.sampler?e.generateTextureLoad(u,t,s,n):e.generateTexture(u,t,s,n),l}generate(e,t){const s=e.getNodeProperties(this),r=this.value;if(!r||!0!==r.isTexture)throw new Error("TextureNode: Need a three.js texture.");const i=super.generate(e,"property");if("sampler"===t)return i+"_sampler";if(e.isReference(t))return i;{const n=e.getDataFromNode(this);let o=n.propertyName;if(void 0===o){const{uvNode:t,levelNode:r,biasNode:a,compareNode:u,depthNode:l,gradNode:d}=s,c=this.generateUV(e,t),h=r?r.build(e,"float"):null,p=a?a.build(e,"float"):null,g=l?l.build(e,"int"):null,m=u?u.build(e,"float"):null,f=d?[d[0].build(e,"vec2"),d[1].build(e,"vec2")]:null,x=e.getVarFromNode(this);o=e.getPropertyName(x);const y=this.generateSnippet(e,i,c,h,p,g,m,f);e.addLineFlowCode(`${o} = ${y}`),n.snippet=y,n.propertyName=o}let a=o;const u=this.getNodeType(e);return e.needsToWorkingColorSpace(r)&&(a=Ma(Ja(a,u),r.colorSpace).setup(e).build(e,u)),e.format(a,u,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=ni(e),t.referenceNode=this.getSelf(),ni(t)}blur(e){const t=this.clone();return t.biasNode=ni(e).mul(cu(t)),t.referenceNode=this.getSelf(),ni(t)}level(e){const t=this.clone();return t.levelNode=ni(e),t.referenceNode=this.getSelf(),ni(t)}size(e){return lu(this,e)}bias(e){const t=this.clone();return t.biasNode=ni(e),t.referenceNode=this.getSelf(),ni(t)}compare(e){const t=this.clone();return t.compareNode=ni(e),t.referenceNode=this.getSelf(),ni(t)}grad(e,t){const s=this.clone();return s.gradNode=[ni(e),ni(t)],s.referenceNode=this.getSelf(),ni(s)}depth(e){const t=this.clone();return t.depthNode=ni(e),t.referenceNode=this.getSelf(),ni(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;null!==t&&(t.value=e.matrix),!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const pu=ui(hu),gu=(...e)=>pu(...e).setSampler(!1),mu=e=>(!0===e.isNode?e:pu(e)).convert("sampler"),fu=Xi("float").label("cameraNear").setGroup(Wi).onRenderUpdate((({camera:e})=>e.near)),xu=Xi("float").label("cameraFar").setGroup(Wi).onRenderUpdate((({camera:e})=>e.far)),yu=Xi("float").label("cameraLogDepth").setGroup(Wi).onRenderUpdate((({camera:e})=>2/(Math.log(e.far+1)/Math.LN2))),Tu=Xi("mat4").label("cameraProjectionMatrix").setGroup(Wi).onRenderUpdate((({camera:e})=>e.projectionMatrix)),bu=Xi("mat4").label("cameraProjectionMatrixInverse").setGroup(Wi).onRenderUpdate((({camera:e})=>e.projectionMatrixInverse)),_u=Xi("mat4").label("cameraViewMatrix").setGroup(Wi).onRenderUpdate((({camera:e})=>e.matrixWorldInverse)),Nu=Xi("mat4").label("cameraWorldMatrix").setGroup(Wi).onRenderUpdate((({camera:e})=>e.matrixWorld)),vu=Xi("mat3").label("cameraNormalMatrix").setGroup(Wi).onRenderUpdate((({camera:e})=>e.normalMatrix)),Su=Xi(new s).label("cameraPosition").setGroup(Wi).onRenderUpdate((({camera:e},t)=>t.value.setFromMatrixPosition(e.matrixWorld)));class Ru extends Tr{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=hr.OBJECT,this._uniformNode=new qi(null)}getNodeType(){const e=this.scope;return e===Ru.WORLD_MATRIX?"mat4":e===Ru.POSITION||e===Ru.VIEW_POSITION||e===Ru.DIRECTION||e===Ru.SCALE?"vec3":void 0}update(e){const t=this.object3d,r=this._uniformNode,i=this.scope;if(i===Ru.WORLD_MATRIX)r.value=t.matrixWorld;else if(i===Ru.POSITION)r.value=r.value||new s,r.value.setFromMatrixPosition(t.matrixWorld);else if(i===Ru.SCALE)r.value=r.value||new s,r.value.setFromMatrixScale(t.matrixWorld);else if(i===Ru.DIRECTION)r.value=r.value||new s,t.getWorldDirection(r.value);else if(i===Ru.VIEW_POSITION){const i=e.camera;r.value=r.value||new s,r.value.setFromMatrixPosition(t.matrixWorld),r.value.applyMatrix4(i.matrixWorldInverse)}}generate(e){const t=this.scope;return t===Ru.WORLD_MATRIX?this._uniformNode.nodeType="mat4":t!==Ru.POSITION&&t!==Ru.VIEW_POSITION&&t!==Ru.DIRECTION&&t!==Ru.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}Ru.WORLD_MATRIX="worldMatrix",Ru.POSITION="position",Ru.SCALE="scale",Ru.VIEW_POSITION="viewPosition",Ru.DIRECTION="direction";const Au=ui(Ru,Ru.DIRECTION),Cu=ui(Ru,Ru.WORLD_MATRIX),Eu=ui(Ru,Ru.POSITION),wu=ui(Ru,Ru.SCALE),Mu=ui(Ru,Ru.VIEW_POSITION);class Bu extends Ru{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const Uu=li(Bu,Bu.DIRECTION),Fu=li(Bu,Bu.WORLD_MATRIX),Pu=li(Bu,Bu.POSITION),Iu=li(Bu,Bu.SCALE),Lu=li(Bu,Bu.VIEW_POSITION),Vu=Xi(new i).onObjectUpdate((({object:e},t)=>t.value.getNormalMatrix(e.matrixWorld))),Du=Xi(new n).onObjectUpdate((({object:e},t)=>t.value.copy(e.matrixWorld).invert())),Ou=_u.mul(Fu).toVar("modelViewMatrix"),Gu=di((e=>(e.context.isHighPrecisionModelViewMatrix=!0,Xi("mat4").onObjectUpdate((({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))))).once()().toVar("highPrecisionModelViewMatrix"),zu=di((e=>{const t=e.context.isHighPrecisionModelViewMatrix;return Xi("mat3").onObjectUpdate((({object:e,camera:s})=>(!0!==t&&e.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix))))})).once()().toVar("highPrecisionModelNormalMatrix"),ku=ou("position","vec3"),$u=ku.varying("positionLocal"),Hu=ku.varying("positionPrevious"),Wu=Fu.mul($u).xyz.varying("v_positionWorld"),ju=$u.transformDirection(Fu).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),qu=Ou.mul($u).xyz.varying("v_positionView"),Xu=qu.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class Ku extends Tr{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:s}=e;return t.coordinateSystem===T&&s.side===b?"false":e.getFrontFacing()}}const Yu=li(Ku),Qu=xi(Yu).mul(2).sub(1),Zu=ou("normal","vec3"),Ju=di((e=>!1===e.geometry.hasAttribute("normal")?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),Ri(0,1,0)):Zu),"vec3").once()().toVar("normalLocal"),el=qu.dFdx().cross(qu.dFdy()).normalize().toVar("normalFlat"),tl=di((e=>{let t;return t=!0===e.material.flatShading?el:_a(al(Ju),"v_normalView").normalize(),t}),"vec3").once()().toVar("normalView"),sl=_a(tl.transformDirection(_u),"v_normalWorld").normalize().toVar("normalWorld"),rl=di((e=>e.context.setupNormal()),"vec3").once()().mul(Qu).toVar("transformedNormalView"),il=rl.transformDirection(_u).toVar("transformedNormalWorld"),nl=di((e=>e.context.setupClearcoatNormal()),"vec3").once()().mul(Qu).toVar("transformedClearcoatNormalView"),ol=di((([e,t=Fu])=>{const s=Pi(t),r=e.div(Ri(s[0].dot(s[0]),s[1].dot(s[1]),s[2].dot(s[2])));return s.mul(r).xyz})),al=di((([e],t)=>{const s=t.renderer.nodes.modelNormalViewMatrix;if(null!==s)return s.transformDirection(e);const r=Vu.mul(e);return _u.transformDirection(r)})),ul=Xi(0).onReference((({material:e})=>e)).onRenderUpdate((({material:e})=>e.refractionRatio)),ll=Xu.negate().reflect(rl),dl=Xu.negate().refract(rl,ul),cl=ll.transformDirection(_u).toVar("reflectVector"),hl=dl.transformDirection(_u).toVar("reflectVector");class pl extends hu{static get type(){return"CubeTextureNode"}constructor(e,t=null,s=null,r=null){super(e,t,s,r),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===_?cl:e.mapping===N?hl:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),Ri(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.renderer.coordinateSystem!==v&&s.isRenderTargetTexture?t:Ri(t.x.negate(),t.yz)}generateUV(e,t){return t.build(e,"vec3")}}const gl=ui(pl);class ml extends qi{static get type(){return"BufferNode"}constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const fl=(e,t,s)=>ni(new ml(e,t,s));class xl extends br{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=super.generate(e),s=this.getNodeType();return e.format(t,"vec4",s)}}class yl extends ml{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=hr.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,s=this.getElementLength(),r=this.getElementType();if(1===s)for(let s=0;s<e.length;s++){t[4*s]=e[s]}else if("color"===r)for(let s=0;s<e.length;s++){const r=4*s,i=e[s];t[r]=i.r,t[r+1]=i.g,t[r+2]=i.b||0}else for(let s=0;s<e.length;s++){const r=4*s,i=e[s];t[r]=i.x,t[r+1]=i.y,t[r+2]=i.z||0,t[r+3]=i.w||0}}setup(e){const t=this.array.length;this._elementType=null===this.elementType?or(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let s=Float32Array;return"i"===this._elementType.charAt(0)?s=Int32Array:"u"===this._elementType.charAt(0)&&(s=Uint32Array),this.value=new s(4*t),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return ni(new xl(this,ni(e)))}}const Tl=(e,t)=>ni(new yl(e,t)),bl=(e,t)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),ni(new yl(e,t)));class _l extends br{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,s,r)}}class Nl extends Tr{static get type(){return"ReferenceNode"}constructor(e,t,s=null,r=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=r,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=hr.OBJECT}element(e){return ni(new _l(this,ni(e)))}setGroup(e){return this.group=e,this}setNodeType(e){let t=null;t=null!==this.count?fl(null,e,this.count):Array.isArray(this.getValueFromReference())?Tl(null,e):"texture"===e?pu(null):"cubeTexture"===e?gl(null):Xi(null,e),null!==this.group&&t.setGroup(this.group),this.node=t.getSelf()}getNodeType(e){return null===this.node&&this.updateValue(),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let e=1;e<t.length;e++)s=s[t[e]];return s}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const vl=(e,t,s)=>ni(new Nl(e,t,s)),Sl=(e,t,s,r)=>ni(new Nl(e,t,r,s));class Rl extends Nl{static get type(){return"MaterialReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.material=s,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}}const Al=(e,t,s)=>ni(new Rl(e,t,s)),Cl=di((e=>(!1===e.geometry.hasAttribute("tangent")&&e.geometry.computeTangents(),ou("tangent","vec4"))))(),El=Cl.xyz.toVar("tangentLocal"),wl=Ou.mul(wi(El,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),Ml=wl.transformDirection(_u).varying("v_tangentWorld").normalize().toVar("tangentWorld"),Bl=wl.toVar("transformedTangentView"),Ul=Bl.transformDirection(_u).normalize().toVar("transformedTangentWorld"),Fl=e=>e.mul(Cl.w).xyz,Pl=_a(Fl(Zu.cross(Cl)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),Il=_a(Fl(Ju.cross(El)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),Ll=_a(Fl(tl.cross(wl)),"v_bitangentView").normalize().toVar("bitangentView"),Vl=_a(Fl(sl.cross(Ml)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),Dl=Fl(rl.cross(Bl)).normalize().toVar("transformedBitangentView"),Ol=Dl.transformDirection(_u).normalize().toVar("transformedBitangentWorld"),Gl=Pi(wl,Ll,tl),zl=Xu.mul(Gl),kl=(e,t)=>e.sub(zl.mul(t)),$l=(()=>{let e=pn.cross(Xu);return e=e.cross(pn).normalize(),e=ra(e,rl,cn.mul(en.oneMinus()).oneMinus().pow2().pow2()).normalize(),e})(),Hl=di((e=>{const{eye_pos:t,surf_norm:s,mapN:r,uv:i}=e,n=t.dFdx(),o=t.dFdy(),a=i.dFdx(),u=i.dFdy(),l=s,d=o.cross(l),c=l.cross(n),h=d.mul(a.x).add(c.mul(u.x)),p=d.mul(a.y).add(c.mul(u.y)),g=h.dot(h).max(p.dot(p)),m=Qu.mul(g.inverseSqrt());return Un(h.mul(r.x,m),p.mul(r.y,m),l.mul(r.z)).normalize()}));class Wl extends Nr{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=S}setup(e){const{normalMapType:t,scaleNode:s}=this;let r=this.node.mul(2).sub(1);null!==s&&(r=Ri(r.xy.mul(s),r.z));let i=null;if(t===R)i=al(r);else if(t===S){i=!0===e.hasGeometryAttribute("tangent")?Gl.mul(r).normalize():Hl({eye_pos:qu,surf_norm:tl,mapN:r,uv:au()})}return i}}const jl=ui(Wl),ql=di((({textureNode:e,bumpScale:t})=>{const s=t=>e.cache().context({getUV:e=>t(e.uvNode||au()),forceUVContext:!0}),r=xi(s((e=>e)));return _i(xi(s((e=>e.add(e.dFdx())))).sub(r),xi(s((e=>e.add(e.dFdy())))).sub(r)).mul(t)})),Xl=di((e=>{const{surf_pos:t,surf_norm:s,dHdxy:r}=e,i=t.dFdx().normalize(),n=s,o=t.dFdy().normalize().cross(n),a=n.cross(i),u=i.dot(o).mul(Qu),l=u.sign().mul(r.x.mul(o).add(r.y.mul(a)));return u.abs().mul(s).sub(l).normalize()}));class Kl extends Nr{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=ql({textureNode:this.textureNode,bumpScale:e});return Xl({surf_pos:qu,surf_norm:tl,dHdxy:t})}}const Yl=ui(Kl),Ql=new Map;class Zl extends Tr{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let s=Ql.get(e);return void 0===s&&(s=Al(e,t),Ql.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let r=null;if(s===Zl.COLOR){const e=void 0!==t.color?this.getColor(s):Ri();r=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(s===Zl.OPACITY){const e=this.getFloat(s);r=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(s===Zl.SPECULAR_STRENGTH)r=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture("specular").r:xi(1);else if(s===Zl.SPECULAR_INTENSITY){const e=this.getFloat(s);r=t.specularMap?e.mul(this.getTexture(s).a):e}else if(s===Zl.SPECULAR_COLOR){const e=this.getColor(s);r=t.specularColorMap&&!0===t.specularColorMap.isTexture?e.mul(this.getTexture(s).rgb):e}else if(s===Zl.ROUGHNESS){const e=this.getFloat(s);r=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(s).g):e}else if(s===Zl.METALNESS){const e=this.getFloat(s);r=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(s).b):e}else if(s===Zl.EMISSIVE){const e=this.getFloat("emissiveIntensity"),i=this.getColor(s).mul(e);r=t.emissiveMap&&!0===t.emissiveMap.isTexture?i.mul(this.getTexture(s)):i}else if(s===Zl.NORMAL)t.normalMap?(r=jl(this.getTexture("normal"),this.getCache("normalScale","vec2")),r.normalMapType=t.normalMapType):r=t.bumpMap?Yl(this.getTexture("bump").r,this.getFloat("bumpScale")):tl;else if(s===Zl.CLEARCOAT){const e=this.getFloat(s);r=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===Zl.CLEARCOAT_ROUGHNESS){const e=this.getFloat(s);r=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===Zl.CLEARCOAT_NORMAL)r=t.clearcoatNormalMap?jl(this.getTexture(s),this.getCache(s+"Scale","vec2")):tl;else if(s===Zl.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));r=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(s===Zl.SHEEN_ROUGHNESS){const e=this.getFloat(s);r=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(s).a):e,r=r.clamp(.07,1)}else if(s===Zl.ANISOTROPY)if(t.anisotropyMap&&!0===t.anisotropyMap.isTexture){const e=this.getTexture(s);r=Fi(Ld.x,Ld.y,Ld.y.negate(),Ld.x).mul(e.rg.mul(2).sub(_i(1)).normalize().mul(e.b))}else r=Ld;else if(s===Zl.IRIDESCENCE_THICKNESS){const e=vl("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const i=vl("0","float",t.iridescenceThicknessRange);r=e.sub(i).mul(this.getTexture(s).g).add(i)}else r=e}else if(s===Zl.TRANSMISSION){const e=this.getFloat(s);r=t.transmissionMap?e.mul(this.getTexture(s).r):e}else if(s===Zl.THICKNESS){const e=this.getFloat(s);r=t.thicknessMap?e.mul(this.getTexture(s).g):e}else if(s===Zl.IOR)r=this.getFloat(s);else if(s===Zl.LIGHT_MAP)r=this.getTexture(s).rgb.mul(this.getFloat("lightMapIntensity"));else if(s===Zl.AO_MAP)r=this.getTexture(s).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const t=this.getNodeType(e);r=this.getCache(s,t)}return r}}Zl.ALPHA_TEST="alphaTest",Zl.COLOR="color",Zl.OPACITY="opacity",Zl.SHININESS="shininess",Zl.SPECULAR="specular",Zl.SPECULAR_STRENGTH="specularStrength",Zl.SPECULAR_INTENSITY="specularIntensity",Zl.SPECULAR_COLOR="specularColor",Zl.REFLECTIVITY="reflectivity",Zl.ROUGHNESS="roughness",Zl.METALNESS="metalness",Zl.NORMAL="normal",Zl.CLEARCOAT="clearcoat",Zl.CLEARCOAT_ROUGHNESS="clearcoatRoughness",Zl.CLEARCOAT_NORMAL="clearcoatNormal",Zl.EMISSIVE="emissive",Zl.ROTATION="rotation",Zl.SHEEN="sheen",Zl.SHEEN_ROUGHNESS="sheenRoughness",Zl.ANISOTROPY="anisotropy",Zl.IRIDESCENCE="iridescence",Zl.IRIDESCENCE_IOR="iridescenceIOR",Zl.IRIDESCENCE_THICKNESS="iridescenceThickness",Zl.IOR="ior",Zl.TRANSMISSION="transmission",Zl.THICKNESS="thickness",Zl.ATTENUATION_DISTANCE="attenuationDistance",Zl.ATTENUATION_COLOR="attenuationColor",Zl.LINE_SCALE="scale",Zl.LINE_DASH_SIZE="dashSize",Zl.LINE_GAP_SIZE="gapSize",Zl.LINE_WIDTH="linewidth",Zl.LINE_DASH_OFFSET="dashOffset",Zl.POINT_WIDTH="pointWidth",Zl.DISPERSION="dispersion",Zl.LIGHT_MAP="light",Zl.AO_MAP="ao";const Jl=li(Zl,Zl.ALPHA_TEST),ed=li(Zl,Zl.COLOR),td=li(Zl,Zl.SHININESS),sd=li(Zl,Zl.EMISSIVE),rd=li(Zl,Zl.OPACITY),id=li(Zl,Zl.SPECULAR),nd=li(Zl,Zl.SPECULAR_INTENSITY),od=li(Zl,Zl.SPECULAR_COLOR),ad=li(Zl,Zl.SPECULAR_STRENGTH),ud=li(Zl,Zl.REFLECTIVITY),ld=li(Zl,Zl.ROUGHNESS),dd=li(Zl,Zl.METALNESS),cd=li(Zl,Zl.NORMAL).context({getUV:null}),hd=li(Zl,Zl.CLEARCOAT),pd=li(Zl,Zl.CLEARCOAT_ROUGHNESS),gd=li(Zl,Zl.CLEARCOAT_NORMAL).context({getUV:null}),md=li(Zl,Zl.ROTATION),fd=li(Zl,Zl.SHEEN),xd=li(Zl,Zl.SHEEN_ROUGHNESS),yd=li(Zl,Zl.ANISOTROPY),Td=li(Zl,Zl.IRIDESCENCE),bd=li(Zl,Zl.IRIDESCENCE_IOR),_d=li(Zl,Zl.IRIDESCENCE_THICKNESS),Nd=li(Zl,Zl.TRANSMISSION),vd=li(Zl,Zl.THICKNESS),Sd=li(Zl,Zl.IOR),Rd=li(Zl,Zl.ATTENUATION_DISTANCE),Ad=li(Zl,Zl.ATTENUATION_COLOR),Cd=li(Zl,Zl.LINE_SCALE),Ed=li(Zl,Zl.LINE_DASH_SIZE),wd=li(Zl,Zl.LINE_GAP_SIZE),Md=li(Zl,Zl.LINE_WIDTH),Bd=li(Zl,Zl.LINE_DASH_OFFSET),Ud=li(Zl,Zl.POINT_WIDTH),Fd=li(Zl,Zl.DISPERSION),Pd=li(Zl,Zl.LIGHT_MAP),Id=li(Zl,Zl.AO_MAP),Ld=Xi(new t).onReference((function(e){return e.material})).onRenderUpdate((function({material:e}){this.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation))}));class Vd extends Nr{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if("fragment"===e.shaderStage)return _a(e.context.mvp);const t=this.positionNode||$u,s=e.renderer.nodes.modelViewMatrix||Ou;return Tu.mul(s).mul(t)}}const Dd=ui(Vd);class Od extends Tr{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let r,i;if(s===Od.VERTEX)r=e.getVertexIndex();else if(s===Od.INSTANCE)r=e.getInstanceIndex();else if(s===Od.DRAW)r=e.getDrawIndex();else{if(s!==Od.INVOCATION_LOCAL)throw new Error("THREE.IndexNode: Unknown scope: "+s);r=e.getInvocationLocalIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)i=r;else{i=_a(this).build(e,t)}return i}}Od.VERTEX="vertex",Od.INSTANCE="instance",Od.INVOCATION_LOCAL="invocationLocal",Od.DRAW="draw";const Gd=li(Od,Od.VERTEX),zd=li(Od,Od.INSTANCE),kd=li(Od,Od.INVOCATION_LOCAL),$d=li(Od,Od.DRAW);class Hd extends Tr{static get type(){return"InstanceNode"}constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=hr.FRAME,this.buffer=null,this.bufferColor=null}setup(e){let t=this.instanceMatrixNode,s=this.instanceColorNode;const r=this.instanceMesh;if(null===t){const e=r.instanceMatrix;if(r.count<=1e3)t=fl(e.array,"mat4",Math.max(r.count,1)).element(zd);else{const s=new A(e.array,16,1);this.buffer=s;const r=e.usage===g?ka:za,i=[r(s,"vec4",16,0),r(s,"vec4",16,4),r(s,"vec4",16,8),r(s,"vec4",16,12)];t=Ii(...i)}this.instanceMatrixNode=t}const i=r.instanceColor;if(i&&null===s){const e=new C(i.array,3),t=i.usage===g?ka:za;this.bufferColor=e,s=Ri(t(e,"vec3",3,0)),this.instanceColorNode=s}const n=t.mul($u).xyz;if($u.assign(n),e.hasGeometryAttribute("normal")){const e=ol(Ju,t);Ju.assign(e)}null!==this.instanceColorNode&&Qi("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==g&&null!=this.buffer&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==g&&null!=this.bufferColor&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const Wd=ui(Hd);class jd extends Tr{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){null===this.batchingIdNode&&(null===e.getDrawIndex()?this.batchingIdNode=zd:this.batchingIdNode=$d);const t=di((([e])=>{const t=lu(gu(this.batchMesh._indirectTexture),0),s=yi(e).modInt(yi(t)),r=yi(e).div(yi(t));return gu(this.batchMesh._indirectTexture,Ni(s,r)).x})).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),s=t(yi(this.batchingIdNode)),r=this.batchMesh._matricesTexture,i=lu(gu(r),0),n=xi(s).mul(4).toInt().toVar(),o=n.modInt(i),a=n.div(yi(i)),u=Ii(gu(r,Ni(o,a)),gu(r,Ni(o.add(1),a)),gu(r,Ni(o.add(2),a)),gu(r,Ni(o.add(3),a))),l=this.batchMesh._colorsTexture;if(null!==l){const e=di((([e])=>{const t=lu(gu(l),0).x,s=e,r=s.modInt(t),i=s.div(t);return gu(l,Ni(r,i)).rgb})).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),t=e(s);Qi("vec3","vBatchColor").assign(t)}const d=Pi(u);$u.assign(u.mul($u));const c=Ju.div(Ri(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),h=d.mul(c).xyz;Ju.assign(h),e.hasGeometryAttribute("tangent")&&El.mulAssign(d)}}const qd=ui(jd),Xd=new WeakMap;class Kd extends Tr{static get type(){return"SkinningNode"}constructor(e,t=!1){let s,r,i;super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=hr.OBJECT,this.skinIndexNode=ou("skinIndex","uvec4"),this.skinWeightNode=ou("skinWeight","vec4"),t?(s=vl("bindMatrix","mat4"),r=vl("bindMatrixInverse","mat4"),i=Sl("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(s=Xi(e.bindMatrix,"mat4"),r=Xi(e.bindMatrixInverse,"mat4"),i=fl(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=s,this.bindMatrixInverseNode=r,this.boneMatricesNode=i,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=$u){const{skinIndexNode:s,skinWeightNode:r,bindMatrixNode:i,bindMatrixInverseNode:n}=this,o=e.element(s.x),a=e.element(s.y),u=e.element(s.z),l=e.element(s.w),d=i.mul(t),c=Un(o.mul(r.x).mul(d),a.mul(r.y).mul(d),u.mul(r.z).mul(d),l.mul(r.w).mul(d));return n.mul(c).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=Ju){const{skinIndexNode:s,skinWeightNode:r,bindMatrixNode:i,bindMatrixInverseNode:n}=this,o=e.element(s.x),a=e.element(s.y),u=e.element(s.z),l=e.element(s.w);let d=Un(r.x.mul(o),r.y.mul(a),r.z.mul(u),r.w.mul(l));return d=n.mul(d).mul(i),d.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return null===this.previousBoneMatricesNode&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Sl("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Hu)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&Hu.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if($u.assign(t),e.hasGeometryAttribute("normal")){const t=this.getSkinnedNormal();Ju.assign(t),e.hasGeometryAttribute("tangent")&&El.assign(t)}}generate(e,t){if("void"!==t)return $u.build(e,t)}update(e){const t=(this.useReference?e.object:this.skinnedMesh).skeleton;Xd.get(t)!==e.frameId&&(Xd.set(t,e.frameId),null!==this.previousBoneMatricesNode&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const Yd=e=>ni(new Kd(e)),Qd=e=>ni(new Kd(e,!0));class Zd extends Tr{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const s={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],r=!0!==t.isNode&&t.name||this.getVarName(e),i=!0!==t.isNode&&t.type||"int";s[r]=Ja(r,i)}const r=e.addStack();return t.returnsNode=this.params[this.params.length-1](s,r,e),t.stackNode=r,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,r=t.stackNode;for(let t=0,r=s.length-1;t<r;t++){const r=s[t];let i=null,n=null,o=null,a=null,u=null,l=null;r.isNode?(a="int",o=this.getVarName(t),i="0",n=r.build(e,a),u="<"):(a=r.type||"int",o=r.name||this.getVarName(t),i=r.start,n=r.end,u=r.condition,l=r.update,"number"==typeof i?i=i.toString():i&&i.isNode&&(i=i.build(e,a)),"number"==typeof n?n=n.toString():n&&n.isNode&&(n=n.build(e,a)),void 0!==i&&void 0===n?(i+=" - 1",n="0",u=">="):void 0!==n&&void 0===i&&(i="0",u="<"),void 0===u&&(u=Number(i)>Number(n)?">=":"<"));const d={start:i,end:n,condition:u},c=d.start,h=d.end;let p="",g="",m="";l||(l="int"===a||"uint"===a?u.includes("<")?"++":"--":u.includes("<")?"+= 1.":"-= 1."),p+=e.getVar(a,o)+" = "+c,g+=o+" "+u+" "+h,m+=o+" "+l;const f=`for ( ${p}; ${g}; ${m} )`;e.addFlowCode((0===t?"\n":"")+e.tab+f+" {\n\n").addFlowTab()}const i=r.build(e,"void"),n=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+i);for(let t=0,s=this.params.length-1;t<s;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),n}}const Jd=(...e)=>ni(new Zd(ai(e,"int"))).append(),ec=()=>Ja("continue").append(),tc=()=>Ja("break").append(),sc=(...e)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),Jd(...e)),rc=new WeakMap,ic=new r,nc=di((({bufferMap:e,influence:t,stride:s,width:r,depth:i,offset:n})=>{const o=yi(Gd).mul(s).add(n),a=o.div(r),u=o.sub(a.mul(r));return gu(e,Ni(u,a)).depth(i).mul(t)}));class oc extends Tr{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=Xi(1),this.updateType=hr.OBJECT}setup(e){const{geometry:s}=e,r=void 0!==s.morphAttributes.position,i=s.hasAttribute("normal")&&void 0!==s.morphAttributes.normal,n=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,o=void 0!==n?n.length:0,{texture:a,stride:u,size:l}=function(e){const s=void 0!==e.morphAttributes.position,r=void 0!==e.morphAttributes.normal,i=void 0!==e.morphAttributes.color,n=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,o=void 0!==n?n.length:0;let a=rc.get(e);if(void 0===a||a.count!==o){void 0!==a&&a.texture.dispose();const u=e.morphAttributes.position||[],l=e.morphAttributes.normal||[],d=e.morphAttributes.color||[];let c=0;!0===s&&(c=1),!0===r&&(c=2),!0===i&&(c=3);let h=e.attributes.position.count*c,p=1;const g=4096;h>g&&(p=Math.ceil(h/g),h=g);const m=new Float32Array(h*p*4*o),f=new E(m,h,p,o);f.type=w,f.needsUpdate=!0;const x=4*c;for(let T=0;T<o;T++){const b=u[T],_=l[T],N=d[T],v=h*p*4*T;for(let S=0;S<b.count;S++){const R=S*x;!0===s&&(ic.fromBufferAttribute(b,S),m[v+R+0]=ic.x,m[v+R+1]=ic.y,m[v+R+2]=ic.z,m[v+R+3]=0),!0===r&&(ic.fromBufferAttribute(_,S),m[v+R+4]=ic.x,m[v+R+5]=ic.y,m[v+R+6]=ic.z,m[v+R+7]=0),!0===i&&(ic.fromBufferAttribute(N,S),m[v+R+8]=ic.x,m[v+R+9]=ic.y,m[v+R+10]=ic.z,m[v+R+11]=4===N.itemSize?ic.w:1)}}function y(){f.dispose(),rc.delete(e),e.removeEventListener("dispose",y)}a={count:o,texture:f,stride:c,size:new t(h,p)},rc.set(e,a),e.addEventListener("dispose",y)}return a}(s);!0===r&&$u.mulAssign(this.morphBaseInfluence),!0===i&&Ju.mulAssign(this.morphBaseInfluence);const d=yi(l.width);Jd(o,(({i:e})=>{const t=xi(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?t.assign(gu(this.mesh.morphTexture,Ni(yi(e).add(1),yi(zd))).r):t.assign(vl("morphTargetInfluences","float").element(e).toVar()),!0===r&&$u.addAssign(nc({bufferMap:a,influence:t,stride:u,width:d,depth:e,offset:yi(0)})),!0===i&&Ju.addAssign(nc({bufferMap:a,influence:t,stride:u,width:d,depth:e,offset:yi(1)}))}))}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const ac=ui(oc),uc=(e,t)=>{for(const s of t)if(s.isAnalyticLightNode&&s.light.id===e)return s;return null};class lc extends Tr{static get type(){return"LightsNode"}constructor(e=[]){super("vec3"),this.totalDiffuseNode=Ri().toVar("totalDiffuse"),this.totalSpecularNode=Ri().toVar("totalSpecular"),this.outgoingLightNode=Ri().toVar("outgoingLight"),this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(e);const t=[];for(const e of this._lightNodes)t.push(e.getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const s of t.nodes)s.build(e)}setupLightsNode(e){const t=[],s=this._lightNodes,r=(e=>e.sort(((e,t)=>e.id-t.id)))(this._lights),i=e.renderer.nodes.library;for(const e of r)if(e.isNode)t.push(ni(e));else{let r=null;if(null!==s&&(r=uc(e.id,s)),null===r){const s=i.getLightNodeClass(e.constructor);if(null===s){console.warn(`LightsNode.setupNodeLights: Light node not found for ${e.constructor.name}`);continue}t.push(ni(new s(e)))}}this._lightNodes=t}setup(e){null===this._lightNodes&&this.setupLightsNode(e);const t=e.context,s=t.lightingModel;let r=this.outgoingLightNode;if(s){const{_lightNodes:i,totalDiffuseNode:n,totalSpecularNode:o}=this;t.outgoingLight=r;const a=e.addStack();e.getDataFromNode(this).nodes=a.nodes,s.start(t,a,e);for(const t of i)t.build(e);s.indirect(t,a,e);const{backdrop:u,backdropAlpha:l}=t,{directDiffuse:d,directSpecular:c,indirectDiffuse:h,indirectSpecular:p}=t.reflectedLight;let g=d.add(h);null!==u&&(g=Ri(null!==l?l.mix(g,u):u),t.material.transparent=!0),n.assign(g),o.assign(c.add(p)),r.assign(n.add(o)),s.finish(t,a,e),r=r.bypass(e.removeStack())}return r}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}}const dc=ui(lc);class cc extends Tr{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class hc extends cc{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class pc extends ma{static get type(){return"LightingContextNode"}constructor(e,t=null,s=null,r=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=r,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s={directDiffuse:Ri().toVar("directDiffuse"),directSpecular:Ri().toVar("directSpecular"),indirectDiffuse:Ri().toVar("indirectDiffuse"),indirectSpecular:Ri().toVar("indirectSpecular")};return{radiance:Ri().toVar("radiance"),irradiance:Ri().toVar("irradiance"),iblIrradiance:Ri().toVar("iblIrradiance"),ambientOcclusion:xi(1).toVar("ambientOcclusion"),reflectedLight:s,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const gc=ui(pc);class mc extends cc{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let fc,xc;class yc extends Tr{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===yc.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=hr.NONE;return this.scope!==yc.SIZE&&this.scope!==yc.VIEWPORT||(e=hr.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===yc.VIEWPORT?null!==t?xc.copy(t.viewport):(e.getViewport(xc),xc.multiplyScalar(e.getPixelRatio())):null!==t?(fc.width=t.width,fc.height=t.height):e.getDrawingBufferSize(fc)}setup(){const e=this.scope;let s=null;return s=e===yc.SIZE?Xi(fc||(fc=new t)):e===yc.VIEWPORT?Xi(xc||(xc=new r)):_i(_c.div(bc)),s}generate(e){if(this.scope===yc.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(bc).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}yc.COORDINATE="coordinate",yc.VIEWPORT="viewport",yc.SIZE="size",yc.UV="uv";const Tc=li(yc,yc.UV),bc=li(yc,yc.SIZE),_c=li(yc,yc.COORDINATE),Nc=li(yc,yc.VIEWPORT),vc=Nc.zw,Sc=_c.sub(Nc.xy),Rc=Sc.div(vc),Ac=di((()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),bc)),"vec2").once()(),Cc=di((()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),Tc)),"vec2").once()(),Ec=di((()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),Tc.flipY())),"vec2").once()(),wc=new t;class Mc extends hu{static get type(){return"ViewportTextureNode"}constructor(e=Tc,t=null,s=null){null===s&&((s=new M).minFilter=B),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=hr.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(wc);const s=this.value;s.image.width===wc.width&&s.image.height===wc.height||(s.image.width=wc.width,s.image.height=wc.height,s.needsUpdate=!0);const r=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=r}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const Bc=ui(Mc),Uc=ui(Mc,null,null,{generateMipmaps:!0});let Fc=null;class Pc extends Mc{static get type(){return"ViewportDepthTextureNode"}constructor(e=Tc,t=null){null===Fc&&(Fc=new U),super(e,t,Fc)}}const Ic=ui(Pc);class Lc extends Tr{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===Lc.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,s=this.valueNode;let r=null;if(t===Lc.DEPTH_BASE)null!==s&&(r=zc().assign(s));else if(t===Lc.DEPTH)r=e.isPerspectiveCamera?Oc(qu.z,fu,xu):Vc(qu.z,fu,xu);else if(t===Lc.LINEAR_DEPTH)if(null!==s)if(e.isPerspectiveCamera){const e=Gc(s,fu,xu);r=Vc(e,fu,xu)}else r=s;else r=Vc(qu.z,fu,xu);return r}}Lc.DEPTH_BASE="depthBase",Lc.DEPTH="depth",Lc.LINEAR_DEPTH="linearDepth";const Vc=(e,t,s)=>e.add(t).div(t.sub(s)),Dc=(e,t,s)=>t.sub(s).mul(e).sub(t),Oc=(e,t,s)=>t.add(e).mul(s).div(s.sub(t).mul(e)),Gc=(e,t,s)=>t.mul(s).div(s.sub(t).mul(e).sub(s)),zc=ui(Lc,Lc.DEPTH_BASE),kc=li(Lc,Lc.DEPTH),$c=ui(Lc,Lc.LINEAR_DEPTH),Hc=$c(Ic());kc.assign=e=>zc(e);class Wc extends Tr{static get type(){return"ClippingNode"}constructor(e=Wc.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{localClipIntersection:s,localClippingCount:r,globalClippingCount:i}=t,n=i+r,o=s?n-r:n;return this.scope===Wc.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(t.planes,n,o):this.setupDefault(t.planes,n,o)}setupAlphaToCoverage(e,t,s){return di((()=>{const r=Tl(e),i=Yi("float","distanceToPlane"),n=Yi("float","distanceToGradient"),o=Yi("float","clipOpacity");let a;if(o.assign(1),Jd(s,(({i:e})=>{a=r.element(e),i.assign(qu.dot(a.xyz).negate().add(a.w)),n.assign(i.fwidth().div(2)),o.mulAssign(aa(n.negate(),n,i)),o.equal(0).discard()})),s<t){const e=Yi("float","unionclipOpacity");e.assign(1),Jd({start:s,end:t},(({i:t})=>{a=r.element(t),i.assign(qu.dot(a.xyz).negate().add(a.w)),n.assign(i.fwidth().div(2)),e.mulAssign(aa(n.negate(),n,i).oneMinus())})),o.mulAssign(e.oneMinus())}Zi.a.mulAssign(o),Zi.a.equal(0).discard()}))()}setupDefault(e,t,s){return di((()=>{const r=Tl(e);let i;if(Jd(s,(({i:e})=>{i=r.element(e),qu.dot(i.xyz).greaterThan(i.w).discard()})),s<t){const e=Yi("bool","clipped");e.assign(!0),Jd({start:s,end:t},(({i:t})=>{i=r.element(t),e.assign(qu.dot(i.xyz).greaterThan(i.w).and(e))})),e.discard()}}))()}}Wc.ALPHA_TO_COVERAGE="alphaToCoverage",Wc.DEFAULT="default";class jc extends F{static get type(){return"NodeMaterial"}constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+ir(this)}build(e){this.setup(e)}setupObserver(e){return new rr(e)}setup(e){let t;e.context.setupNormal=()=>this.setupNormal(e),e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),e.addFlow("vertex",e.removeStack()),e.addStack();const s=this.setupClipping(e);if(!0===this.depthWrite&&this.setupDepth(e),null===this.fragmentNode){this.setupDiffuseColor(e),this.setupVariants(e);const r=this.setupLighting(e);null!==s&&e.stack.add(s);const i=wi(r,Zi.a).max(0);t=this.setupOutput(e,i),xn.assign(t),null!==this.outputNode&&(t=this.outputNode);if(null!==e.renderer.getRenderTarget()){const s=e.renderer.getMRT(),r=this.mrtNode;null!==s?(t=s,null!==r&&(t=s.merge(r))):null!==r&&(t=r)}}else{let s=this.fragmentNode;!0!==s.isOutputStructNode&&(s=wi(s)),t=this.setupOutput(e,s)}e.stack.outputNode=t,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(null===e.clippingContext)return null;const{globalClippingCount:t,localClippingCount:s}=e.clippingContext;let r=null;return(t||s)&&(this.alphaToCoverage?r=ni(new Wc(Wc.ALPHA_TO_COVERAGE)):e.stack.add(ni(new Wc))),r}setupDepth(e){const{renderer:t}=e;let s=this.depthNode;if(null===s){const e=t.getMRT();if(e&&e.has("depth"))s=e.get("depth");else if(!0===t.logarithmicDepthBuffer){s=Dd().w.add(1).log2().mul(yu).mul(.5)}}null!==s&&kc.assign(s).append()}setupPosition(e){const{object:t}=e,s=t.geometry;if(e.addStack(),(s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&ac(t).append(),!0===t.isSkinnedMesh&&Qd(t).append(),this.displacementMap){const e=Al("displacementMap","texture"),t=Al("displacementScale","float"),s=Al("displacementBias","float");$u.addAssign(Ju.normalize().mul(e.x.mul(t).add(s)))}t.isBatchedMesh&&qd(t).append(),t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&Wd(t).append(),null!==this.positionNode&&$u.assign(this.positionNode);const r=Dd();return e.context.vertex=e.removeStack(),e.context.mvp=r,r}setupDiffuseColor({object:e,geometry:t}){let s=this.colorNode?wi(this.colorNode):ed;if(!0===this.vertexColors&&t.hasAttribute("color")&&(s=wi(s.xyz.mul(ou("color","vec3")),s.a)),e.instanceColor){s=Qi("vec3","vInstanceColor").mul(s)}if(e.isBatchedMesh&&e._colorsTexture){s=Qi("vec3","vBatchColor").mul(s)}Zi.assign(s);const r=this.opacityNode?xi(this.opacityNode):rd;if(Zi.a.assign(Zi.a.mul(r)),null!==this.alphaTestNode||this.alphaTest>0){const e=null!==this.alphaTestNode?xi(this.alphaTestNode):Jl;Zi.a.lessThanEqual(e).discard()}!1===this.transparent&&this.blending===P&&!1===this.alphaToCoverage&&Zi.a.assign(1)}setupVariants(){}setupOutgoingLight(){return!0===this.lights?Ri(0):Zi.rgb}setupNormal(){return this.normalNode?Ri(this.normalNode):cd}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?Al("envMap","cubeTexture"):Al("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new mc(Pd)),t}setupLights(e){const t=[],s=this.setupEnvironment(e);s&&s.isLightingNode&&t.push(s);const r=this.setupLightMap(e);if(r&&r.isLightingNode&&t.push(r),null!==this.aoNode||e.material.aoMap){const e=null!==this.aoNode?this.aoNode:Id;t.push(new hc(e))}let i=this.lightsNode||e.lightsNode;return t.length>0&&(i=dc([...i.getLights(),...t])),i}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:r,emissiveNode:i}=this,n=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let o=this.setupOutgoingLight(e);if(n&&n.getScope().getLights().length>0){const t=this.setupLightingModel(e);o=gc(n,t,s,r)}else null!==s&&(o=Ri(null!==r?ra(o,s,r):s));return(i&&!0===i.isNode||t.emissive&&!0===t.emissive.isColor)&&(Ji.assign(Ri(i||sd)),o=o.add(Ji)),o}setupOutput(e,t){if(!0===this.fog){const s=e.fogNode;s&&(t=wi(s.mix(t.rgb,s.colorNode),t.a))}return t}setDefaultValues(e){for(const t in e){const s=e[t];void 0===this[t]&&(this[t]=s,s&&s.clone&&(this[t]=s.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const s=F.prototype.toJSON.call(this,e),r=nr(this);s.inputNodes={};for(const{property:t,childNode:i}of r)s.inputNodes[t]=i.toJSON(e).uuid;function i(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(t){const t=i(e.textures),r=i(e.images),n=i(e.nodes);t.length>0&&(s.textures=t),r.length>0&&(s.images=r),n.length>0&&(s.nodes=n)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.depthNode=e.depthNode,this.shadowNode=e.shadowNode,this.shadowPositionNode=e.shadowPositionNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const qc=new I;class Xc extends jc{static get type(){return"InstancedPointsNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.pointWidth=1,this.pointColorNode=null,this.pointWidthNode=null,this.setDefaultValues(qc),this.setupShaders(),this.setValues(e)}setup(e){this.setupShaders(),super.setup(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor;this.vertexNode=di((()=>{const e=ou("instancePosition").xyz,t=wi(Ou.mul(wi(e,1))),s=Nc.z.div(Nc.w),r=Tu.mul(t),i=ku.xy.toVar();return i.mulAssign(this.pointWidthNode?this.pointWidthNode:Ud),i.assign(i.div(Nc.z)),i.y.assign(i.y.mul(s)),i.assign(i.mul(r.w)),r.addAssign(wi(i,0,0)),r}))(),this.fragmentNode=di((()=>{const s=xi(1).toVar(),r=sa(au().mul(2).sub(1));if(e){const e=xi(r.fwidth()).toVar();s.assign(aa(e.oneMinus(),e.add(1),r).oneMinus())}else r.greaterThan(1).discard();let i;if(this.pointColorNode)i=this.pointColorNode;else if(t){i=ou("instanceColor").mul(ed)}else i=ed;return s.mulAssign(rd),wi(i,s)}))()}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.needsUpdate=!0)}}const Kc=new L;class Yc extends jc{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(Kc),this.setValues(e)}}const Qc=new V;class Zc extends jc{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(Qc),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode,t=this.dashScaleNode?xi(this.dashScaleNode):Cd,s=this.dashSizeNode?xi(this.dashSizeNode):Ed,r=this.dashSizeNode?xi(this.dashGapNode):wd;yn.assign(s),Tn.assign(r);const i=_a(ou("lineDistance").mul(t));(e?i.add(e):i).mod(yn.add(Tn)).greaterThan(yn).discard()}}const Jc=new V;class eh extends jc{static get type(){return"Line2NodeMaterial"}constructor(e={}){super(),this.lights=!1,this.setDefaultValues(Jc),this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.useDash=e.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setup(e){this.setupShaders(),super.setup(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor,s=this.dashed,r=this.worldUnits,i=di((({start:e,end:t})=>{const s=Tu.element(2).element(2),r=Tu.element(3).element(2).mul(-.5).div(s).sub(e.z).div(t.z.sub(e.z));return wi(ra(e.xyz,t.xyz,r),t.w)})).setLayout({name:"trimSegment",type:"vec4",inputs:[{name:"start",type:"vec4"},{name:"end",type:"vec4"}]});this.vertexNode=di((()=>{const e=ou("instanceStart"),t=ou("instanceEnd"),n=wi(Ou.mul(wi(e,1))).toVar("start"),o=wi(Ou.mul(wi(t,1))).toVar("end");r&&(Qi("vec3","worldStart").assign(n.xyz),Qi("vec3","worldEnd").assign(o.xyz));const a=Nc.z.div(Nc.w),u=Tu.element(2).element(3).equal(-1);gi(u,(()=>{gi(n.z.lessThan(0).and(o.z.greaterThan(0)),(()=>{o.assign(i({start:n,end:o}))})).ElseIf(o.z.lessThan(0).and(n.z.greaterThanEqual(0)),(()=>{n.assign(i({start:o,end:n}))}))}));const l=Tu.mul(n),d=Tu.mul(o),c=l.xyz.div(l.w),h=d.xyz.div(d.w),p=h.xy.sub(c.xy).toVar();p.x.assign(p.x.mul(a)),p.assign(p.normalize());const g=wi().toVar();if(r){const e=o.xyz.sub(n.xyz).normalize(),t=ra(n.xyz,o.xyz,.5).normalize(),r=e.cross(t).normalize(),i=e.cross(r),a=Qi("vec4","worldPos");a.assign(ku.y.lessThan(.5).select(n,o));const u=Md.mul(.5);a.addAssign(wi(ku.x.lessThan(0).select(r.mul(u),r.mul(u).negate()),0)),s||(a.addAssign(wi(ku.y.lessThan(.5).select(e.mul(u).negate(),e.mul(u)),0)),a.addAssign(wi(i.mul(u),0)),gi(ku.y.greaterThan(1).or(ku.y.lessThan(0)),(()=>{a.subAssign(wi(i.mul(2).mul(u),0))}))),g.assign(Tu.mul(a));const l=Ri().toVar();l.assign(ku.y.lessThan(.5).select(c,h)),g.z.assign(l.z.mul(g.w))}else{const e=_i(p.y,p.x.negate()).toVar("offset");p.x.assign(p.x.div(a)),e.x.assign(e.x.div(a)),e.assign(ku.x.lessThan(0).select(e.negate(),e)),gi(ku.y.lessThan(0),(()=>{e.assign(e.sub(p))})).ElseIf(ku.y.greaterThan(1),(()=>{e.assign(e.add(p))})),e.assign(e.mul(Md)),e.assign(e.div(Nc.w)),g.assign(ku.y.lessThan(.5).select(l,d)),e.assign(e.mul(g.w)),g.assign(g.add(wi(e,0,0)))}return g}))();const n=di((({p1:e,p2:t,p3:s,p4:r})=>{const i=e.sub(s),n=r.sub(s),o=t.sub(e),a=i.dot(n),u=n.dot(o),l=i.dot(o),d=n.dot(n),c=o.dot(o).mul(d).sub(u.mul(u)),h=a.mul(u).sub(l.mul(d)).div(c).clamp(),p=a.add(u.mul(h)).div(d).clamp();return _i(h,p)}));this.fragmentNode=di((()=>{const i=au();if(s){const e=this.offsetNode?xi(this.offsetNodeNode):Bd,t=this.dashScaleNode?xi(this.dashScaleNode):Cd,s=this.dashSizeNode?xi(this.dashSizeNode):Ed,r=this.dashSizeNode?xi(this.dashGapNode):wd;yn.assign(s),Tn.assign(r);const n=ou("instanceDistanceStart"),o=ou("instanceDistanceEnd"),a=ku.y.lessThan(.5).select(t.mul(n),Cd.mul(o)),u=_a(a.add(Bd)),l=e?u.add(e):u;i.y.lessThan(-1).or(i.y.greaterThan(1)).discard(),l.mod(yn.add(Tn)).greaterThan(yn).discard()}const o=xi(1).toVar("alpha");if(r){const t=Qi("vec3","worldStart"),r=Qi("vec3","worldEnd"),i=Qi("vec4","worldPos").xyz.normalize().mul(1e5),a=r.sub(t),u=n({p1:t,p2:r,p3:Ri(0,0,0),p4:i}),l=t.add(a.mul(u.x)),d=i.mul(u.y),c=l.sub(d).length().div(Md);if(!s)if(e){const e=c.fwidth();o.assign(aa(e.negate().add(.5),e.add(.5),c).oneMinus())}else c.greaterThan(.5).discard()}else if(e){const e=i.x,t=i.y.greaterThan(0).select(i.y.sub(1),i.y.add(1)),s=e.mul(e).add(t.mul(t)),r=xi(s.fwidth()).toVar("dlen");gi(i.y.abs().greaterThan(1),(()=>{o.assign(aa(r.oneMinus(),r.add(1),s).oneMinus())}))}else gi(i.y.abs().greaterThan(1),(()=>{const e=i.x,t=i.y.greaterThan(0).select(i.y.sub(1),i.y.add(1));e.mul(e).add(t.mul(t)).greaterThan(1).discard()}));let a;if(this.lineColorNode)a=this.lineColorNode;else if(t){const e=ou("instanceColorStart"),t=ou("instanceColorEnd");a=ku.y.lessThan(.5).select(e,t).mul(ed)}else a=ed;return wi(a,o)}))()}get worldUnits(){return this.useWorldUnits}set worldUnits(e){this.useWorldUnits!==e&&(this.useWorldUnits=e,this.needsUpdate=!0)}get dashed(){return this.useDash}set dashed(e){this.useDash!==e&&(this.useDash=e,this.needsUpdate=!0)}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.needsUpdate=!0)}}const th=e=>ni(e).mul(.5).add(.5),sh=e=>ni(e).mul(2).sub(1),rh=new D;class ih extends jc{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(rh),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?xi(this.opacityNode):rd;Zi.assign(wi(th(rl),e))}}class nh extends Nr{static get type(){return"EquirectUVNode"}constructor(e=ju){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(2*Math.PI)).add(.5),s=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return _i(t,s)}}const oh=ui(nh);class ah extends O{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,r=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i=new G(5,5,5),n=oh(ju),o=new jc;o.colorNode=pu(t,n,0),o.side=b,o.blending=z;const a=new k(i,o),u=new $;u.add(a),t.minFilter===B&&(t.minFilter=H);const l=new W(1,10,this),d=e.getMRT();return e.setMRT(null),l.update(e,u),e.setMRT(d),t.minFilter=s,t.currentGenerateMipmaps=r,a.geometry.dispose(),a.material.dispose(),this}}const uh=new WeakMap;class lh extends Nr{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=gl();const t=new j;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=hr.RENDER}updateBefore(e){const{renderer:t,material:s}=e,r=this.envNode;if(r.isTextureNode||r.isMaterialReferenceNode){const e=r.isTextureNode?r.value:s[r.property];if(e&&e.isTexture){const s=e.mapping;if(s===q||s===X){if(uh.has(e)){const t=uh.get(e);ch(t,e.mapping),this._cubeTexture=t}else{const s=e.image;if(function(e){return null!=e&&e.height>0}(s)){const r=new ah(s.height);r.fromEquirectangularTexture(t,e),ch(r.texture,e.mapping),this._cubeTexture=r.texture,uh.set(e,r.texture),e.addEventListener("dispose",dh)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function dh(e){const t=e.target;t.removeEventListener("dispose",dh);const s=uh.get(t);void 0!==s&&(uh.delete(t),s.dispose())}function ch(e,t){t===q?e.mapping=_:t===X&&(e.mapping=N)}const hh=ui(lh);class ph extends cc{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=hh(this.envNode)}}class gh extends cc{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=xi(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class mh{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class fh extends mh{constructor(){super()}indirect(e,t,s){const r=e.ambientOcclusion,i=e.reflectedLight,n=s.context.irradianceLightMap;i.indirectDiffuse.assign(wi(0)),n?i.indirectDiffuse.addAssign(n):i.indirectDiffuse.addAssign(wi(1,1,1,0)),i.indirectDiffuse.mulAssign(r),i.indirectDiffuse.mulAssign(Zi.rgb)}finish(e,t,s){const r=s.material,i=e.outgoingLight,n=s.context.environment;if(n)switch(r.combine){case Q:i.rgb.assign(ra(i.rgb,i.rgb.mul(n.rgb),ad.mul(ud)));break;case Y:i.rgb.assign(ra(i.rgb,n.rgb,ad.mul(ud)));break;case K:i.rgb.addAssign(n.rgb.mul(ad.mul(ud)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",r.combine)}}}const xh=new Z;class yh extends jc{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(xh),this.setValues(e)}setupNormal(){return tl}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ph(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new gh(Pd)),t}setupOutgoingLight(){return Zi.rgb}setupLightingModel(){return new fh}}const Th=di((({f0:e,f90:t,dotVH:s})=>{const r=s.mul(-5.55473).sub(6.98316).mul(s).exp2();return e.mul(r.oneMinus()).add(t.mul(r))})),bh=di((e=>e.diffuseColor.mul(1/Math.PI))),_h=di((({dotNH:e})=>fn.mul(xi(.5)).add(1).mul(xi(1/Math.PI)).mul(e.pow(fn)))),Nh=di((({lightDirection:e})=>{const t=e.add(Xu).normalize(),s=rl.dot(t).clamp(),r=Xu.dot(t).clamp(),i=Th({f0:gn,f90:1,dotVH:r}),n=xi(.25),o=_h({dotNH:s});return i.mul(n).mul(o)}));class vh extends fh{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=rl.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(bh({diffuseColor:Zi.rgb}))),!0===this.specular&&s.directSpecular.addAssign(r.mul(Nh({lightDirection:e})).mul(ad))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(bh({diffuseColor:Zi}))),s.indirectDiffuse.mulAssign(e)}}const Sh=new J;class Rh extends jc{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Sh),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ph(t):null}setupLightingModel(){return new vh(!1)}}const Ah=new ee;class Ch extends jc{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(Ah),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ph(t):null}setupLightingModel(){return new vh}setupVariants(){const e=(this.shininessNode?xi(this.shininessNode):td).max(1e-4);fn.assign(e);const t=this.specularNode||id;gn.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const Eh=di((()=>{const e=tl.dFdx().abs().max(tl.dFdy().abs());return e.x.max(e.y).max(e.z)})),wh=di((e=>{const{roughness:t}=e,s=Eh();let r=t.max(.0525);return r=r.add(s),r=r.min(1),r})),Mh=di((({alpha:e,dotNL:t,dotNV:s})=>{const r=e.pow2(),i=t.mul(r.add(r.oneMinus().mul(s.pow2())).sqrt()),n=s.mul(r.add(r.oneMinus().mul(t.pow2())).sqrt());return In(.5,i.add(n).max(to))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),Bh=di((({alphaT:e,alphaB:t,dotTV:s,dotBV:r,dotTL:i,dotBL:n,dotNV:o,dotNL:a})=>{const u=a.mul(Ri(e.mul(s),t.mul(r),o).length()),l=o.mul(Ri(e.mul(i),t.mul(n),a).length());return In(.5,u.add(l)).saturate()})).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),Uh=di((({alpha:e,dotNH:t})=>{const s=e.pow2(),r=t.pow2().mul(s.oneMinus()).oneMinus();return s.div(r.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),Fh=xi(1/Math.PI),Ph=di((({alphaT:e,alphaB:t,dotNH:s,dotTH:r,dotBH:i})=>{const n=e.mul(t),o=Ri(t.mul(r),e.mul(i),n.mul(s)),a=o.dot(o),u=n.div(a);return Fh.mul(n.mul(u.pow2()))})).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),Ih=di((e=>{const{lightDirection:t,f0:s,f90:r,roughness:i,f:n,USE_IRIDESCENCE:o,USE_ANISOTROPY:a}=e,u=e.normalView||rl,l=i.pow2(),d=t.add(Xu).normalize(),c=u.dot(t).clamp(),h=u.dot(Xu).clamp(),p=u.dot(d).clamp(),g=Xu.dot(d).clamp();let m,f,x=Th({f0:s,f90:r,dotVH:g});if(si(o)&&(x=an.mix(x,n)),si(a)){const e=hn.dot(t),s=hn.dot(Xu),r=hn.dot(d),i=pn.dot(t),n=pn.dot(Xu),o=pn.dot(d);m=Bh({alphaT:dn,alphaB:l,dotTV:s,dotBV:n,dotTL:e,dotBL:i,dotNV:h,dotNL:c}),f=Ph({alphaT:dn,alphaB:l,dotNH:p,dotTH:r,dotBH:o})}else m=Mh({alpha:l,dotNL:c,dotNV:h}),f=Uh({alpha:l,dotNH:p});return x.mul(m).mul(f)})),Lh=di((({roughness:e,dotNV:t})=>{const s=wi(-1,-.0275,-.572,.022),r=wi(1,.0425,1.04,-.04),i=e.mul(s).add(r),n=i.x.mul(i.x).min(t.mul(-9.28).exp2()).mul(i.x).add(i.y);return _i(-1.04,1.04).mul(n).add(i.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Vh=di((e=>{const{dotNV:t,specularColor:s,specularF90:r,roughness:i}=e,n=Lh({dotNV:t,roughness:i});return s.mul(n.x).add(r.mul(n.y))})),Dh=di((({f:e,f90:t,dotVH:s})=>{const r=s.oneMinus().saturate(),i=r.mul(r),n=r.mul(i,i).clamp(0,.9999);return e.sub(Ri(t).mul(n)).div(n.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),Oh=di((({roughness:e,dotNH:t})=>{const s=e.pow2(),r=xi(1).div(s),i=t.pow2().oneMinus().max(.0078125);return xi(2).add(r).mul(i.pow(r.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),Gh=di((({dotNV:e,dotNL:t})=>xi(1).div(xi(4).mul(t.add(e).sub(t.mul(e)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),zh=di((({lightDirection:e})=>{const t=e.add(Xu).normalize(),s=rl.dot(e).clamp(),r=rl.dot(Xu).clamp(),i=rl.dot(t).clamp(),n=Oh({roughness:on,dotNH:i}),o=Gh({dotNV:r,dotNL:s});return nn.mul(n).mul(o)})),kh=di((({N:e,V:t,roughness:s})=>{const r=e.dot(t).saturate(),i=_i(s,r.oneMinus().sqrt());return i.assign(i.mul(.984375).add(.0078125)),i})).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),$h=di((({f:e})=>{const t=e.length();return ko(t.mul(t).add(e.z).div(t.add(1)),0)})).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Hh=di((({v1:e,v2:t})=>{const s=e.dot(t),r=s.abs().toVar(),i=r.mul(.0145206).add(.4965155).mul(r).add(.8543985).toVar(),n=r.add(4.1616724).mul(r).add(3.417594).toVar(),o=i.div(n),a=s.greaterThan(0).select(o,ko(s.mul(s).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(o));return e.cross(t).mul(a)})).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Wh=di((({N:e,V:t,P:s,mInv:r,p0:i,p1:n,p2:o,p3:a})=>{const u=n.sub(i).toVar(),l=a.sub(i).toVar(),d=u.cross(l),c=Ri().toVar();return gi(d.dot(s.sub(i)).greaterThanEqual(0),(()=>{const u=t.sub(e.mul(t.dot(e))).normalize(),l=e.cross(u).negate(),d=r.mul(Pi(u,l,e).transpose()).toVar(),h=d.mul(i.sub(s)).normalize().toVar(),p=d.mul(n.sub(s)).normalize().toVar(),g=d.mul(o.sub(s)).normalize().toVar(),m=d.mul(a.sub(s)).normalize().toVar(),f=Ri(0).toVar();f.addAssign(Hh({v1:h,v2:p})),f.addAssign(Hh({v1:p,v2:g})),f.addAssign(Hh({v1:g,v2:m})),f.addAssign(Hh({v1:m,v2:h})),c.assign(Ri($h({f:f})))})),c})).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),jh=1/6,qh=e=>Pn(jh,Pn(e,Pn(e,e.negate().add(3)).sub(3)).add(1)),Xh=e=>Pn(jh,Pn(e,Pn(e,Pn(3,e).sub(6))).add(4)),Kh=e=>Pn(jh,Pn(e,Pn(e,Pn(-3,e).add(3)).add(3)).add(1)),Yh=e=>Pn(jh,Yo(e,3)),Qh=e=>qh(e).add(Xh(e)),Zh=e=>Kh(e).add(Yh(e)),Jh=e=>Un(-1,Xh(e).div(qh(e).add(Xh(e)))),ep=e=>Un(1,Yh(e).div(Kh(e).add(Yh(e)))),tp=(e,t,s)=>{const r=e.uvNode,i=Pn(r,t.zw).add(.5),n=xo(i),o=bo(i),a=Qh(o.x),u=Zh(o.x),l=Jh(o.x),d=ep(o.x),c=Jh(o.y),h=ep(o.y),p=_i(n.x.add(l),n.y.add(c)).sub(.5).mul(t.xy),g=_i(n.x.add(d),n.y.add(c)).sub(.5).mul(t.xy),m=_i(n.x.add(l),n.y.add(h)).sub(.5).mul(t.xy),f=_i(n.x.add(d),n.y.add(h)).sub(.5).mul(t.xy),x=Qh(o.y).mul(Un(a.mul(e.uv(p).level(s)),u.mul(e.uv(g).level(s)))),y=Zh(o.y).mul(Un(a.mul(e.uv(m).level(s)),u.mul(e.uv(f).level(s))));return x.add(y)},sp=di((([e,t=xi(3)])=>{const s=_i(e.size(yi(t))),r=_i(e.size(yi(t.add(1)))),i=In(1,s),n=In(1,r),o=tp(e,wi(i,s),xo(t)),a=tp(e,wi(n,r),yo(t));return bo(t).mix(o,a)})),rp=di((([e,t,s,r,i])=>{const n=Ri(oa(t.negate(),To(e),In(1,r))),o=Ri(wo(i[0].xyz),wo(i[1].xyz),wo(i[2].xyz));return To(n).mul(s.mul(o))})).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),ip=di((([e,t])=>e.mul(ia(t.mul(2).sub(2),0,1)))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),np=Uc(),op=di((([e,t,s])=>{const r=np.uv(e),i=go(xi(bc.x)).mul(ip(t,s));return sp(r,i)})),ap=di((([e,t,s])=>(gi(s.notEqual(0),(()=>{const r=po(t).negate().div(s);return co(r.negate().mul(e))})),Ri(1)))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),up=di((([e,t,s,r,i,n,o,a,u,l,d,c,h,p,g])=>{let m,f;if(g){m=wi().toVar(),f=Ri().toVar();const i=d.sub(1).mul(g.mul(.025)),n=Ri(d.sub(i),d,d.add(i));Jd({start:0,end:3},(({i:i})=>{const d=n.element(i),g=rp(e,t,c,d,a),x=o.add(g),y=l.mul(u.mul(wi(x,1))),T=_i(y.xy.div(y.w)).toVar();T.addAssign(1),T.divAssign(2),T.assign(_i(T.x,T.y.oneMinus()));const b=op(T,s,d);m.element(i).assign(b.element(i)),m.a.addAssign(b.a),f.element(i).assign(r.element(i).mul(ap(wo(g),h,p).element(i)))})),m.a.divAssign(3)}else{const i=rp(e,t,c,d,a),n=o.add(i),g=l.mul(u.mul(wi(n,1))),x=_i(g.xy.div(g.w)).toVar();x.addAssign(1),x.divAssign(2),x.assign(_i(x.x,x.y.oneMinus())),m=op(x,s,d),f=r.mul(ap(wo(i),h,p))}const x=f.rgb.mul(m.rgb),y=e.dot(t).clamp(),T=Ri(Vh({dotNV:y,specularColor:i,specularF90:n,roughness:s})),b=f.r.add(f.g,f.b).div(3);return wi(T.oneMinus().mul(x),m.a.oneMinus().mul(b).oneMinus())})),lp=Pi(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),dp=(e,t)=>e.sub(t).div(e.add(t)).pow2(),cp=(e,t)=>{const s=e.mul(2*Math.PI*1e-9),r=Ri(54856e-17,44201e-17,52481e-17),i=Ri(1681e3,1795300,2208400),n=Ri(43278e5,93046e5,66121e5),o=xi(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let a=r.mul(n.mul(2*Math.PI).sqrt()).mul(i.mul(s).add(t).cos()).mul(s.pow2().negate().mul(n).exp());a=Ri(a.x.add(o),a.y,a.z).div(1.0685e-7);return lp.mul(a)},hp=di((({outsideIOR:e,eta2:t,cosTheta1:s,thinFilmThickness:r,baseF0:i})=>{const n=ra(e,t,aa(0,.03,r)),o=e.div(n).pow2().mul(xi(1).sub(s.pow2())),a=xi(1).sub(o).sqrt(),u=dp(n,e),l=Th({f0:u,f90:1,dotVH:s}),d=l.oneMinus(),c=n.lessThan(e).select(Math.PI,0),h=xi(Math.PI).sub(c),p=(e=>{const t=e.sqrt();return Ri(1).add(t).div(Ri(1).sub(t))})(i.clamp(0,.9999)),g=dp(p,n.toVec3()),m=Th({f0:g,f90:1,dotVH:a}),f=Ri(p.x.lessThan(n).select(Math.PI,0),p.y.lessThan(n).select(Math.PI,0),p.z.lessThan(n).select(Math.PI,0)),x=n.mul(r,a,2),y=Ri(h).add(f),T=l.mul(m).clamp(1e-5,.9999),b=T.sqrt(),_=d.pow2().mul(m).div(Ri(1).sub(T));let N=l.add(_),v=_.sub(d);for(let e=1;e<=2;++e){v=v.mul(b);const t=cp(xi(e).mul(x),xi(e).mul(y)).mul(2);N=N.add(v.mul(t))}return N.max(Ri(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),pp=di((({normal:e,viewDir:t,roughness:s})=>{const r=e.dot(t).saturate(),i=s.pow2(),n=pa(s.lessThan(.25),xi(-339.2).mul(i).add(xi(161.4).mul(s)).sub(25.9),xi(-8.48).mul(i).add(xi(14.3).mul(s)).sub(9.95)),o=pa(s.lessThan(.25),xi(44).mul(i).sub(xi(23.7).mul(s)).add(3.26),xi(1.97).mul(i).sub(xi(3.27).mul(s)).add(.72));return pa(s.lessThan(.25),0,xi(.1).mul(s).sub(.025)).add(n.mul(r).add(o).exp()).mul(1/Math.PI).saturate()})),gp=Ri(.04),mp=xi(1);class fp extends mh{constructor(e=!1,t=!1,s=!1,r=!1,i=!1,n=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.anisotropy=r,this.transmission=i,this.dispersion=n,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(!0===this.clearcoat&&(this.clearcoatRadiance=Ri().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=Ri().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=Ri().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=Ri().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=Ri().toVar("sheenSpecularIndirect")),!0===this.iridescence){const e=rl.dot(Xu).clamp();this.iridescenceFresnel=hp({outsideIOR:xi(1),eta2:un,cosTheta1:e,thinFilmThickness:ln,baseF0:gn}),this.iridescenceF0=Dh({f:this.iridescenceFresnel,f90:1,dotVH:e})}if(!0===this.transmission){const t=Wu,s=Su.sub(Wu).normalize(),r=il;e.backdrop=up(r,s,en,Zi,gn,mn,t,Fu,_u,Tu,_n,vn,Rn,Sn,this.dispersion?An:null),e.backdropAlpha=Nn,Zi.a.mulAssign(ra(1,e.backdrop.a,Nn))}}computeMultiscattering(e,t,s){const r=rl.dot(Xu).clamp(),i=Lh({roughness:en,dotNV:r}),n=(this.iridescenceF0?an.mix(gn,this.iridescenceF0):gn).mul(i.x).add(s.mul(i.y)),o=i.x.add(i.y).oneMinus(),a=gn.add(gn.oneMinus().mul(.047619)),u=n.mul(a).div(o.mul(a).oneMinus());e.addAssign(n),t.addAssign(u.mul(o))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=rl.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(r.mul(zh({lightDirection:e}))),!0===this.clearcoat){const s=nl.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(s.mul(Ih({lightDirection:e,f0:gp,f90:mp,roughness:rn,normalView:nl})))}s.directDiffuse.addAssign(r.mul(bh({diffuseColor:Zi.rgb}))),s.directSpecular.addAssign(r.mul(Ih({lightDirection:e,f0:gn,f90:1,roughness:en,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:s,halfHeight:r,reflectedLight:i,ltc_1:n,ltc_2:o}){const a=t.add(s).sub(r),u=t.sub(s).sub(r),l=t.sub(s).add(r),d=t.add(s).add(r),c=rl,h=Xu,p=qu.toVar(),g=kh({N:c,V:h,roughness:en}),m=n.uv(g).toVar(),f=o.uv(g).toVar(),x=Pi(Ri(m.x,0,m.y),Ri(0,1,0),Ri(m.z,0,m.w)).toVar(),y=gn.mul(f.x).add(gn.oneMinus().mul(f.y)).toVar();i.directSpecular.addAssign(e.mul(y).mul(Wh({N:c,V:h,P:p,mInv:x,p0:a,p1:u,p2:l,p3:d}))),i.directDiffuse.addAssign(e.mul(Zi).mul(Wh({N:c,V:h,P:p,mInv:Pi(1,0,0,0,1,0,0,0,1),p0:a,p1:u,p2:l,p3:d})))}indirect(e,t,s){this.indirectDiffuse(e,t,s),this.indirectSpecular(e,t,s),this.ambientOcclusion(e,t,s)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(bh({diffuseColor:Zi})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(t.mul(nn,pp({normal:rl,viewDir:Xu,roughness:on}))),!0===this.clearcoat){const e=nl.dot(Xu).clamp(),t=Vh({dotNV:e,specularColor:gp,specularF90:mp,roughness:rn});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const r=Ri().toVar("singleScattering"),i=Ri().toVar("multiScattering"),n=t.mul(1/Math.PI);this.computeMultiscattering(r,i,mn);const o=r.add(i),a=Zi.mul(o.r.max(o.g).max(o.b).oneMinus());s.indirectSpecular.addAssign(e.mul(r)),s.indirectSpecular.addAssign(i.mul(n)),s.indirectDiffuse.addAssign(a.mul(n))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=rl.dot(Xu).clamp().add(e),r=en.mul(-16).oneMinus().negate().exp2(),i=e.sub(s.pow(r).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(e),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(i)}finish(e){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=nl.dot(Xu).clamp(),s=Th({dotVH:e,f0:gp,f90:mp}),r=t.mul(sn.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(sn));t.assign(r)}if(!0===this.sheen){const e=nn.r.max(nn.g).max(nn.b).mul(.157).oneMinus(),s=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}const xp=xi(1),yp=xi(-2),Tp=xi(.8),bp=xi(-1),_p=xi(.4),Np=xi(2),vp=xi(.305),Sp=xi(3),Rp=xi(.21),Ap=xi(4),Cp=xi(4),Ep=xi(16),wp=di((([e])=>{const t=Ri(Co(e)).toVar(),s=xi(-1).toVar();return gi(t.x.greaterThan(t.z),(()=>{gi(t.x.greaterThan(t.y),(()=>{s.assign(pa(e.x.greaterThan(0),0,3))})).Else((()=>{s.assign(pa(e.y.greaterThan(0),1,4))}))})).Else((()=>{gi(t.z.greaterThan(t.y),(()=>{s.assign(pa(e.z.greaterThan(0),2,5))})).Else((()=>{s.assign(pa(e.y.greaterThan(0),1,4))}))})),s})).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),Mp=di((([e,t])=>{const s=_i().toVar();return gi(t.equal(0),(()=>{s.assign(_i(e.z,e.y).div(Co(e.x)))})).ElseIf(t.equal(1),(()=>{s.assign(_i(e.x.negate(),e.z.negate()).div(Co(e.y)))})).ElseIf(t.equal(2),(()=>{s.assign(_i(e.x.negate(),e.y).div(Co(e.z)))})).ElseIf(t.equal(3),(()=>{s.assign(_i(e.z.negate(),e.y).div(Co(e.x)))})).ElseIf(t.equal(4),(()=>{s.assign(_i(e.x.negate(),e.z).div(Co(e.y)))})).Else((()=>{s.assign(_i(e.x,e.y).div(Co(e.z)))})),Pn(.5,s.add(1))})).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),Bp=di((([e])=>{const t=xi(0).toVar();return gi(e.greaterThanEqual(Tp),(()=>{t.assign(xp.sub(e).mul(bp.sub(yp)).div(xp.sub(Tp)).add(yp))})).ElseIf(e.greaterThanEqual(_p),(()=>{t.assign(Tp.sub(e).mul(Np.sub(bp)).div(Tp.sub(_p)).add(bp))})).ElseIf(e.greaterThanEqual(vp),(()=>{t.assign(_p.sub(e).mul(Sp.sub(Np)).div(_p.sub(vp)).add(Np))})).ElseIf(e.greaterThanEqual(Rp),(()=>{t.assign(vp.sub(e).mul(Ap.sub(Sp)).div(vp.sub(Rp)).add(Sp))})).Else((()=>{t.assign(xi(-2).mul(go(Pn(1.16,e))))})),t})).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),Up=di((([e,t])=>{const s=e.toVar();s.assign(Pn(2,s).sub(1));const r=Ri(s,1).toVar();return gi(t.equal(0),(()=>{r.assign(r.zyx)})).ElseIf(t.equal(1),(()=>{r.assign(r.xzy),r.xz.mulAssign(-1)})).ElseIf(t.equal(2),(()=>{r.x.mulAssign(-1)})).ElseIf(t.equal(3),(()=>{r.assign(r.zyx),r.xz.mulAssign(-1)})).ElseIf(t.equal(4),(()=>{r.assign(r.xzy),r.xy.mulAssign(-1)})).ElseIf(t.equal(5),(()=>{r.z.mulAssign(-1)})),r})).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),Fp=di((([e,t,s,r,i,n])=>{const o=xi(s),a=Ri(t),u=ia(Bp(o),yp,n),l=bo(u),d=xo(u),c=Ri(Pp(e,a,d,r,i,n)).toVar();return gi(l.notEqual(0),(()=>{const t=Ri(Pp(e,a,d.add(1),r,i,n)).toVar();c.assign(ra(c,t,l))})),c})),Pp=di((([e,t,s,r,i,n])=>{const o=xi(s).toVar(),a=Ri(t),u=xi(wp(a)).toVar(),l=xi(ko(Cp.sub(o),0)).toVar();o.assign(ko(o,Cp));const d=xi(ho(o)).toVar(),c=_i(Mp(a,u).mul(d.sub(2)).add(1)).toVar();return gi(u.greaterThan(2),(()=>{c.y.addAssign(d),u.subAssign(3)})),c.x.addAssign(u.mul(d)),c.x.addAssign(l.mul(Pn(3,Ep))),c.y.addAssign(Pn(4,ho(n).sub(d))),c.x.mulAssign(r),c.y.mulAssign(i),e.uv(c).grad(_i(),_i())})),Ip=di((({envMap:e,mipInt:t,outputDirection:s,theta:r,axis:i,CUBEUV_TEXEL_WIDTH:n,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const u=No(r),l=s.mul(u).add(i.cross(s).mul(_o(r))).add(i.mul(i.dot(s).mul(u.oneMinus())));return Pp(e,l,t,n,o,a)})),Lp=di((({n:e,latitudinal:t,poleAxis:s,outputDirection:r,weights:i,samples:n,dTheta:o,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})=>{const h=Ri(pa(t,s,Ko(s,r))).toVar();gi(no(h.equals(Ri(0))),(()=>{h.assign(Ri(r.z,0,r.x.negate()))})),h.assign(To(h));const p=Ri().toVar();return p.addAssign(i.element(yi(0)).mul(Ip({theta:0,axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),Jd({start:yi(1),end:e},(({i:e})=>{gi(e.greaterThanEqual(n),(()=>{tc()}));const t=xi(o.mul(xi(e))).toVar();p.addAssign(i.element(e).mul(Ip({theta:t.mul(-1),axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),p.addAssign(i.element(e).mul(Ip({theta:t,axis:h,outputDirection:r,mipInt:a,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})))})),wi(p,1)}));let Vp=null;const Dp=new WeakMap;function Op(e){let t=Dp.get(e);if((void 0!==t?t.pmremVersion:-1)!==e.pmremVersion){const s=e.image;if(e.isCubeTexture){if(!function(e){if(null==e)return!1;let t=0;const s=6;for(let r=0;r<s;r++)void 0!==e[r]&&t++;return t===s}(s))return null;t=Vp.fromCubemap(e,t)}else{if(!function(e){return null!=e&&e.height>0}(s))return null;t=Vp.fromEquirectangular(e,t)}t.pmremVersion=e.pmremVersion,Dp.set(e,t)}return t.texture}class Gp extends Nr{static get type(){return"PMREMNode"}constructor(e,t=null,s=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=s,this._generator=null;const r=new te;r.isRenderTargetTexture=!0,this._texture=pu(r),this._width=Xi(0),this._height=Xi(0),this._maxMip=Xi(0),this.updateBeforeType=hr.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=function(e){const t=Math.log2(e)-2,s=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:s,maxMip:t}}(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,s=this._value;t!==s.pmremVersion&&(e=!0===s.isPMREMTexture?s:Op(s),null!==e&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){null===Vp&&(Vp=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;null===t&&e.context.getUV&&(t=e.context.getUV(this));const s=this.value;e.renderer.coordinateSystem===T&&!0!==s.isPMREMTexture&&!0===s.isRenderTargetTexture&&(t=Ri(t.x.negate(),t.yz));let r=this.levelNode;return null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),Fp(this._texture,t,r,this._width,this._height,this._maxMip)}}const zp=ui(Gp),kp=new WeakMap;class $p extends cc{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const e=s.isTextureNode?s.value:t[s.property];let r=kp.get(e);void 0===r&&(r=zp(e),kp.set(e,r)),s=r}const r=t.envMap?vl("envMapIntensity","float",e.material):vl("environmentIntensity","float",e.scene),i=!0===t.useAnisotropy||t.anisotropy>0?$l:rl,n=s.context(Hp(en,i)).mul(r),o=s.context(Wp(il)).mul(Math.PI).mul(r),a=ja(n),u=ja(o);e.context.radiance.addAssign(a),e.context.iblIrradiance.addAssign(u);const l=e.context.lightingModel.clearcoatRadiance;if(l){const e=s.context(Hp(rn,nl)).mul(r),t=ja(e);l.addAssign(t)}}}const Hp=(e,t)=>{let s=null;return{getUV:()=>(null===s&&(s=Xu.negate().reflect(t),s=e.mul(e).mix(s,t).normalize(),s=s.transformDirection(_u)),s),getTextureLevel:()=>e}},Wp=e=>({getUV:()=>e,getTextureLevel:()=>xi(1)}),jp=new se;class qp extends jc{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(jp),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return null===t&&e.environmentNode&&(t=e.environmentNode),t?new $p(t):null}setupLightingModel(){return new fp}setupSpecular(){const e=ra(Ri(.04),Zi.rgb,tn);gn.assign(e),mn.assign(1)}setupVariants(){const e=this.metalnessNode?xi(this.metalnessNode):dd;tn.assign(e);let t=this.roughnessNode?xi(this.roughnessNode):ld;t=wh({roughness:t}),en.assign(t),this.setupSpecular(),Zi.assign(wi(Zi.rgb.mul(e.oneMinus()),Zi.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const Xp=new re;class Kp extends qp{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(Xp),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const e=this.iorNode?xi(this.iorNode):Sd;_n.assign(e),gn.assign(ra(zo(Qo(_n.sub(1).div(_n.add(1))).mul(od),Ri(1)).mul(nd),Zi.rgb,tn)),mn.assign(ra(nd,1,tn))}setupLightingModel(){return new fp(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?xi(this.clearcoatNode):hd,t=this.clearcoatRoughnessNode?xi(this.clearcoatRoughnessNode):pd;sn.assign(e),rn.assign(wh({roughness:t}))}if(this.useSheen){const e=this.sheenNode?Ri(this.sheenNode):fd,t=this.sheenRoughnessNode?xi(this.sheenRoughnessNode):xd;nn.assign(e),on.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?xi(this.iridescenceNode):Td,t=this.iridescenceIORNode?xi(this.iridescenceIORNode):bd,s=this.iridescenceThicknessNode?xi(this.iridescenceThicknessNode):_d;an.assign(e),un.assign(t),ln.assign(s)}if(this.useAnisotropy){const e=(this.anisotropyNode?_i(this.anisotropyNode):yd).toVar();cn.assign(e.length()),gi(cn.equal(0),(()=>{e.assign(_i(1,0))})).Else((()=>{e.divAssign(_i(cn)),cn.assign(cn.saturate())})),dn.assign(cn.pow2().mix(en.pow2(),1)),hn.assign(Gl[0].mul(e.x).add(Gl[1].mul(e.y))),pn.assign(Gl[1].mul(e.x).sub(Gl[0].mul(e.y)))}if(this.useTransmission){const e=this.transmissionNode?xi(this.transmissionNode):Nd,t=this.thicknessNode?xi(this.thicknessNode):vd,s=this.attenuationDistanceNode?xi(this.attenuationDistanceNode):Rd,r=this.attenuationColorNode?Ri(this.attenuationColorNode):Ad;if(Nn.assign(e),vn.assign(t),Sn.assign(s),Rn.assign(r),this.useDispersion){const e=this.dispersionNode?xi(this.dispersionNode):Fd;An.assign(e)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?Ri(this.clearcoatNormalNode):gd}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}class Yp extends fp{constructor(e,t,s,r){super(e,t,s),this.useSSS=r}direct({lightDirection:e,lightColor:t,reflectedLight:s},r,i){if(!0===this.useSSS){const r=i.material,{thicknessColorNode:n,thicknessDistortionNode:o,thicknessAmbientNode:a,thicknessAttenuationNode:u,thicknessPowerNode:l,thicknessScaleNode:d}=r,c=e.add(rl.mul(o)).normalize(),h=xi(Xu.dot(c.negate()).saturate().pow(l).mul(d)),p=Ri(h.add(a).mul(n));s.directDiffuse.addAssign(p.mul(u.mul(t)))}super.direct({lightDirection:e,lightColor:t,reflectedLight:s},r,i)}}class Qp extends Kp{static get type(){return"MeshSSSNodeMaterial"}constructor(e){super(e),this.thicknessColorNode=null,this.thicknessDistortionNode=xi(.1),this.thicknessAmbientNode=xi(0),this.thicknessAttenuationNode=xi(.1),this.thicknessPowerNode=xi(2),this.thicknessScaleNode=xi(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new Yp(this.useClearcoat,this.useSheen,this.useIridescence,this.useSSS)}copy(e){return this.thicknessColorNode=e.thicknessColorNode,this.thicknessDistortionNode=e.thicknessDistortionNode,this.thicknessAmbientNode=e.thicknessAmbientNode,this.thicknessAttenuationNode=e.thicknessAttenuationNode,this.thicknessPowerNode=e.thicknessPowerNode,this.thicknessScaleNode=e.thicknessScaleNode,super.copy(e)}}const Zp=di((({normal:e,lightDirection:t,builder:s})=>{const r=e.dot(t),i=_i(r.mul(.5).add(.5),0);if(s.material.gradientMap){const e=Al("gradientMap","texture").context({getUV:()=>i});return Ri(e.r)}{const e=i.fwidth().mul(.5);return ra(Ri(.7),Ri(1),aa(xi(.7).sub(e.x),xi(.7).add(e.x),i.x))}}));class Jp extends mh{direct({lightDirection:e,lightColor:t,reflectedLight:s},r,i){const n=Zp({normal:Zu,lightDirection:e,builder:i}).mul(t);s.directDiffuse.addAssign(n.mul(bh({diffuseColor:Zi.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(bh({diffuseColor:Zi}))),s.indirectDiffuse.mulAssign(e)}}const eg=new ie;class tg extends jc{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(eg),this.setValues(e)}setupLightingModel(){return new Jp}}class sg extends Nr{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=Ri(Xu.z,0,Xu.x.negate()).normalize(),t=Xu.cross(e);return _i(e.dot(rl),t.dot(rl)).mul(.495).add(.5)}}const rg=li(sg),ig=new ne;class ng extends jc{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(ig),this.setValues(e)}setupVariants(e){const t=rg;let s;s=e.material.matcap?Al("matcap","texture").context({getUV:()=>t}):Ri(ra(.2,.8,t.y)),Zi.rgb.mulAssign(s.rgb)}}const og=new I;class ag extends jc{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(og),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class ug extends Nr{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:s}=this;if("vec2"===this.getNodeType(e)){const e=t.cos(),r=t.sin();return Fi(e,r,r.negate(),e).mul(s)}{const e=t,r=Ii(wi(1,0,0,0),wi(0,No(e.x),_o(e.x).negate(),0),wi(0,_o(e.x),No(e.x),0),wi(0,0,0,1)),i=Ii(wi(No(e.y),0,_o(e.y),0),wi(0,1,0,0),wi(_o(e.y).negate(),0,No(e.y),0),wi(0,0,0,1)),n=Ii(wi(No(e.z),_o(e.z).negate(),0,0),wi(_o(e.z),No(e.z),0,0),wi(0,0,1,0),wi(0,0,0,1));return r.mul(i).mul(n).mul(wi(s,1)).xyz}}}const lg=ui(ug),dg=new oe;class cg extends jc{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(dg),this.setValues(e)}setupPosition({object:e,context:t}){const{positionNode:s,rotationNode:r,scaleNode:i}=this,n=$u;let o=Ou.mul(Ri(s||0)),a=_i(Fu[0].xyz.length(),Fu[1].xyz.length());null!==i&&(a=a.mul(i));let u=n.xy;e.center&&!0===e.center.isVector2&&(u=u.sub(Xi(e.center).sub(.5))),u=u.mul(a);const l=xi(r||md),d=lg(u,l);o=wi(o.xy.add(d),o.zw);const c=Tu.mul(o);return t.vertex=n,c}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}}class hg extends mh{constructor(){super(),this.shadowNode=xi(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){Zi.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(Zi.rgb)}}const pg=new ae;class gg extends jc{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(pg),this.setValues(e)}setupLightingModel(){return new hg}}const mg=di((({texture:e,uv:t})=>{const s=1e-4,r=Ri().temp();return gi(t.x.lessThan(s),(()=>{r.assign(Ri(1,0,0))})).ElseIf(t.y.lessThan(s),(()=>{r.assign(Ri(0,1,0))})).ElseIf(t.z.lessThan(s),(()=>{r.assign(Ri(0,0,1))})).ElseIf(t.x.greaterThan(.9999),(()=>{r.assign(Ri(-1,0,0))})).ElseIf(t.y.greaterThan(.9999),(()=>{r.assign(Ri(0,-1,0))})).ElseIf(t.z.greaterThan(.9999),(()=>{r.assign(Ri(0,0,-1))})).Else((()=>{const s=.01,i=e.uv(t.add(Ri(-.01,0,0))).r.sub(e.uv(t.add(Ri(s,0,0))).r),n=e.uv(t.add(Ri(0,-.01,0))).r.sub(e.uv(t.add(Ri(0,s,0))).r),o=e.uv(t.add(Ri(0,0,-.01))).r.sub(e.uv(t.add(Ri(0,0,s))).r);r.assign(Ri(i,n,o))})),r.normalize()}));class fg extends hu{static get type(){return"Texture3DNode"}constructor(e,t=null,s=null){super(e,t,s),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return Ri(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){return t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return mg({texture:this,uv:e})}}const xg=ui(fg);class yg extends jc{static get type(){return"VolumeNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.isVolumeNodeMaterial=!0,this.testNode=null,this.setValues(e)}setup(e){const t=xg(this.map,null,0),s=di((({orig:e,dir:t})=>{const s=Ri(-.5),r=Ri(.5),i=t.reciprocal(),n=s.sub(e).mul(i),o=r.sub(e).mul(i),a=zo(n,o),u=ko(n,o),l=ko(a.x,ko(a.y,a.z)),d=zo(u.x,zo(u.y,u.z));return _i(l,d)}));this.fragmentNode=di((()=>{const e=_a(Ri(Du.mul(wi(Su,1)))),r=_a(ku.sub(e)).normalize(),i=Yi("vec2","bounds").assign(s({orig:e,dir:r}));i.x.greaterThan(i.y).discard(),i.assign(_i(ko(i.x,0),i.y));const n=Yi("vec3","p").assign(e.add(i.x.mul(r))),o=Yi("vec3","inc").assign(Ri(r.abs().reciprocal())),a=Yi("float","delta").assign(zo(o.x,zo(o.y,o.z)));a.divAssign(Al("steps","float"));const u=Yi("vec4","ac").assign(wi(Al("base","color"),0));return Jd({type:"float",start:i.x,end:i.y,update:"+= delta"},(()=>{const e=Yi("float","d").assign(t.uv(n.add(.5)).r);null!==this.testNode?this.testNode({map:t,mapValue:e,probe:n,finalColor:u}).append():(u.a.assign(1),tc()),n.addAssign(r.mul(a))})),u.a.equal(0).discard(),wi(u)}))(),super.setup(e)}}class Tg{constructor(e,t){this.nodes=e,this.info=t,this.animationLoop=null,this.requestId=null,this._init()}_init(){const e=(t,s)=>{this.requestId=self.requestAnimationFrame(e),!0===this.info.autoReset&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this.animationLoop&&this.animationLoop(t,s)};e()}dispose(){self.cancelAnimationFrame(this.requestId),this.requestId=null}setAnimationLoop(e){this.animationLoop=e}}class bg{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return;return t.get(e[e.length-1])}set(e,t){let s=this.weakMap;for(let t=0;t<e.length;t++){const r=e[t];!1===s.has(r)&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return!1;return t.delete(e[e.length-1])}}const _g=new ue;class Ng{constructor(){this.version=0,this.globalClippingCount=0,this.localClippingCount=0,this.localClippingEnabled=!1,this.localClipIntersection=!1,this.planes=[],this.parentVersion=0,this.viewNormalMatrix=new i,this.cacheKey=""}projectPlanes(e,t){const s=e.length,r=this.planes;for(let i=0;i<s;i++){_g.copy(e[i]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const s=r[t+i],n=_g.normal;s.x=-n.x,s.y=-n.y,s.z=-n.z,s.w=_g.constant}}updateGlobal(e,t){const s=e.clippingPlanes;this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix);let i=!1;if(Array.isArray(s)&&0!==s.length){const e=s.length;if(e!==this.globalClippingCount){const t=[];for(let s=0;s<e;s++)t.push(new r);this.globalClippingCount=e,this.planes=t,i=!0}this.projectPlanes(s,0)}else 0!==this.globalClippingCount&&(this.globalClippingCount=0,this.planes=[],i=!0);e.localClippingEnabled!==this.localClippingEnabled&&(this.localClippingEnabled=e.localClippingEnabled,i=!0),i&&(this.version++,this.cacheKey=`${this.globalClippingCount}:${void 0!==this.localClippingEnabled&&this.localClippingEnabled}:`)}update(e,t){let s=!1;if(this!==e&&e.version!==this.parentVersion&&(this.globalClippingCount=t.isShadowNodeMaterial?0:e.globalClippingCount,this.localClippingEnabled=e.localClippingEnabled,this.planes=Array.from(e.planes),this.parentVersion=e.version,this.viewMatrix=e.viewMatrix,this.viewNormalMatrix=e.viewNormalMatrix,s=!0),this.localClippingEnabled){const e=t.clippingPlanes;if(Array.isArray(e)&&0!==e.length){const t=e.length,i=this.planes,n=this.globalClippingCount;if(s||t!==this.localClippingCount){i.length=n+t;for(let e=0;e<t;e++)i[n+e]=new r;this.localClippingCount=t,s=!0}this.projectPlanes(e,n)}else 0!==this.localClippingCount&&(this.localClippingCount=0,s=!0);this.localClipIntersection!==t.clipIntersection&&(this.localClipIntersection=t.clipIntersection,s=!0)}s&&(this.version+=e.version,this.cacheKey=e.cacheKey+`:${this.localClippingCount}:${void 0!==this.localClipIntersection&&this.localClipIntersection}`)}}let vg=0;class Sg{constructor(e,t,s,r,i,n,o,a,u){this._nodes=e,this._geometries=t,this.id=vg++,this.renderer=s,this.object=r,this.material=i,this.scene=n,this.camera=o,this.lightsNode=a,this.context=u,this.geometry=r.geometry,this.version=i.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.updateClipping(u.clippingContext),this.clippingContextVersion=this.clippingContext.version,this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){const t=this.material;let s=this.clippingContext;Array.isArray(t.clippingPlanes)?(s!==e&&s||(s=new Ng,this.clippingContext=s),s.update(e,t)):this.clippingContext!==e&&(this.clippingContext=e)}get clippingNeedsUpdate(){return this.clippingContext.version!==this.clippingContextVersion&&(this.clippingContextVersion=this.clippingContext.version,!0)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],r=new Set;for(const i of e){const e=i.node&&i.node.attribute?i.node.attribute:t.getAttribute(i.name);if(void 0===e)continue;s.push(e);const n=e.isInterleavedBufferAttribute?e.data:e;r.add(n)}return this.attributes=s,this.vertexBuffers=Array.from(r.values()),s}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:s,group:r,drawRange:i}=this,n=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),o=this.getIndex(),a=null!==o,u=s.isInstancedBufferGeometry?s.instanceCount:e.count>1?e.count:1;if(0===u)return null;if(n.instanceCount=u,!0===e.isBatchedMesh)return n;let l=1;!0!==t.wireframe||e.isPoints||e.isLineSegments||e.isLine||e.isLineLoop||(l=2);let d=i.start*l,c=(i.start+i.count)*l;null!==r&&(d=Math.max(d,r.start*l),c=Math.min(c,(r.start+r.count)*l));const h=!0===a?o.count:s.attributes.position.count;d=Math.max(d,0),c=Math.min(c,h);const p=c-d;return p<0||p===1/0?null:(n.vertexCount=p,n.firstVertex=d,n)}getMaterialCacheKey(){const{object:e,material:t}=this;let s=t.customProgramCacheKey();for(const e of function(e){const t=Object.keys(e);let s=Object.getPrototypeOf(e);for(;s;){const e=Object.getOwnPropertyDescriptors(s);for(const s in e)if(void 0!==e[s]){const r=e[s];r&&"function"==typeof r.get&&t.push(s)}s=Object.getPrototypeOf(s)}return t}(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(e))continue;const r=t[e];let i;if(null!==r){const e=typeof r;"number"===e?i=0!==r?"1":"0":"object"===e?(i="{",r.isTexture&&(i+=r.mapping),i+="}"):i=String(r)}else i=String(r);s+=i+","}return s+=this.clippingContext.cacheKey+",",e.skeleton&&(s+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(s+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(s+=e._matricesTexture.uuid+",",null!==e._colorsTexture&&(s+=e._colorsTexture.uuid+",")),e.count>1&&(s+=e.count+","+e.uuid+","),s}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){return this.object.receiveShadow+","+this._nodes.getCacheKey(this.scene,this.lightsNode)}getCacheKey(){return this.getMaterialCacheKey()+","+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Rg=[];class Ag{constructor(e,t,s,r,i,n){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=r,this.bindings=i,this.info=n,this.chainMaps={}}get(e,t,s,r,i,n,o){const a=this.getChainMap(o);Rg[0]=e,Rg[1]=t,Rg[2]=n,Rg[3]=i;let u=a.get(Rg);return void 0===u?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,r,i,n,o),a.set(Rg,u)):(u.updateClipping(n.clippingContext),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,s,r,i,n,o)):u.version=t.version)),u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new bg)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,r,i,n,o,a,u,l){const d=this.getChainMap(l),c=new Sg(e,t,s,r,i,n,o,a,u);return c.onDispose=()=>{this.pipelines.delete(c),this.bindings.delete(c),this.nodes.delete(c),d.delete(c.getChainArray())},c}}class Cg{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const Eg=1,wg=2,Mg=4,Bg=16;class Ug extends Cg{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return void 0!==t&&this.backend.destroyAttribute(e),t}update(e,t){const s=this.get(e);if(void 0===s.version)t===Eg?this.backend.createAttribute(e):t===wg?this.backend.createIndexAttribute(e):t===Mg&&this.backend.createStorageAttribute(e),s.version=this._getBufferAttribute(e).version;else{const t=this._getBufferAttribute(e);(s.version<t.version||t.usage===g)&&(this.backend.updateAttribute(e),s.version=t.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Fg(e){return null!==e.index?e.index.version:e.attributes.position.version}function Pg(e){const t=[],s=e.index,r=e.attributes.position;if(null!==s){const e=s.array;for(let s=0,r=e.length;s<r;s+=3){const r=e[s+0],i=e[s+1],n=e[s+2];t.push(r,i,i,n,n,r)}}else{for(let e=0,s=r.array.length/3-1;e<s;e+=3){const s=e+0,r=e+1,i=e+2;t.push(s,r,r,i,i,s)}}const i=new(function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(t)?le:de)(t,1);return i.version=Fg(e),i}class Ig extends Cg{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const r=t.index,i=e.getAttributes();null!==r&&this.attributes.delete(r);for(const e of i)this.attributes.delete(e);const n=this.wireframes.get(t);void 0!==n&&this.attributes.delete(n),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const e of t)e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute?this.updateAttribute(e,Mg):this.updateAttribute(e,Eg);const s=this.getIndex(e);null!==s&&this.updateAttribute(s,wg)}updateAttribute(e,t){const s=this.info.render.calls;e.isInterleavedBufferAttribute?void 0===this.attributeCall.get(e)?(this.attributes.update(e,t),this.attributeCall.set(e,s)):this.attributeCall.get(e.data)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e.data,s),this.attributeCall.set(e,s)):this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndex(e){const{geometry:t,material:s}=e;let r=t.index;if(!0===s.wireframe){const e=this.wireframes;let s=e.get(t);void 0===s?(s=Pg(t),e.set(t,s)):s.version!==Fg(t)&&(this.attributes.delete(s),s=Pg(t),e.set(t,s)),r=s}return r}}class Lg{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine?this.render.lines+=s*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){0===this[e].timestampCalls&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class Vg{constructor(e){this.cacheKey=e,this.usedTimes=0}}class Dg extends Vg{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class Og extends Vg{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let Gg=0;class zg{constructor(e,t,s=null,r=null){this.id=Gg++,this.code=e,this.stage=t,this.transforms=s,this.attributes=r,this.usedTimes=0}}class kg extends Cg{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,r=this.get(e);if(this._needsComputeUpdate(e)){const i=r.pipeline;i&&(i.usedTimes--,i.computeProgram.usedTimes--);const n=this.nodes.getForCompute(e);let o=this.programs.compute.get(n.computeShader);void 0===o&&(i&&0===i.computeProgram.usedTimes&&this._releaseProgram(i.computeProgram),o=new zg(n.computeShader,"compute",n.transforms,n.nodeAttributes),this.programs.compute.set(n.computeShader,o),s.createProgram(o));const a=this._getComputeCacheKey(e,o);let u=this.caches.get(a);void 0===u&&(i&&0===i.usedTimes&&this._releasePipeline(i),u=this._getComputePipeline(e,o,a,t)),u.usedTimes++,o.usedTimes++,r.version=e.version,r.pipeline=u}return r.pipeline}getForRender(e,t=null){const{backend:s}=this,r=this.get(e);if(this._needsRenderUpdate(e)){const i=r.pipeline;i&&(i.usedTimes--,i.vertexProgram.usedTimes--,i.fragmentProgram.usedTimes--);const n=e.getNodeBuilderState();let o=this.programs.vertex.get(n.vertexShader);void 0===o&&(i&&0===i.vertexProgram.usedTimes&&this._releaseProgram(i.vertexProgram),o=new zg(n.vertexShader,"vertex"),this.programs.vertex.set(n.vertexShader,o),s.createProgram(o));let a=this.programs.fragment.get(n.fragmentShader);void 0===a&&(i&&0===i.fragmentProgram.usedTimes&&this._releaseProgram(i.fragmentProgram),a=new zg(n.fragmentShader,"fragment"),this.programs.fragment.set(n.fragmentShader,a),s.createProgram(a));const u=this._getRenderCacheKey(e,o,a);let l=this.caches.get(u);void 0===l?(i&&0===i.usedTimes&&this._releasePipeline(i),l=this._getRenderPipeline(e,o,a,u,t)):e.pipeline=l,l.usedTimes++,o.usedTimes++,a.usedTimes++,r.pipeline=l}return r.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,r){s=s||this._getComputeCacheKey(e,t);let i=this.caches.get(s);return void 0===i&&(i=new Og(s,t),this.caches.set(s,i),this.backend.createComputePipeline(i,r)),i}_getRenderPipeline(e,t,s,r,i){r=r||this._getRenderCacheKey(e,t,s);let n=this.caches.get(r);return void 0===n&&(n=new Dg(r,t,s),this.caches.set(r,n),e.pipeline=n,this.backend.createRenderPipeline(e,i)),n}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class $g extends Cg{constructor(e,t,s,r,i,n){super(),this.backend=e,this.textures=s,this.pipelines=i,this.attributes=r,this.nodes=t,this.info=n,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const e of t){const s=this.get(e);void 0===s.bindGroup&&(this._init(e),this.backend.createBindings(e,t),s.bindGroup=e)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const e of t){const s=this.get(e);void 0===s.bindGroup&&(this._init(e),this.backend.createBindings(e,t),s.bindGroup=e)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute;this.attributes.update(e,Mg)}}_update(e,t){const{backend:s}=this;let r=!1;for(const t of e.bindings){if(t.isNodeUniformsGroup){if(!this.nodes.updateGroup(t))continue}if(t.isUniformBuffer){t.update()&&s.updateBinding(t)}else if(t.isSampler)t.update();else if(t.isSampledTexture){t.needsBindingsUpdate(this.textures.get(t.texture).generation)&&(r=!0);const e=t.update(),i=t.texture;e&&this.textures.updateTexture(i);const n=s.get(i);if(!0===s.isWebGPUBackend&&void 0===n.texture&&void 0===n.externalTexture&&(console.error("Bindings._update: binding should be available:",t,e,i,t.textureNode.value,r),this.textures.updateTexture(i),r=!0),!0===i.isStorageTexture){const e=this.get(i);!0===t.store?e.needsMipmap=!0:!0===i.generateMipmaps&&this.textures.needsMipmaps(i)&&!0===e.needsMipmap&&(this.backend.generateMipmaps(i),e.needsMipmap=!1)}}}!0===r&&this.backend.updateBindings(e,t)}}class Hg{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class Wg{constructor(e,t,s){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class jg{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class qg extends jg{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class Xg{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}let Kg=0;class Yg{constructor(e=null){this.id=Kg++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return void 0===t&&null!==this.parent&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class Qg extends Ki{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const Zg=(e,t)=>ni(new Qg(e,t));class Jg extends Tr{static get type(){return"CodeNode"}constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=s,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const em=ui(Jg),tm=(e,t)=>em(e,t,"js"),sm=(e,t)=>em(e,t,"wgsl"),rm=(e,t)=>em(e,t,"glsl");class im extends Jg{static get type(){return"FunctionNode"}constructor(e="",t=[],s=""){super(e,t,s)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return void 0===s&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),r=s.name,i=s.type,n=e.getCodeFromNode(this,i);""!==r&&(n.name=r);const o=e.getPropertyName(n),a=this.getNodeFunction(e).getCode(o);return n.code=a+"\n","property"===t?o:e.format(`${o}()`,i,t)}}const nm=(e,t=[],s="")=>{for(let e=0;e<t.length;e++){const s=t[e];"function"==typeof s&&(t[e]=s.functionNode)}const r=ni(new im(e,t,s)),i=(...e)=>r.call(...e);return i.functionNode=r,i},om=(e,t)=>nm(e,t,"glsl"),am=(e,t)=>nm(e,t,"wgsl");class um{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class lm extends um{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class dm extends um{constructor(e,s=new t){super(e,s),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class cm extends um{constructor(e,t=new s){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class hm extends um{constructor(e,t=new r){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class pm extends um{constructor(t,s=new e){super(t,s),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class gm extends um{constructor(e,t=new i){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class mm extends um{constructor(e,t=new n){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class fm extends lm{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class xm extends dm{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class ym extends cm{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Tm extends hm{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class bm extends pm{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class _m extends gm{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Nm extends mm{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class vm extends Tr{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const s=new ii(t);return this._currentCond=pa(e,s),this.add(this._currentCond)}ElseIf(e,t){const s=new ii(t),r=pa(e,s);return this._currentCond.elseNode=r,this._currentCond=r,this}Else(e){return this._currentCond.elseNode=new ii(e),this}build(e,...t){const s=pi();hi(this);for(const t of this.nodes)t.build(e,"void");return hi(s),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const Sm=ui(vm),Rm=[.125,.215,.35,.446,.526,.582],Am=20,Cm=new me(-1,1,1,-1,0,1),Em=new fe(90,1),wm=new e;let Mm=null,Bm=0,Um=0;const Fm=(1+Math.sqrt(5))/2,Pm=1/Fm,Im=[new s(-Fm,Pm,0),new s(Fm,Pm,0),new s(-Pm,0,Fm),new s(Pm,0,Fm),new s(0,Fm,-Pm),new s(0,Fm,Pm),new s(-1,1,-1),new s(1,1,-1),new s(-1,1,1),new s(1,1,1)],Lm=[3,1,5,0,4,2],Vm=Up(au(),ou("faceIndex")).normalize(),Dm=Ri(Vm.x,Vm.y.negate(),Vm.z);class Om{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(e,t=0,s=.1,r=100){Mm=this._renderer.getRenderTarget(),Bm=this._renderer.getActiveCubeFace(),Um=this._renderer.getActiveMipmapLevel(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,s,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=$m(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Hm(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Mm,Bm,Um),e.scissorTest=!1,zm(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===_||e.mapping===N?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Mm=this._renderer.getRenderTarget(),Bm=this._renderer.getActiveCubeFace(),Um=this._renderer.getActiveMipmapLevel();const s=t||this._allocateTargets();return this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:H,minFilter:H,generateMipmaps:!1,type:xe,format:ye,colorSpace:l},i=Gm(e,t,r);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Gm(e,t,r);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(e){const t=[],s=[],r=[],i=[];let n=e;const o=e-4+1+Rm.length;for(let a=0;a<o;a++){const o=Math.pow(2,n);s.push(o);let u=1/o;a>e-4?u=Rm[a-e+4-1]:0===a&&(u=0),r.push(u);const l=1/(o-2),d=-l,c=1+l,h=[d,d,c,d,c,c,d,d,c,c,d,c],p=6,g=6,m=3,f=2,x=1,y=new Float32Array(m*g*p),T=new Float32Array(f*g*p),b=new Float32Array(x*g*p);for(let e=0;e<p;e++){const t=e%3*2/3-1,s=e>2?0:-1,r=[t,s,0,t+2/3,s,0,t+2/3,s+1,0,t,s,0,t+2/3,s+1,0,t,s+1,0],i=Lm[e];y.set(r,m*g*i),T.set(h,f*g*i);const n=[i,i,i,i,i,i];b.set(n,x*g*i)}const _=new ce;_.setAttribute("position",new he(y,m)),_.setAttribute("uv",new he(T,f)),_.setAttribute("faceIndex",new he(b,x)),t.push(_),i.push(new k(_,null)),n>4&&n--}return{lodPlanes:t,sizeLods:s,sigmas:r,lodMeshes:i}}(i)),this._blurMaterial=function(e,t,r){const i=Tl(new Array(Am).fill(0)),n=Xi(new s(0,1,0)),o=Xi(0),a=xi(Am),u=Xi(0),l=Xi(1),d=pu(null),c=Xi(0),h=xi(1/t),p=xi(1/r),g=xi(e),m={n:a,latitudinal:u,weights:i,poleAxis:n,outputDirection:Dm,dTheta:o,samples:l,envMap:d,mipInt:c,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:p,CUBEUV_MAX_MIP:g},f=km("blur");return f.uniforms=m,f.fragmentNode=Lp({...m,latitudinal:u.equal(1)}),f}(i,e,t)}return i}async _compileMaterial(e){const t=new k(this._lodPlanes[0],e);await this._renderer.compile(t,Cm)}_sceneToCubeUV(e,t,s,r){const i=Em;i.near=t,i.far=s;const n=[-1,1,-1,-1,-1,-1],o=[1,1,1,-1,-1,-1],a=this._renderer,u=a.autoClear;a.getClearColor(wm),a.autoClear=!1;let l=this._backgroundBox;if(null===l){const e=new Z({name:"PMREM.Background",side:b,depthWrite:!1,depthTest:!1});l=new k(new G,e)}let d=!1;const c=e.background;c?c.isColor&&(l.material.color.copy(c),e.background=null,d=!0):(l.material.color.copy(wm),d=!0),a.setRenderTarget(r),a.clear(),d&&a.render(l,i);for(let t=0;t<6;t++){const s=t%3;0===s?(i.up.set(0,n[t],0),i.lookAt(o[t],0,0)):1===s?(i.up.set(0,0,n[t]),i.lookAt(0,o[t],0)):(i.up.set(0,n[t],0),i.lookAt(0,0,o[t]));const u=this._cubeSize;zm(r,s*u,t>2?u:0,u,u),a.render(e,i)}a.autoClear=u,e.background=c}_textureToCubeUV(e,t){const s=this._renderer,r=e.mapping===_||e.mapping===N;r?null===this._cubemapMaterial&&(this._cubemapMaterial=$m(e)):null===this._equirectMaterial&&(this._equirectMaterial=Hm(e));const i=r?this._cubemapMaterial:this._equirectMaterial;i.fragmentNode.value=e;const n=this._lodMeshes[0];n.material=i;const o=this._cubeSize;zm(t,0,0,3*o,2*o),s.setRenderTarget(t),s.render(n,Cm)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let t=1;t<r;t++){const s=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),i=Im[(r-t-1)%Im.length];this._blur(e,t-1,t,s,i)}t.autoClear=s}_blur(e,t,s,r,i){const n=this._pingPongRenderTarget;this._halfBlur(e,n,t,s,r,"latitudinal",i),this._halfBlur(n,e,s,s,r,"longitudinal",i)}_halfBlur(e,t,s,r,i,n,o){const a=this._renderer,u=this._blurMaterial;"latitudinal"!==n&&"longitudinal"!==n&&console.error("blur direction must be either latitudinal or longitudinal!");const l=this._lodMeshes[r];l.material=u;const d=u.uniforms,c=this._sizeLods[s]-1,h=isFinite(i)?Math.PI/(2*c):2*Math.PI/39,p=i/h,g=isFinite(i)?1+Math.floor(3*p):Am;g>Am&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${g} samples when the maximum is set to 20`);const m=[];let f=0;for(let e=0;e<Am;++e){const t=e/p,s=Math.exp(-t*t/2);m.push(s),0===e?f+=s:e<g&&(f+=2*s)}for(let e=0;e<m.length;e++)m[e]=m[e]/f;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value="latitudinal"===n?1:0,o&&(d.poleAxis.value=o);const{_lodMax:x}=this;d.dTheta.value=h,d.mipInt.value=x-s;const y=this._sizeLods[r];zm(t,3*y*(r>x-4?r-x+4:0),4*(this._cubeSize-y),3*y,2*y),a.setRenderTarget(t),a.render(l,Cm)}}function Gm(e,t,s){const r=new pe(e,t,s);return r.texture.mapping=ge,r.texture.name="PMREM.cubeUv",r.texture.isPMREMTexture=!0,r.scissorTest=!0,r}function zm(e,t,s,r,i){e.viewport.set(t,s,r,i),e.scissor.set(t,s,r,i)}function km(e){const t=new jc;return t.depthTest=!1,t.depthWrite=!1,t.blending=z,t.name=`PMREM_${e}`,t}function $m(e){const t=km("cubemap");return t.fragmentNode=gl(e,Dm),t}function Hm(e){const t=km("equirect");return t.fragmentNode=pu(e,oh(Dm),0),t}let Wm=0;class jm{constructor(e="",t=[],s=0,r=[]){this.name=e,this.bindings=t,this.index=s,this.bindingsReference=r,this.id=Wm++}}const qm=new WeakMap,Xm=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),Km=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),Ym=e=>(e=Number(e))+(e%1?"":".0");class Qm{constructor(e,t,s){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=null,this.camera=null,this.nodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=Sm(),this.stacks=[],this.tab="\t",this.instanceBindGroups=!0,this.currentFunctionNode=null,this.context={material:this.material},this.cache=new Yg,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=qm.get(this.renderer);return void 0===e&&(e=new bg,qm.set(this.renderer,e)),e}createRenderTarget(e,t,s){return new pe(e,t,s)}createCubeRenderTarget(e,t){return new ah(e,t)}createPMREMGenerator(){return new Om(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const s=this.getBindGroupsCache(),r=[];let i,n=!0;for(const e of t)r.push(e),n=n&&!0!==e.groupNode.shared;return n?(i=s.get(r),void 0===i&&(i=new jm(e,r,this.bindingsIndexes[e].group,r),s.set(r,i))):i=new jm(e,r,this.bindingsIndexes[e].group,r),i}getBindGroupArray(e,t){const s=this.bindings[t];let r=s[e];return void 0===r&&(void 0===this.bindingsIndexes[e]&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),s[e]=r=[]),r}getBindings(){let e=this.bindGroups;if(null===e){const t={},s=this.bindings;for(const e of fr)for(const r in s[e]){const i=s[e][r];(t[r]||(t[r]=[])).push(...i)}e=[];for(const s in t){const r=t[s],i=this._getBindGroup(s,r);e.push(i)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort(((e,t)=>e.bindings[0].groupNode.order-t.bindings[0].groupNode.order));for(let t=0;t<e.length;t++){const s=e[t];this.bindingsIndexes[s.name].group=t,s.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}buildUpdateNodes(){for(const e of this.nodes){const t=e.getUpdateType(),s=e.getUpdateBeforeType(),r=e.getUpdateAfterType();t!==hr.NONE&&this.updateNodes.push(e.getSelf()),s!==hr.NONE&&this.updateBeforeNodes.push(e.getSelf()),r!==hr.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===H||e.magFilter===Te||e.magFilter===be||e.magFilter===B||e.minFilter===H||e.minFilter===Te||e.minFilter===be||e.minFilter===B}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const s=this.getDataFromNode(e);return void 0===s.cache&&(s.cache=new Yg(t?this.getCache():null)),s.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=void 0===t.usageCount?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(i,n=null){if(null===n&&("float"===i||"int"===i||"uint"===i?n=0:"bool"===i?n=!1:"color"===i?n=new e:"vec2"===i?n=new t:"vec3"===i?n=new s:"vec4"===i&&(n=new r)),"float"===i)return Ym(n);if("int"===i)return`${Math.round(n)}`;if("uint"===i)return n>=0?`${Math.round(n)}u`:"0u";if("bool"===i)return n?"true":"false";if("color"===i)return`${this.getType("vec3")}( ${Ym(n.r)}, ${Ym(n.g)}, ${Ym(n.b)} )`;const o=this.getTypeLength(i),a=this.getComponentType(i),u=e=>this.generateConst(a,e);if(2===o)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)} )`;if(3===o)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)}, ${u(n.z)} )`;if(4===o)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)}, ${u(n.z)}, ${u(n.w)} )`;if(o>4&&n&&(n.isMatrix3||n.isMatrix4))return`${this.getType(i)}( ${n.elements.map(u).join(", ")} )`;if(o>4)return`${this.getType(i)}()`;throw new Error(`NodeBuilder: Type '${i}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const s=this.attributes;for(const t of s)if(t.name===e)return t;const r=new Hg(e,t);return s.push(r),r}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e||"storageTexture"===e||"depthTexture"===e||"texture3D"===e}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===y)return"int";if(t===x)return"uint"}return"float"}getElementType(e){return"mat2"===e?"vec2":"mat3"===e?"vec3":"mat4"===e?"vec4":this.getComponentType(e)}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e||"cubeTexture"===e||"storageTexture"===e||"texture3D"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;const s=Xm.get(e);return("float"===t?"":t[0])+s}getTypeFromArray(e){return Km.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,r=e.itemSize,i=e.normalized;let n;return e instanceof _e||!0===i||(n=this.getTypeFromArray(s)),this.getTypeFromLength(r,n)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return null!==s?Number(s[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat2/.test(e)?4:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Sm(this.stack),this.stacks.push(pi()||this.stack),hi(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,hi(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,s=null){let r=(s=null===s?e.isGlobal(this)?this.globalCache:this.cache:s).getData(e);return void 0===r&&(r={},s.setData(e,r)),void 0===r[t]&&(r[t]={}),r[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let r=s.bufferAttribute;if(void 0===r){const i=this.uniforms.index++;r=new Hg("nodeAttribute"+i,t,e),this.bufferAttributes.push(r),s.bufferAttribute=r}return r}getStructTypeFromNode(e,t=this.shaderStage){const s=this.getDataFromNode(e,t);if(void 0===s.structType){const r=this.structs.index++;e.name=`StructType${r}`,this.structs[t].push(e),s.structType=e}return e}getUniformFromNode(e,t,s=this.shaderStage,r=null){const i=this.getDataFromNode(e,s,this.globalCache);let n=i.uniform;if(void 0===n){const o=this.uniforms.index++;n=new Wg(r||"nodeUniform"+o,t,e),this.uniforms[s].push(n),i.uniform=n}return n}getVarFromNode(e,t=null,s=e.getNodeType(this),r=this.shaderStage){const i=this.getDataFromNode(e,r);let n=i.variable;if(void 0===n){const e=this.vars[r]||(this.vars[r]=[]);null===t&&(t="nodeVar"+e.length),n=new jg(t,s),e.push(n),i.variable=n}return n}getVaryingFromNode(e,t=null,s=e.getNodeType(this)){const r=this.getDataFromNode(e,"any");let i=r.varying;if(void 0===i){const e=this.varyings,n=e.length;null===t&&(t="nodeVarying"+n),i=new qg(t,s),e.push(i),r.varying=i}return i}getCodeFromNode(e,t,s=this.shaderStage){const r=this.getDataFromNode(e);let i=r.code;if(void 0===i){const e=this.codes[s]||(this.codes[s]=[]),n=e.length;i=new Xg("nodeCode"+n,t),e.push(i),r.code=i}return i}addLineFlowCode(e){return""===e||(e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}buildFunctionNode(e){const t=new im,s=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=s,t}flowShaderNode(e){const t=e.layout,s={[Symbol.iterator](){let e=0;const t=Object.values(this);return{next:()=>({value:t[e],done:e++>=t.length})}}};for(const e of t.inputs)s[e.name]=new Qg(e.type,e.name);e.layout=null;const r=e.call(s),i=this.flowStagesNode(r,t.type);return e.layout=t,i}flowStagesNode(e,t=null){const s=this.flow,r=this.vars,i=this.cache,n=this.buildStage,o=this.stack,a={code:""};this.flow=a,this.vars={},this.cache=new Yg,this.stack=Sm();for(const s of mr)this.setBuildStage(s),a.result=e.build(this,t);return a.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=r,this.cache=i,this.stack=o,this.setBuildStage(n),a}getFunctionOperator(){return null}flowChildNode(e,t=null){const s=this.flow,r={code:""};return this.flow=r,r.result=e.build(this,t),this.flow=s,r}flowNodeFromShaderStage(e,t,s=null,r=null){const i=this.shaderStage;this.setShaderStage(e);const n=this.flowChildNode(t,s);return null!==r&&(n.code+=`${this.tab+r} = ${n.result};\n`),this.flowCode[e]=this.flowCode[e]+n.code,this.setShaderStage(i),n}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(void 0!==s)for(const e of s)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let s="";if(void 0!==t)for(const e of t)s+=e.code+"\n";return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:s}=this;if(null!==t){let e=s.nodes.library.fromMaterial(t);null===e&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),e=new jc),e.build(this)}else this.addFlow("compute",e);for(const e of mr){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of fr){this.setShaderStage(t);const s=this.flowNodes[t];for(const t of s)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t||"int"===t||"uint"===t)return new fm(e);if("vec2"===t||"ivec2"===t||"uvec2"===t)return new xm(e);if("vec3"===t||"ivec3"===t||"uvec3"===t)return new ym(e);if("vec4"===t||"ivec4"===t||"uvec4"===t)return new Tm(e);if("color"===t)return new bm(e);if("mat3"===t)return new _m(e);if("mat4"===t)return new Nm(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,s){if((t=this.getVectorType(t))===(s=this.getVectorType(s))||null===s||this.isReference(s))return e;const r=this.getTypeLength(t),i=this.getTypeLength(s);return 16===r&&9===i?`${this.getType(s)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:9===r&&4===i?`${this.getType(s)}(${e}[0].xy, ${e}[1].xy)`:r>4||i>4||0===i?e:r===i?`${this.getType(s)}( ${e} )`:r>i?this.format(`${e}.${"xyz".slice(0,i)}`,this.getTypeFromLength(i,this.getComponentType(t)),s):4===i&&r>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===r?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===r&&i>1&&t!==this.getComponentType(s)&&(e=`${this.getType(this.getComponentType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${Ne} - Node System\n`}}class Zm{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return void 0===s&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===hr.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(s)!==this.frameId&&!1!==e.updateBefore(this)&&t.set(s,this.frameId)}else if(t===hr.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(s)!==this.renderId&&!1!==e.updateBefore(this)&&t.set(s,this.renderId)}else t===hr.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),s=e.updateReference(this);if(t===hr.FRAME){const{frameMap:t}=this._getMaps(this.updateAfterMap,s);t.get(s)!==this.frameId&&!1!==e.updateAfter(this)&&t.set(s,this.frameId)}else if(t===hr.RENDER){const{renderMap:t}=this._getMaps(this.updateAfterMap,s);t.get(s)!==this.renderId&&!1!==e.updateAfter(this)&&t.set(s,this.renderId)}else t===hr.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===hr.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,s);t.get(s)!==this.frameId&&!1!==e.update(this)&&t.set(s,this.frameId)}else if(t===hr.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,s);t.get(s)!==this.renderId&&!1!==e.update(this)&&t.set(s,this.renderId)}else t===hr.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class Jm{constructor(e,t,s=null,r="",i=!1){this.type=e,this.name=t,this.count=s,this.qualifier=r,this.isConst=i}}Jm.isNodeFunctionInput=!0;class ef extends Tr{static get type(){return"StructTypeNode"}constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}class tf extends Tr{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}setup(e){super.setup(e);const t=this.members,s=[];for(let r=0;r<t.length;r++)s.push(t[r].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new ef(s)).name}generate(e,t){const s=e.getOutputStructName(),r=this.members,i=""!==s?s+".":"";for(let s=0;s<r.length;s++){const n=r[s].build(e,t);e.addLineFlowCode(`${i}m${s} = ${n}`)}return s}}const sf=ui(tf);function rf(e,t){for(let s=0;s<e.length;s++)if(e[s].name===t)return s;return-1}class nf extends tf{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return void 0!==this.outputNodes[e]}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return of(t)}setup(e){const t=this.outputNodes,s=[],r=e.renderer.getRenderTarget().textures;for(const e in t){s[rf(r,e)]=wi(t[e])}return this.members=s,super.setup(e)}}const of=ui(nf);class af extends Tr{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let s=this._candidateFnCall;if(null===s){let r=null,i=-1;for(const s of this.functionNodes){const n=s.shaderNode.layout;if(null===n)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const o=n.inputs;if(t.length===o.length){let n=0;for(let s=0;s<t.length;s++){const r=t[s],i=o[s];r.getNodeType(e)===i.type?n++:n=0}n>i&&(r=s,i=n)}}this._candidateFnCall=s=r(...t)}return s}}const uf=ui(af),lf=e=>(...t)=>uf(e,...t);class df extends qi{static get type(){return"TimerNode"}constructor(e=df.LOCAL,t=1,s=0){super(s),this.scope=e,this.scale=t,this.updateType=hr.FRAME}update(e){const t=this.scope,s=this.scale;t===df.LOCAL?this.value+=e.deltaTime*s:t===df.DELTA?this.value=e.deltaTime*s:t===df.FRAME?this.value=e.frameId:this.value=e.time*s}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}df.LOCAL="local",df.GLOBAL="global",df.DELTA="delta",df.FRAME="frame";const cf=(e,t=0)=>ni(new df(df.LOCAL,e,t)),hf=(e,t=0)=>ni(new df(df.GLOBAL,e,t)),pf=(e,t=0)=>ni(new df(df.DELTA,e,t)),gf=li(df,df.FRAME).toUint();class mf extends Tr{static get type(){return"OscNode"}constructor(e=mf.SINE,t=cf()){super(),this.method=e,this.timeNode=t}getNodeType(e){return this.timeNode.getNodeType(e)}setup(){const e=this.method,t=ni(this.timeNode);let s=null;return e===mf.SINE?s=t.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5):e===mf.SQUARE?s=t.fract().round():e===mf.TRIANGLE?s=t.add(.5).fract().mul(2).sub(1).abs():e===mf.SAWTOOTH&&(s=t.fract()),s}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}mf.SINE="sine",mf.SQUARE="square",mf.TRIANGLE="triangle",mf.SAWTOOTH="sawtooth";const ff=ui(mf,mf.SINE),xf=ui(mf,mf.SQUARE),yf=ui(mf,mf.TRIANGLE),Tf=ui(mf,mf.SAWTOOTH);class bf extends Tr{static get type(){return"SpriteSheetUVNode"}constructor(e,t=au(),s=xi(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:r,height:i}=s,n=e.mod(r.mul(i)).floor(),o=n.mod(r),a=i.sub(n.add(1).div(r).ceil()),u=s.reciprocal(),l=_i(o,a);return t.add(l).mul(u)}}const _f=ui(bf);class Nf extends br{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}setup(e){return!1===e.isAvailable("storageBuffer")&&!0===this.node.bufferObject&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let s;const r=e.context.assign;if(s=!1===e.isAvailable("storageBuffer")?!0===this.node.bufferObject&&!0!==r?e.generatePBO(this):this.node.build(e):super.generate(e),!0!==r){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}const vf=ui(Nf);class Sf extends Tr{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,s=null,r=xi(1),i=$u,n=Ju){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=r,this.positionNode=i,this.normalNode=n}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:r,positionNode:i,normalNode:n}=this;let o=n.abs().normalize();o=o.div(o.dot(Ri(1)));const a=i.yz.mul(r),u=i.zx.mul(r),l=i.xy.mul(r),d=e.value,c=null!==t?t.value:d,h=null!==s?s.value:d,p=pu(d,a).mul(o.x),g=pu(c,u).mul(o.y),m=pu(h,l).mul(o.z);return Un(p,g,m)}}const Rf=ui(Sf),Af=(...e)=>Rf(...e),Cf=new ue,Ef=new s,wf=new s,Mf=new s,Bf=new n,Uf=new s(0,0,-1),Ff=new r,Pf=new s,If=new s,Lf=new r,Vf=new t,Df=new pe,Of=Tc.flipX();let Gf=!1;class zf extends hu{static get type(){return"ReflectorNode"}constructor(e={}){super(Df.texture,Of);const{target:t=new ve,resolution:s=1,generateMipmaps:r=!1,bounces:i=!0}=e;this.target=t,this.resolution=s,this.generateMipmaps=r,this.bounces=i,this.updateBeforeType=i?hr.RENDER:hr.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(e,t){const s=this.resolution;t.getDrawingBufferSize(Vf),e.setSize(Math.round(Vf.width*s),Math.round(Vf.height*s))}setup(e){return this._updateResolution(Df,e.renderer),super.setup(e)}getTextureNode(){return this.textureNode}getVirtualCamera(e){let t=this.virtualCameras.get(e);return void 0===t&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return void 0===t&&(t=new pe(0,0,{type:xe}),!0===this.generateMipmaps&&(t.texture.minFilter=Se,t.texture.generateMipmaps=!0),this.renderTargets.set(e,t)),t}updateBefore(e){if(!1===this.bounces&&Gf)return!1;Gf=!0;const{scene:t,camera:s,renderer:r,material:i}=e,{target:n}=this,o=this.getVirtualCamera(s),a=this.getRenderTarget(o);if(r.getDrawingBufferSize(Vf),this._updateResolution(a,r),wf.setFromMatrixPosition(n.matrixWorld),Mf.setFromMatrixPosition(s.matrixWorld),Bf.extractRotation(n.matrixWorld),Ef.set(0,0,1),Ef.applyMatrix4(Bf),Pf.subVectors(wf,Mf),Pf.dot(Ef)>0)return;Pf.reflect(Ef).negate(),Pf.add(wf),Bf.extractRotation(s.matrixWorld),Uf.set(0,0,-1),Uf.applyMatrix4(Bf),Uf.add(Mf),If.subVectors(wf,Uf),If.reflect(Ef).negate(),If.add(wf),o.coordinateSystem=s.coordinateSystem,o.position.copy(Pf),o.up.set(0,1,0),o.up.applyMatrix4(Bf),o.up.reflect(Ef),o.lookAt(If),o.near=s.near,o.far=s.far,o.updateMatrixWorld(),o.projectionMatrix.copy(s.projectionMatrix),Cf.setFromNormalAndCoplanarPoint(Ef,wf),Cf.applyMatrix4(o.matrixWorldInverse),Ff.set(Cf.normal.x,Cf.normal.y,Cf.normal.z,Cf.constant);const u=o.projectionMatrix;Lf.x=(Math.sign(Ff.x)+u.elements[8])/u.elements[0],Lf.y=(Math.sign(Ff.y)+u.elements[9])/u.elements[5],Lf.z=-1,Lf.w=(1+u.elements[10])/u.elements[14],Ff.multiplyScalar(1/Ff.dot(Lf));u.elements[2]=Ff.x,u.elements[6]=Ff.y,u.elements[10]=Ff.z-0,u.elements[14]=Ff.w,this.value=a.texture,i.visible=!1;const l=r.getRenderTarget(),d=r.getMRT();r.setMRT(null),r.setRenderTarget(a),r.render(t,o),r.setMRT(d),r.setRenderTarget(l),i.visible=!0,Gf=!1}}const kf=e=>ni(new zf(e)),$f=new me(-1,1,1,-1,0,1);class Hf extends ce{constructor(e=!1){super();const t=!1===e?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Re([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Re(t,2))}}const Wf=new Hf;class jf extends k{constructor(e=null){super(Wf,e),this.camera=$f,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,$f)}render(e){e.render(this,$f)}}const qf=new t;class Xf extends hu{static get type(){return"RTTNode"}constructor(e,t=null,s=null,r={type:xe}){const i=new pe(t,s,r);super(i.texture,au()),this.node=e,this.width=t,this.height=s,this.renderTarget=i,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this.updateMap=new WeakMap,this._rttNode=null,this._quadMesh=new jf(new jc),this.updateBeforeType=hr.RENDER}get autoSize(){return null===this.width}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const s=e*this.pixelRatio,r=t*this.pixelRatio;this.renderTarget.setSize(s,r),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoSize){this.pixelRatio=e.getPixelRatio();const t=e.getSize(qf);this.setSize(t.width,t.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new hu(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const Kf=(e,...t)=>ni(new Xf(ni(e),...t)),Yf=(e,...t)=>e.isTextureNode?e:Kf(e,...t);class Qf extends nu{static get type(){return"VertexColorNode"}constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e);let s;return s=!0===e.hasGeometryAttribute(t)?super.generate(e):e.generateConst(this.nodeType,new r(1,1,1,1)),s}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const Zf=(...e)=>ni(new Qf(...e));class Jf extends Tr{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const ex=li(Jf);class tx extends Tr{static get type(){return"SceneNode"}constructor(e=tx.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=null!==this.scene?this.scene:e.scene;let r;return t===tx.BACKGROUND_BLURRINESS?r=vl("backgroundBlurriness","float",s):t===tx.BACKGROUND_INTENSITY?r=vl("backgroundIntensity","float",s):console.error("THREE.SceneNode: Unknown scope:",t),r}}tx.BACKGROUND_BLURRINESS="backgroundBlurriness",tx.BACKGROUND_INTENSITY="backgroundIntensity";const sx=li(tx,tx.BACKGROUND_BLURRINESS),rx=li(tx,tx.BACKGROUND_INTENSITY),ix="point-list",nx="line-list",ox="line-strip",ax="triangle-list",ux="triangle-strip",lx="never",dx="less",cx="equal",hx="less-equal",px="greater",gx="not-equal",mx="greater-equal",fx="always",xx="store",yx="load",Tx="clear",bx="ccw",_x="none",Nx="front",vx="back",Sx="uint16",Rx="uint32",Ax={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Cx="clamp-to-edge",Ex="repeat",wx="mirror-repeat",Mx="linear",Bx="nearest",Ux="zero",Fx="one",Px="src",Ix="one-minus-src",Lx="src-alpha",Vx="one-minus-src-alpha",Dx="dst",Ox="one-minus-dst",Gx="dst-alpha",zx="one-minus-dst-alpha",kx="src-alpha-saturated",$x="constant",Hx="one-minus-constant",Wx="add",jx="subtract",qx="reverse-subtract",Xx="min",Kx="max",Yx=0,Qx=15,Zx="keep",Jx="zero",ey="replace",ty="invert",sy="increment-clamp",ry="decrement-clamp",iy="increment-wrap",ny="decrement-wrap",oy="storage",ay="read-only-storage",uy="write-only",ly="read-only",dy="float",cy="unfilterable-float",hy="depth",py="sint",gy="uint",my="2d",fy="3d",xy="2d",yy="2d-array",Ty="cube",by="3d",_y="all",Ny="vertex",vy="instance",Sy={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class Ry extends ml{static get type(){return"StorageBufferNode"}constructor(e,t,s=0){super(e,t,s),this.isStorageBufferNode=!0,this.access=oy,this.bufferObject=!1,this.bufferCount=s,this._attribute=null,this._varying=null,this.global=!0,!0!==e.isStorageBufferAttribute&&!0!==e.isStorageInstancedBufferAttribute&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(0===this.bufferCount){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return"storageBuffer"}element(e){return vf(this,e)}setBufferObject(e){return this.bufferObject=e,this}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(ay)}generate(e){if(e.isAvailable("storageBuffer"))return super.generate(e);const t=this.getNodeType(e);null===this._attribute&&(this._attribute=Oa(this.value),this._varying=_a(this._attribute));const s=this._varying.build(e,t);return e.registerTransform(s,this._attribute),s}}const Ay=(e,t,s)=>ni(new Ry(e,t,s)),Cy=(e,t,s)=>ni(new Ry(e,t,s).setBufferObject(!0));class Ey extends hu{static get type(){return"StorageTextureNode"}constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStorageTextureNode=!0,this.access=uy}getInputType(){return"storageTexture"}setup(e){super.setup(e);e.getNodeProperties(this).storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let s;return s=null!==this.storeNode?this.generateStore(e):super.generate(e,t),s}toReadOnly(){return this.setAccess(ly)}toWriteOnly(){return this.setAccess(uy)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:s,storeNode:r}=t,i=super.generate(e,"property"),n=s.build(e,"uvec2"),o=r.build(e,"vec4"),a=e.generateTextureStore(e,i,n,o);e.addLineFlowCode(a)}}const wy=ui(Ey),My=(e,t,s)=>{const r=wy(e,t,s);return null!==s&&r.append(),r};class By extends Nl{static get type(){return"UserDataNode"}constructor(e,t,s=null){super(e,t,s),this.userData=s}update(e){this.reference=null!==this.userData?this.userData:e.object.userData,super.update(e)}}const Uy=(e,t,s)=>ni(new By(e,t,s));class Fy extends Nr{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const Py=ui(Fy);let Iy=null;class Ly extends Mc{static get type(){return"ViewportSharedTextureNode"}constructor(e=Tc,t=null){null===Iy&&(Iy=new M),super(e,t,Iy)}updateReference(){return this}}const Vy=ui(Ly),Dy=new t;class Oy extends hu{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class Gy extends Oy{static get type(){return"PassMultipleTextureNode"}constructor(e,t,s=!1){super(e,null),this.textureName=t,this.previousTexture=s}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class zy extends Nr{static get type(){return"PassNode"}constructor(e,t,s,r={}){super("vec4"),this.scope=e,this.scene=t,this.camera=s,this.options=r,this._pixelRatio=1,this._width=1,this._height=1;const i=new U;i.isRenderTargetTexture=!0,i.name="depth";const n=new pe(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:xe,...r});n.texture.name="output",n.depthTexture=i,this.renderTarget=n,this.updateBeforeType=hr.FRAME,this._textures={output:n.texture,depth:i},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=Xi(0),this._cameraFar=Xi(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];if(void 0===t){t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)}return t}getPreviousTexture(e){let t=this._previousTextures[e];return void 0===t&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(void 0!==t){const s=this._textures[e],r=this.renderTarget.textures.indexOf(s);this.renderTarget.textures[r]=t,this._textures[e]=t,this._previousTextures[e]=s,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return void 0===t&&(this._textureNodes[e]=t=ni(new Gy(this,e)),this._textureNodes[e].updateTexture()),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return void 0===t&&(void 0===this._textureNodes[e]&&this.getTextureNode(e),this._previousTextureNodes[e]=t=ni(new Gy(this,e,!0)),this._previousTextureNodes[e].updateTexture()),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(void 0===t){const s=this._cameraNear,r=this._cameraFar;this._viewZNodes[e]=t=Gc(this.getTextureNode(e),s,r)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(void 0===t){const s=this._cameraNear,r=this._cameraFar,i=this.getViewZNode(e);this._linearDepthNodes[e]=t=Vc(i,s,r)}return t}setup({renderer:e}){return this.renderTarget.samples=void 0===this.options.samples?e.samples:this.options.samples,!0===e.backend.isWebGLBackend&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===zy.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r}=this;this._pixelRatio=t.getPixelRatio();const i=t.getSize(Dy);this.setSize(i.width,i.height);const n=t.getRenderTarget(),o=t.getMRT();this._cameraNear.value=r.near,this._cameraFar.value=r.far;for(const e in this._previousTextures)this.toggleTexture(e);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(s,r),t.setRenderTarget(n),t.setMRT(o)}setSize(e,t){this._width=e,this._height=t;const s=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget.setSize(s,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}zy.COLOR="color",zy.DEPTH="depth";const ky=(e,t,s)=>ni(new zy(zy.COLOR,e,t,s)),$y=(e,t)=>ni(new Oy(e,t)),Hy=(e,t)=>ni(new zy(zy.DEPTH,e,t)),Wy=new jf,jy=new jf;class qy extends Nr{static get type(){return"GaussianBlurNode"}constructor(e,s=null,r=2){super("vec4"),this.textureNode=e,this.directionNode=s,this.sigma=r,this._invSize=Xi(new t),this._passDirection=Xi(new t),this._horizontalRT=new pe,this._horizontalRT.texture.name="GaussianBlurNode.horizontal",this._verticalRT=new pe,this._verticalRT.texture.name="GaussianBlurNode.vertical",this._textureNode=$y(this,this._verticalRT.texture),this.updateBeforeType=hr.RENDER,this.resolution=new t(1,1)}setSize(e,t){e=Math.max(Math.round(e*this.resolution.x),1),t=Math.max(Math.round(t*this.resolution.y),1),this._invSize.value.set(1/e,1/t),this._horizontalRT.setSize(e,t),this._verticalRT.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=this.textureNode,r=s.value,i=t.getRenderTarget(),n=t.getMRT(),o=s.value;Wy.material=this._material,jy.material=this._material,this.setSize(r.image.width,r.image.height);const a=r.type;this._horizontalRT.texture.type=a,this._verticalRT.texture.type=a,t.setMRT(null),t.setRenderTarget(this._horizontalRT),this._passDirection.value.set(1,0),Wy.render(t),s.value=this._horizontalRT.texture,t.setRenderTarget(this._verticalRT),this._passDirection.value.set(0,1),jy.render(t),t.setRenderTarget(i),t.setMRT(n),s.value=o}getTextureNode(){return this._textureNode}setup(e){const t=this.textureNode;if(!0!==t.isTextureNode)return console.error("GaussianBlurNode requires a TextureNode."),wi();const s=t.uvNode||au(),r=_i(this.directionNode||1),i=e=>t.uv(e),n=di((()=>{const e=3+2*this.sigma,t=this._getCoefficients(e),n=this._invSize,o=r.mul(this._passDirection),a=xi(t[0]).toVar(),u=wi(i(s).mul(a)).toVar();for(let r=1;r<e;r++){const e=xi(r),l=xi(t[r]),d=_i(o.mul(n.mul(e))).toVar(),c=wi(i(s.add(d))),h=wi(i(s.sub(d)));u.addAssign(c.add(h).mul(l)),a.addAssign(Pn(2,l))}return u.div(a)})),o=this._material||(this._material=new jc);o.fragmentNode=n().context(e.getSharedContext()),o.name="Gaussian_blur",o.needsUpdate=!0;return e.getNodeProperties(this).textureNode=t,this._textureNode}dispose(){this._horizontalRT.dispose(),this._verticalRT.dispose()}_getCoefficients(e){const t=[];for(let s=0;s<e;s++)t.push(.39894*Math.exp(-.5*s*s/(e*e))/e);return t}}const Xy=(e,t,s)=>ni(new qy(Yf(e),t,s)),Ky=new t,Yy=new jf;class Qy extends Nr{static get type(){return"AfterImageNode"}constructor(e,t=.96){super(e),this.textureNode=e,this.textureNodeOld=pu(),this.damp=Xi(t),this._compRT=new pe,this._compRT.texture.name="AfterImageNode.comp",this._oldRT=new pe,this._oldRT.texture.name="AfterImageNode.old",this._textureNode=$y(this,this._compRT.texture),this.updateBeforeType=hr.RENDER}getTextureNode(){return this._textureNode}setSize(e,t){this._compRT.setSize(e,t),this._oldRT.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=this.textureNode,r=s.value.type;this._compRT.texture.type=r,this._oldRT.texture.type=r,t.getDrawingBufferSize(Ky),this.setSize(Ky.x,Ky.y);const i=t.getRenderTarget(),n=s.value;this.textureNodeOld.value=this._oldRT.texture,t.setRenderTarget(this._compRT),Yy.render(t);const o=this._oldRT;this._oldRT=this._compRT,this._compRT=o,t.setRenderTarget(i),s.value=n}setup(e){const t=this.textureNode,s=this.textureNodeOld,r=t.uvNode||au();s.uvNode=r;const i=di((([e,t])=>{const s=xi(t).toVar(),r=wi(e).toVar();return ko(Eo(r.sub(s)),0)})),n=di((()=>{const e=wi(s),n=wi((e=>t.uv(e))(r));return e.mulAssign(this.damp.mul(i(e,.1))),ko(n,e)})),o=this._materialComposed||(this._materialComposed=new jc);o.name="AfterImage",o.fragmentNode=n(),Yy.material=o;return e.getNodeProperties(this).textureNode=t,this._textureNode}dispose(){this._compRT.dispose(),this._oldRT.dispose()}}const Zy=(e,t)=>ni(new Qy(Yf(e),t)),Jy=di((([e])=>iT(e.rgb))),eT=di((([e,t=xi(1)])=>t.mix(iT(e.rgb),e.rgb))),tT=di((([e,t=xi(1)])=>{const s=Un(e.r,e.g,e.b).div(3),r=e.r.max(e.g.max(e.b)),i=r.sub(s).mul(t).mul(-3);return ra(e.rgb,r,i)})),sT=di((([e,t=xi(1)])=>{const s=Ri(.57735,.57735,.57735),r=t.cos();return Ri(e.rgb.mul(r).add(s.cross(e.rgb).mul(t.sin()).add(s.mul(Xo(s,e.rgb).mul(r.oneMinus())))))})),rT=new s,iT=(e,t=Ri(...u.getLuminanceCoefficients(rT)))=>Xo(e,t),nT=(e,t)=>ra(Ri(0),e,iT(e).sub(t).max(0)),oT=new jf;class aT extends Nr{static get type(){return"AnamorphicNode"}constructor(e,s,r,i){super("vec4"),this.textureNode=e,this.tresholdNode=s,this.scaleNode=r,this.colorNode=Ri(.1,0,1),this.samples=i,this.resolution=new t(1,1),this._renderTarget=new pe,this._renderTarget.texture.name="anamorphic",this._invSize=Xi(new t),this._textureNode=$y(this,this._renderTarget.texture),this.updateBeforeType=hr.RENDER}getTextureNode(){return this._textureNode}setSize(e,t){this._invSize.value.set(1/e,1/t),e=Math.max(Math.round(e*this.resolution.x),1),t=Math.max(Math.round(t*this.resolution.y),1),this._renderTarget.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=this.textureNode,r=s.value;this._renderTarget.texture.type=r.type;const i=t.getRenderTarget(),n=s.value;oT.material=this._material,this.setSize(r.image.width,r.image.height),t.setRenderTarget(this._renderTarget),oT.render(t),t.setRenderTarget(i),s.value=n}setup(e){const t=this.textureNode,s=t.uvNode||au(),r=di((()=>{const e=this.samples,r=Math.floor(e/2),i=Ri(0).toVar();return Jd({start:-r,end:r},(({i:e})=>{const n=xi(e).abs().div(r).oneMinus(),o=(e=>t.uv(e))(_i(s.x.add(this._invSize.x.mul(e).mul(this.scaleNode)),s.y)),a=nT(o,this.tresholdNode).mul(n);i.addAssign(a)})),i.mul(this.colorNode)})),i=this._material||(this._material=new jc);i.name="Anamorphic",i.fragmentNode=r();return e.getNodeProperties(this).textureNode=t,this._textureNode}dispose(){this._renderTarget.dispose()}}const uT=(e,t=.9,s=3,r=32)=>ni(new aT(Yf(e),ni(t),ni(s),r));class lT extends Nr{static get type(){return"SobelOperatorNode"}constructor(e){super(),this.textureNode=e,this.updateBeforeType=hr.RENDER,this._invSize=Xi(new t)}updateBefore(){const e=this.textureNode.value;this._invSize.value.set(1/e.image.width,1/e.image.height)}setup(){const{textureNode:e}=this,t=e.uvNode||au(),s=t=>e.uv(t);return di((()=>{const e=this._invSize,r=Pi(-1,-2,-1,0,0,0,1,2,1),i=Pi(-1,0,1,-2,0,2,-1,0,1),n=iT(s(t.add(e.mul(_i(-1,-1)))).xyz),o=iT(s(t.add(e.mul(_i(-1,0)))).xyz),a=iT(s(t.add(e.mul(_i(-1,1)))).xyz),u=iT(s(t.add(e.mul(_i(0,-1)))).xyz),l=iT(s(t.add(e.mul(_i(0,0)))).xyz),d=iT(s(t.add(e.mul(_i(0,1)))).xyz),c=iT(s(t.add(e.mul(_i(1,-1)))).xyz),h=iT(s(t.add(e.mul(_i(1,0)))).xyz),p=iT(s(t.add(e.mul(_i(1,1)))).xyz),g=Un(r[0][0].mul(n),r[1][0].mul(u),r[2][0].mul(c),r[0][1].mul(o),r[1][1].mul(l),r[2][1].mul(h),r[0][2].mul(a),r[1][2].mul(d),r[2][2].mul(p)),m=Un(i[0][0].mul(n),i[1][0].mul(u),i[2][0].mul(c),i[0][1].mul(o),i[1][1].mul(l),i[2][1].mul(h),i[0][2].mul(a),i[1][2].mul(d),i[2][2].mul(p)),f=g.mul(g).add(m.mul(m)).sqrt();return wi(Ri(f),1)}))()}}const dT=e=>ni(new lT(Yf(e)));class cT extends Nr{static get type(){return"DepthOfFieldNode"}constructor(e,t,s,r,i){super(),this.textureNode=e,this.viewZNode=t,this.focusNode=s,this.apertureNode=r,this.maxblurNode=i,this._aspect=Xi(0),this.updateBeforeType=hr.RENDER}updateBefore(){const e=this.textureNode.value;this._aspect.value=e.image.width/e.image.height}setup(){const e=this.textureNode,t=e.uvNode||au(),s=t=>e.uv(t);return di((()=>{const e=_i(1,this._aspect),r=this.focusNode.add(this.viewZNode),i=_i(ia(r.mul(this.apertureNode),this.maxblurNode.negate(),this.maxblurNode)),n=i.mul(.9),o=i.mul(.7),a=i.mul(.4);let u=wi(0);return u=u.add(s(t)),u=u.add(s(t.add(_i(0,.4).mul(e).mul(i)))),u=u.add(s(t.add(_i(.15,.37).mul(e).mul(i)))),u=u.add(s(t.add(_i(.29,.29).mul(e).mul(i)))),u=u.add(s(t.add(_i(-.37,.15).mul(e).mul(i)))),u=u.add(s(t.add(_i(.4,0).mul(e).mul(i)))),u=u.add(s(t.add(_i(.37,-.15).mul(e).mul(i)))),u=u.add(s(t.add(_i(.29,-.29).mul(e).mul(i)))),u=u.add(s(t.add(_i(-.15,-.37).mul(e).mul(i)))),u=u.add(s(t.add(_i(0,-.4).mul(e).mul(i)))),u=u.add(s(t.add(_i(-.15,.37).mul(e).mul(i)))),u=u.add(s(t.add(_i(-.29,.29).mul(e).mul(i)))),u=u.add(s(t.add(_i(.37,.15).mul(e).mul(i)))),u=u.add(s(t.add(_i(-.4,0).mul(e).mul(i)))),u=u.add(s(t.add(_i(-.37,-.15).mul(e).mul(i)))),u=u.add(s(t.add(_i(-.29,-.29).mul(e).mul(i)))),u=u.add(s(t.add(_i(.15,-.37).mul(e).mul(i)))),u=u.add(s(t.add(_i(.15,.37).mul(e).mul(n)))),u=u.add(s(t.add(_i(-.37,.15).mul(e).mul(n)))),u=u.add(s(t.add(_i(.37,-.15).mul(e).mul(n)))),u=u.add(s(t.add(_i(-.15,-.37).mul(e).mul(n)))),u=u.add(s(t.add(_i(-.15,.37).mul(e).mul(n)))),u=u.add(s(t.add(_i(.37,.15).mul(e).mul(n)))),u=u.add(s(t.add(_i(-.37,-.15).mul(e).mul(n)))),u=u.add(s(t.add(_i(.15,-.37).mul(e).mul(n)))),u=u.add(s(t.add(_i(.29,.29).mul(e).mul(o)))),u=u.add(s(t.add(_i(.4,0).mul(e).mul(o)))),u=u.add(s(t.add(_i(.29,-.29).mul(e).mul(o)))),u=u.add(s(t.add(_i(0,-.4).mul(e).mul(o)))),u=u.add(s(t.add(_i(-.29,.29).mul(e).mul(o)))),u=u.add(s(t.add(_i(-.4,0).mul(e).mul(o)))),u=u.add(s(t.add(_i(-.29,-.29).mul(e).mul(o)))),u=u.add(s(t.add(_i(0,.4).mul(e).mul(o)))),u=u.add(s(t.add(_i(.29,.29).mul(e).mul(a)))),u=u.add(s(t.add(_i(.4,0).mul(e).mul(a)))),u=u.add(s(t.add(_i(.29,-.29).mul(e).mul(a)))),u=u.add(s(t.add(_i(0,-.4).mul(e).mul(a)))),u=u.add(s(t.add(_i(-.29,.29).mul(e).mul(a)))),u=u.add(s(t.add(_i(-.4,0).mul(e).mul(a)))),u=u.add(s(t.add(_i(-.29,-.29).mul(e).mul(a)))),u=u.add(s(t.add(_i(0,.4).mul(e).mul(a)))),u=u.div(41),u.a=1,wi(u)}))()}}const hT=(e,t,s=1,r=.025,i=1)=>ni(new cT(Yf(e),ni(t),ni(s),ni(r),ni(i)));class pT extends Nr{static get type(){return"DotScreenNode"}constructor(e,s=new t(.5,.5),r=1.57,i=1){super("vec4"),this.inputNode=e,this.center=Xi(s),this.angle=Xi(r),this.scale=Xi(i)}setup(){const e=this.inputNode,t=di((()=>{const e=_o(this.angle),t=No(this.angle),s=au().mul(bc).sub(this.center),r=_i(t.mul(s.x).sub(e.mul(s.y)),e.mul(s.x).add(t.mul(s.y))).mul(this.scale);return _o(r.x).mul(_o(r.y)).mul(4)})),s=di((()=>{const s=e,r=Un(s.r,s.g,s.b).div(3);return wi(Ri(r.mul(10).sub(5).add(t())),s.a)}));return s()}}const gT=(e,t,s,r)=>ni(new pT(ni(e),t,s,r));class mT extends Nr{static get type(){return"RGBShiftNode"}constructor(e,t=.005,s=0){super("vec4"),this.textureNode=e,this.amount=Xi(t),this.angle=Xi(s)}setup(){const{textureNode:e}=this,t=e.uvNode||au(),s=t=>e.uv(t);return di((()=>{const e=_i(No(this.angle),_o(this.angle)).mul(this.amount),r=s(t.add(e)),i=s(t),n=s(t.sub(e));return wi(r.r,i.g,n.b,i.a)}))()}}const fT=(e,t,s)=>ni(new mT(Yf(e),t,s));class xT extends Nr{static get type(){return"FilmNode"}constructor(e,t=null,s=null){super(),this.inputNode=e,this.intensityNode=t,this.uvNode=s}setup(){const e=this.uvNode||au(),t=di((()=>{const t=this.inputNode.rgb,s=la(bo(e.add(cf())));let r=t.add(t.mul(ia(s.add(.1),0,1)));return null!==this.intensityNode&&(r=ra(t,r,this.intensityNode)),wi(r,this.inputNode.a)}));return t()}}const yT=ui(xT);class TT extends Nr{static get type(){return"Lut3DNode"}constructor(e,t,s,r){super(),this.inputNode=e,this.lutNode=t,this.size=Xi(s),this.intensityNode=r}setup(){const{inputNode:e,lutNode:t}=this,s=di((()=>{const s=e,r=xi(1).div(this.size),i=xi(.5).div(this.size),n=Ri(i).add(s.rgb.mul(xi(1).sub(r))),o=wi((e=>t.uv(e))(n).rgb,s.a);return wi(ra(s,o,this.intensityNode))}));return s()}}const bT=(e,t,s,r)=>ni(new TT(ni(e),ni(t),s,ni(r))),_T=new jf,NT=new e,vT=new t;class ST extends Nr{static get type(){return"GTAONode"}constructor(e,r,i){super(),this.depthNode=e,this.normalNode=r,this.radius=Xi(.25),this.resolution=Xi(new t),this.thickness=Xi(1),this.distanceExponent=Xi(1),this.distanceFallOff=Xi(1),this.scale=Xi(1),this.noiseNode=pu(function(e=5){const t=Math.floor(e)%2==0?Math.floor(e)+1:Math.floor(e),r=function(e){const t=Math.floor(e)%2==0?Math.floor(e)+1:Math.floor(e),s=t*t,r=Array(s).fill(0);let i=Math.floor(t/2),n=t-1;for(let e=1;e<=s;)-1===i&&n===t?(n=t-2,i=0):(n===t&&(n=0),i<0&&(i=t-1)),0===r[i*t+n]?(r[i*t+n]=e++,n++,i--):(n-=2,i++);return r}(t),i=r.length,n=new Uint8Array(4*i);for(let e=0;e<i;++e){const t=r[e],o=2*Math.PI*t/i,a=new s(Math.cos(o),Math.sin(o),0).normalize();n[4*e]=255*(.5*a.x+.5),n[4*e+1]=255*(.5*a.y+.5),n[4*e+2]=127,n[4*e+3]=255}const o=new Ae(n,t,t);return o.wrapS=Ce,o.wrapT=Ce,o.needsUpdate=!0,o}()),this.cameraProjectionMatrix=Xi(i.projectionMatrix),this.cameraProjectionMatrixInverse=Xi(i.projectionMatrixInverse),this.SAMPLES=Xi(16),this._aoRenderTarget=new pe,this._aoRenderTarget.texture.name="GTAONode.AO",this._material=null,this._textureNode=$y(this,this._aoRenderTarget.texture),this.updateBeforeType=hr.FRAME}getTextureNode(){return this._textureNode}setSize(e,t){this.resolution.value.set(e,t),this._aoRenderTarget.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=t.getDrawingBufferSize(vT),r=t.getRenderTarget(),i=t.getMRT();t.getClearColor(NT);const n=t.getClearAlpha();_T.material=this._material,this.setSize(s.width,s.height),t.setMRT(null),t.setClearColor(16777215,1),t.setRenderTarget(this._aoRenderTarget),_T.render(t),t.setRenderTarget(r),t.setMRT(i),t.setClearColor(NT,n)}setup(e){const t=au(),s=e=>this.depthNode.uv(e).x,r=e=>this.noiseNode.uv(e),i=di((([e])=>{const t=this.cameraProjectionMatrix.mul(wi(e,1));let r=t.xy.div(t.w).mul(.5).add(.5).toVar();r=_i(r.x,r.y.oneMinus());const i=s(r);return Ri(r,i)})),n=di((([e,t])=>{e=_i(e.x,e.y.oneMinus()).mul(2).sub(1);const s=wi(Ri(e,t),1),r=wi(this.cameraProjectionMatrixInverse.mul(s));return r.xyz.div(r.w)})),o=di((()=>{const e=s(t);e.greaterThanEqual(1).discard();const o=n(t,e),a=this.normalNode.rgb.normalize(),u=this.radius,l=lu(this.noiseNode,0);let d=_i(t.x,t.y.oneMinus());d=d.mul(this.resolution.div(l));const c=r(d),h=c.xyz.mul(2).sub(1),p=Ri(h.xy,0).normalize(),g=Ri(p.y.mul(-1),p.x,0),m=Pi(p,g,Ri(0,0,1)),f=this.SAMPLES.lessThan(30).select(3,5),x=Un(this.SAMPLES,f.sub(1)).div(f),y=xi(0).toVar();return Jd({start:yi(0),end:f,type:"int",condition:"<"},(({i:e})=>{const t=xi(e).div(xi(f)).mul(ro),s=wi(No(t),_o(t),0,Un(.5,Pn(.5,c.w)));s.xyz=To(m.mul(s.xyz));const r=To(o.xyz.negate()),l=To(Ko(s.xyz,r)),d=Ko(l,r),h=To(a.sub(l.mul(Xo(a,l)))),p=Ko(h,l),g=_i(Xo(r,p),Xo(r,p.negate())).toVar();Jd({end:x,type:"int",name:"j",condition:"<"},(({j:e})=>{const t=s.xyz.mul(u).mul(s.w).mul(Yo(In(xi(e).add(1),xi(x)),this.distanceExponent)),a=i(o.add(t)),l=n(a.xy,a.z).sub(o);gi(Co(l.z).lessThan(this.thickness),(()=>{const t=Xo(r,To(l));g.x.addAssign(ko(0,Pn(t.sub(g.x),ra(1,xi(2).div(xi(e).add(2)),this.distanceFallOff))))}));const d=i(o.sub(t)),c=n(d.xy,d.z).sub(o);gi(Co(c.z).lessThan(this.thickness),(()=>{const t=Xo(r,To(c));g.y.addAssign(ko(0,Pn(t.sub(g.y),ra(1,xi(2).div(xi(e).add(2)),this.distanceFallOff))))}))}));const T=mo(Fn(1,g.mul(g))),b=Xo(h,d),_=Xo(h,r),N=Pn(.5,Ro(g.y).sub(Ro(g.x)).add(T.x.mul(g.x).sub(T.y.mul(g.y)))),v=Pn(.5,Fn(2,g.x.mul(g.x)).sub(g.y.mul(g.y))),S=b.mul(N).add(_.mul(v));y.addAssign(S)})),y.assign(ia(y.div(f),0,1)),y.assign(Yo(y,this.scale)),wi(Ri(y),1)})),a=this._material||(this._material=new jc);return a.fragmentNode=o().context(e.getSharedContext()),a.name="GTAO",a.needsUpdate=!0,this._textureNode}dispose(){this._aoRenderTarget.dispose()}}const RT=(e,t,s)=>ni(new ST(ni(e),ni(t),s));class AT extends Nr{static get type(){return"DenoiseNode"}constructor(e,r,i,n,o){super(),this.textureNode=e,this.depthNode=r,this.normalNode=i,this.noiseNode=n,this.cameraProjectionMatrixInverse=Xi(o.projectionMatrixInverse),this.lumaPhi=Xi(5),this.depthPhi=Xi(5),this.normalPhi=Xi(5),this.radius=Xi(5),this.index=Xi(0),this._resolution=Xi(new t),this._sampleVectors=Tl(function(e,t,r){const i=function(e,t,r){const i=[];for(let n=0;n<e;n++){const o=2*Math.PI*t*n/e,a=Math.pow(n/(e-1),r);i.push(new s(Math.cos(o),Math.sin(o),a))}return i}(e,t,r),n=[];for(let t=0;t<e;t++){const e=i[t];n.push(e)}return n}(16,2,1)),this.updateBeforeType=hr.RENDER}updateBefore(){const e=this.textureNode.value;this._resolution.value.set(e.image.width,e.image.height)}setup(){const e=au(),t=e=>this.textureNode.uv(e),s=e=>this.depthNode.uv(e).x,r=e=>this.normalNode.uv(e),i=e=>this.noiseNode.uv(e),n=di((([e,t])=>{e=_i(e.x,e.y.oneMinus()).mul(2).sub(1);const s=wi(Ri(e,t),1),r=wi(this.cameraProjectionMatrixInverse.mul(s));return r.xyz.div(r.w)})),o=di((([e,i,o,a])=>{const u=t(a),l=s(a),d=r(a).rgb.normalize(),c=u.rgb,h=n(a,l),p=Xo(i,d).toVar(),g=Yo(ko(p,0),this.normalPhi).toVar(),m=Co(iT(c).sub(iT(e))).toVar(),f=ko(xi(1).sub(m.div(this.lumaPhi)),0).toVar(),x=Co(Xo(o.sub(h),i)).toVar(),y=ko(xi(1).sub(x.div(this.depthPhi)),0),T=f.mul(y).mul(g);return wi(c.mul(T),T)})),a=di((([e])=>{const a=s(e),u=r(e).rgb.normalize(),l=t(e);gi(a.greaterThanEqual(1).or(Xo(u,u).equal(0)),(()=>l));const d=Ri(l.rgb),c=n(e,a),h=lu(this.noiseNode,0);let p=_i(e.x,e.y.oneMinus());p=p.mul(this._resolution.div(h));const g=i(p),m=_o(g.element(this.index.mod(4).mul(2).mul(ro))),f=No(g.element(this.index.mod(4).mul(2).mul(ro))),x=_i(m,f),y=Fi(x.x,x.y.negate(),x.x,x.y),T=xi(1).toVar(),b=Ri(l.rgb).toVar();return Jd({start:yi(0),end:yi(16),type:"int",condition:"<"},(({i:t})=>{const s=this._sampleVectors.element(t).toVar(),r=y.mul(s.xy.mul(xi(1).add(s.z.mul(this.radius.sub(1))))).div(this._resolution).toVar(),i=e.add(r).toVar(),n=o(d,u,c,i);b.addAssign(n.xyz),T.addAssign(n.w)})),gi(T.greaterThan(xi(0)),(()=>{b.divAssign(T)})),wi(b,l.a)})).setLayout({name:"denoise",type:"vec4",inputs:[{name:"uv",type:"vec2"}]});return di((()=>a(e)))()}}const CT=(e,t,s,r,i)=>ni(new AT(Yf(e),ni(t),ni(s),ni(r),i));class ET extends Nr{static get type(){return"FXAANode"}constructor(e){super(),this.textureNode=e,this.updateBeforeType=hr.RENDER,this._invSize=Xi(new t)}updateBefore(){const e=this.textureNode.value;this._invSize.value.set(1/e.image.width,1/e.image.height)}setup(){const e=this.textureNode.bias(-100),t=e.uvNode||au(),s=t=>e.uv(t),r=(t,s,r)=>e.uv(t.add(s.mul(r))),i=yi(5),n=di((([e,t])=>{const s=wi(t).toVar(),r=wi(e).toVar(),i=wi(Co(r.sub(s))).toVar();return ko(ko(ko(i.r,i.g),i.b),i.a)})),o=di((([e,t,o,a])=>{const u=s(e).toVar(),l=r(e,_i(0,-1),t.xy).toVar(),d=r(e,_i(1,0),t.xy).toVar(),c=r(e,_i(0,1),t.xy).toVar(),h=r(e,_i(-1,0),t.xy).toVar(),p=n(u,c).toVar(),g=n(u,l).toVar(),m=n(u,d).toVar(),f=n(u,h).toVar(),x=ko(p,ko(g,ko(m,f))).toVar();gi(x.lessThan(o),(()=>u));const y=Fn(p.add(g),m.add(f)).toVar();y.mulAssign(a),gi(Co(y).lessThan(.3),(()=>{const s=m.greaterThan(f).select(1,-1).toVar(),i=g.greaterThan(p).select(1,-1).toVar(),o=_i(s,i).toVar(),x=r(e,_i(o.x,o.y),t.xy),T=n(u,x).toVar(),b=r(e,_i(o.x.negate(),o.y.negate()),t.xy),_=n(u,b).toVar();y.assign(_.sub(T)),y.mulAssign(a),gi(Co(y).lessThan(.3),(()=>{const e=c.add(l).add(d).add(h);return ra(u,e.mul(.25),.4)}))}));const T=_i().toVar();gi(y.lessThanEqual(0),(()=>{c.assign(h),l.assign(d),T.x.assign(0),T.y.assign(t.y)})).Else((()=>{T.x.assign(t.x),T.y.assign(0)}));const b=n(u,c).toVar(),_=n(u,l).toVar();gi(b.lessThanEqual(_),(()=>{c.assign(l)}));const N=yi(0).toVar(),v=yi(0).toVar(),S=xi(0).toVar(),R=xi(0).toVar(),A=_i(e).toVar(),C=_i(e).toVar(),E=yi(0).toVar(),w=yi(0).toVar();Jd(i,(({i:t})=>{const r=t.add(1).toVar();gi(N.equal(0),(()=>{S.addAssign(r),A.assign(e.add(T.mul(S)));const i=s(A.xy),o=n(i,u).toVar(),a=n(i,c).toVar();gi(o.greaterThan(a),(()=>{N.assign(1)})),E.assign(t)})),gi(v.equal(0),(()=>{R.addAssign(r),C.assign(e.sub(T.mul(R)));const i=s(C.xy),o=n(i,u).toVar(),a=n(i,c).toVar();gi(o.greaterThan(a),(()=>{v.assign(1)})),w.assign(t)})),gi(N.equal(1).or(v.equal(1)),(()=>{tc()}))})),gi(N.equal(0).and(v.equal(0)),(()=>u));const M=xi(1).toVar(),B=xi(1).toVar();gi(N.equal(1),(()=>{M.assign(xi(E).div(xi(i.sub(1))))})),gi(v.equal(1),(()=>{B.assign(xi(w).div(xi(i.sub(1))))}));const U=zo(M,B);return U.assign(Yo(U,.5)),U.assign(xi(1).sub(U)),ra(u,c,U.mul(.5))})).setLayout({name:"FxaaPixelShader",type:"vec4",inputs:[{name:"uv",type:"vec2"},{name:"fxaaQualityRcpFrame",type:"vec2"},{name:"fxaaQualityEdgeThreshold",type:"float"},{name:"fxaaQualityinvEdgeThreshold",type:"float"}]});return di((()=>{const e=xi(.2),s=xi(1).div(e);return o(t,this._invSize,e,s)}))()}}const wT=e=>ni(new ET(Yf(e))),MT=new jf,BT=new e(0,0,0),UT=new e,FT=new t,PT=new t(1,0),IT=new t(0,1);class LT extends Nr{static get type(){return"BloomNode"}constructor(e,t=1,s=0,r=0){super(),this.inputNode=e,this.strength=Xi(t),this.radius=Xi(s),this.threshold=Xi(r),this.smoothWidth=Xi(.01),this._renderTargetsHorizontal=[],this._renderTargetsVertical=[],this._nMips=5,this._renderTargetBright=new pe(1,1,{type:xe}),this._renderTargetBright.texture.name="UnrealBloomPass.bright",this._renderTargetBright.texture.generateMipmaps=!1;for(let e=0;e<this._nMips;e++){const t=new pe(1,1,{type:xe});t.texture.name="UnrealBloomPass.h"+e,t.texture.generateMipmaps=!1,this._renderTargetsHorizontal.push(t);const s=new pe(1,1,{type:xe});s.texture.name="UnrealBloomPass.v"+e,s.texture.generateMipmaps=!1,this._renderTargetsVertical.push(s)}this._compositeMaterial=null,this._highPassFilterMaterial=null,this._separableBlurMaterials=[],this._textureNodeBright=pu(this._renderTargetBright.texture),this._textureNodeBlur0=pu(this._renderTargetsVertical[0].texture),this._textureNodeBlur1=pu(this._renderTargetsVertical[1].texture),this._textureNodeBlur2=pu(this._renderTargetsVertical[2].texture),this._textureNodeBlur3=pu(this._renderTargetsVertical[3].texture),this._textureNodeBlur4=pu(this._renderTargetsVertical[4].texture),this._textureOutput=$y(this,this._renderTargetsHorizontal[0].texture),this.updateBeforeType=hr.FRAME}getTextureNode(){return this._textureOutput}setSize(e,t){let s=Math.round(e/2),r=Math.round(t/2);this._renderTargetBright.setSize(s,r);for(let e=0;e<this._nMips;e++)this._renderTargetsHorizontal[e].setSize(s,r),this._renderTargetsVertical[e].setSize(s,r),this._separableBlurMaterials[e].invSize.value.set(1/s,1/r),s=Math.round(s/2),r=Math.round(r/2)}updateBefore(e){const{renderer:t}=e,s=t.getDrawingBufferSize(FT);this.setSize(s.width,s.height);const r=t.getRenderTarget(),i=t.getMRT();t.getClearColor(UT);const n=t.getClearAlpha();this.setSize(s.width,s.height),t.setMRT(null),t.setClearColor(BT,0),t.setRenderTarget(this._renderTargetBright),MT.material=this._highPassFilterMaterial,MT.render(t);let o=this._renderTargetBright;for(let e=0;e<this._nMips;e++)MT.material=this._separableBlurMaterials[e],this._separableBlurMaterials[e].colorTexture.value=o.texture,this._separableBlurMaterials[e].direction.value=PT,t.setRenderTarget(this._renderTargetsHorizontal[e]),t.clear(),MT.render(t),this._separableBlurMaterials[e].colorTexture.value=this._renderTargetsHorizontal[e].texture,this._separableBlurMaterials[e].direction.value=IT,t.setRenderTarget(this._renderTargetsVertical[e]),t.clear(),MT.render(t),o=this._renderTargetsVertical[e];t.setRenderTarget(this._renderTargetsHorizontal[0]),t.clear(),MT.material=this._compositeMaterial,MT.render(t),t.setRenderTarget(r),t.setMRT(i),t.setClearColor(UT,n)}setup(e){const t=di((()=>{const e=this.inputNode,t=iT(e.rgb),s=aa(this.threshold,this.threshold.add(this.smoothWidth),t);return ra(wi(0),e,s)}));this._highPassFilterMaterial=this._highPassFilterMaterial||new jc,this._highPassFilterMaterial.fragmentNode=t().context(e.getSharedContext()),this._highPassFilterMaterial.name="Bloom_highPass",this._highPassFilterMaterial.needsUpdate=!0;const r=[3,5,7,9,11];for(let t=0;t<this._nMips;t++)this._separableBlurMaterials.push(this._getSeperableBlurMaterial(e,r[t]));const i=Tl([1,.8,.6,.4,.2]),n=Tl([new s(1,1,1),new s(1,1,1),new s(1,1,1),new s(1,1,1),new s(1,1,1)]),o=di((([e,t])=>{const s=xi(1.2).sub(e);return ra(e,s,t)})).setLayout({name:"lerpBloomFactor",type:"float",inputs:[{name:"factor",type:"float"},{name:"radius",type:"float"}]}),a=di((()=>{const e=o(i.element(0),this.radius).mul(wi(n.element(0),1)).mul(this._textureNodeBlur0),t=o(i.element(1),this.radius).mul(wi(n.element(1),1)).mul(this._textureNodeBlur1),s=o(i.element(2),this.radius).mul(wi(n.element(2),1)).mul(this._textureNodeBlur2),r=o(i.element(3),this.radius).mul(wi(n.element(3),1)).mul(this._textureNodeBlur3),a=o(i.element(4),this.radius).mul(wi(n.element(4),1)).mul(this._textureNodeBlur4);return e.add(t).add(s).add(r).add(a).mul(this.strength)}));return this._compositeMaterial=this._compositeMaterial||new jc,this._compositeMaterial.fragmentNode=a().context(e.getSharedContext()),this._compositeMaterial.name="Bloom_comp",this._compositeMaterial.needsUpdate=!0,this._textureOutput}dispose(){for(let e=0;e<this._renderTargetsHorizontal.length;e++)this._renderTargetsHorizontal[e].dispose();for(let e=0;e<this._renderTargetsVertical.length;e++)this._renderTargetsVertical[e].dispose();this._renderTargetBright.dispose()}_getSeperableBlurMaterial(e,s){const r=[];for(let e=0;e<s;e++)r.push(.39894*Math.exp(-.5*e*e/(s*s))/s);const i=pu(),n=Tl(r),o=Xi(new t),a=Xi(new t(.5,.5)),u=au(),l=e=>i.uv(e),d=di((()=>{const e=n.element(0).toVar(),t=l(u).rgb.mul(e).toVar();return Jd({start:yi(1),end:yi(s),type:"int",condition:"<"},(({i:s})=>{const r=xi(s),i=n.element(s),d=a.mul(o).mul(r),c=l(u.add(d)).rgb,h=l(u.sub(d)).rgb;t.addAssign(Un(c,h).mul(i)),e.addAssign(xi(2).mul(i))})),wi(t.div(e),1)})),c=new jc;return c.fragmentNode=d().context(e.getSharedContext()),c.name="Bloom_seperable",c.needsUpdate=!0,c.colorTexture=i,c.direction=a,c.invSize=o,c}}const VT=(e,t,s,r)=>ni(new LT(ni(e),t,s,r));class DT extends Nr{static get type(){return"TransitionNode"}constructor(e,t,s,r,i,n){super(),this.textureNodeA=e,this.textureNodeB=t,this.mixTextureNode=s,this.mixRatioNode=r,this.thresholdNode=i,this.useTextureNode=n}setup(){const{textureNodeA:e,textureNodeB:t,mixTextureNode:s,mixRatioNode:r,thresholdNode:i,useTextureNode:n}=this,o=e=>{const t=e.uvNode||au();return e.uv(t)},a=di((()=>{const a=o(e),u=o(t),l=wi().toVar();return gi(n.equal(yi(1)),(()=>{const e=o(s),t=r.mul(i.mul(2).add(1)).sub(i),n=ia(Fn(e.r,t).mul(xi(1).div(i)),0,1);l.assign(ra(a,u,n))})).Else((()=>{l.assign(ra(u,a,r))})),l}));return a()}}const OT=(e,t,s,r=0,i=.1,n=0)=>ni(new DT(Yf(e),Yf(t),Yf(s),ni(r),ni(i),ni(n)));class GT extends Nr{static get type(){return"PixelationNode"}constructor(e,t,s,i,n,o){super(),this.textureNode=e,this.depthNode=t,this.normalNode=s,this.pixelSize=i,this.normalEdgeStrength=n,this.depthEdgeStrength=o,this._resolution=Xi(new r),this.updateBeforeType=hr.RENDER}updateBefore(){const e=this.textureNode.value,t=e.image.width,s=e.image.height;this._resolution.value.set(t,s,1/t,1/s)}setup(){const{textureNode:e,depthNode:t,normalNode:s}=this,r=e.uvNode||au(),i=t.uvNode||au(),n=s.uvNode||au(),o=(e,s)=>t.uv(i.add(_i(e,s).mul(this._resolution.zw))).r,a=(e,t)=>s.uv(n.add(_i(e,t).mul(this._resolution.zw))).rgb.normalize(),u=(e,t,s,r)=>{const i=o(e,t).sub(s),n=a(e,t),u=Ri(1,1,1),l=Xo(r.sub(n),u),d=ia(aa(-.01,.01,l),0,1),c=ia(Eo(i.mul(.25).add(.0025)),0,1);return xi(1).sub(Xo(r,n)).mul(c).mul(d)},l=di((()=>{const t=e.uv(r),s=Yi("float","depth"),i=Yi("vec3","normal");gi(this.depthEdgeStrength.greaterThan(0).or(this.normalEdgeStrength.greaterThan(0)),(()=>{s.assign(o(0,0)),i.assign(a(0,0))}));const n=Yi("float","dei");gi(this.depthEdgeStrength.greaterThan(0),(()=>{n.assign((e=>{const t=Yi("float","diff");return t.addAssign(ia(o(1,0).sub(e))),t.addAssign(ia(o(-1,0).sub(e))),t.addAssign(ia(o(0,1).sub(e))),t.addAssign(ia(o(0,-1).sub(e))),xo(aa(.01,.02,t).mul(2)).div(2)})(s))}));const l=Yi("float","nei");gi(this.normalEdgeStrength.greaterThan(0),(()=>{l.assign(((e,t)=>{const s=Yi("float","indicator");return s.addAssign(u(0,-1,e,t)),s.addAssign(u(0,1,e,t)),s.addAssign(u(-1,0,e,t)),s.addAssign(u(1,0,e,t)),Ho(.1,s)})(s,i))}));const d=n.greaterThan(0).select(xi(1).sub(n.mul(this.depthEdgeStrength)),l.mul(this.normalEdgeStrength).add(1));return t.mul(d)}));return l()}}class zT extends zy{static get type(){return"PixelationPassNode"}constructor(e,t,s=6,r=.3,i=.4){super("color",e,t,{minFilter:Ee,magFilter:Ee}),this.pixelSize=s,this.normalEdgeStrength=r,this.depthEdgeStrength=i,this.isPixelationPassNode=!0,this._mrt=of({output:xn,normal:tl})}setSize(e,t){const s=this.pixelSize.value?this.pixelSize.value:this.pixelSize,r=Math.floor(e/s),i=Math.floor(t/s);super.setSize(r,i)}setup(){return((e,t,s,r=6,i=.3,n=.4)=>ni(new GT(Yf(e),Yf(t),Yf(s),ni(r),ni(i),ni(n))))(super.getTextureNode("output"),super.getTextureNode("depth"),super.getTextureNode("normal"),this.pixelSize,this.normalEdgeStrength,this.depthEdgeStrength)}}const kT=(e,t,s,r,i)=>ni(new zT(e,t,s,r,i)),$T=new t;class HT extends zy{static get type(){return"SSAAPassNode"}constructor(t,s){super(zy.COLOR,t,s),this.isSSAAPassNode=!0,this.sampleLevel=4,this.unbiased=!0,this.clearColor=new e(0),this.clearAlpha=0,this._currentClearColor=new e,this.sampleWeight=Xi(1),this.sampleRenderTarget=null,this._quadMesh=new jf}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r}=this;this._pixelRatio=t.getPixelRatio();const i=t.getSize($T);this.setSize(i.width,i.height),this.sampleRenderTarget.setSize(this.renderTarget.width,this.renderTarget.height),t.getClearColor(this._currentClearColor);const n=t.getClearAlpha(),o=t.getRenderTarget(),a=t.getMRT(),u=t.autoClear;this._cameraNear.value=r.near,this._cameraFar.value=r.far,t.setMRT(this.getMRT()),t.autoClear=!1;const l=WT[Math.max(0,Math.min(this.sampleLevel,5))],d=1/l.length,c={fullWidth:this.renderTarget.width,fullHeight:this.renderTarget.height,offsetX:0,offsetY:0,width:this.renderTarget.width,height:this.renderTarget.height},h=Object.assign({},r.view);h.enabled&&Object.assign(c,h);for(let e=0;e<l.length;e++){const i=l[e];if(r.setViewOffset&&r.setViewOffset(c.fullWidth,c.fullHeight,c.offsetX+.0625*i[0],c.offsetY+.0625*i[1],c.width,c.height),this.sampleWeight.value=d,this.unbiased){const t=(e+.5)/l.length-.5;this.sampleWeight.value+=.03125*t}t.setClearColor(this.clearColor,this.clearAlpha),t.setRenderTarget(this.sampleRenderTarget),t.clear(),t.render(s,r),t.setRenderTarget(this.renderTarget),0===e&&(t.setClearColor(0,0),t.clear()),this._quadMesh.render(t)}t.copyTextureToTexture(this.sampleRenderTarget.depthTexture,this.renderTarget.depthTexture),r.setViewOffset&&h.enabled?r.setViewOffset(h.fullWidth,h.fullHeight,h.offsetX,h.offsetY,h.width,h.height):r.clearViewOffset&&r.clearViewOffset(),t.setRenderTarget(o),t.setMRT(a),t.autoClear=u,t.setClearColor(this._currentClearColor,n)}setup(e){let t;null===this.sampleRenderTarget&&(this.sampleRenderTarget=this.renderTarget.clone());const s=this.getMRT();if(null!==s){const e={};for(const t in s.outputNodes){const s=rf(this.sampleRenderTarget.textures,t);s>=0&&(e[t]=pu(this.sampleRenderTarget.textures[s]).mul(this.sampleWeight))}t=of(e)}else t=pu(this.sampleRenderTarget.texture).mul(this.sampleWeight);return this._quadMesh.material=new jc,this._quadMesh.material.fragmentNode=t,this._quadMesh.material.transparent=!0,this._quadMesh.material.depthTest=!1,this._quadMesh.material.depthWrite=!1,this._quadMesh.material.premultipliedAlpha=!0,this._quadMesh.material.blending=we,this._quadMesh.material.normals=!1,this._quadMesh.material.name="SSAA",super.setup(e)}dispose(){super.dispose(),null!==this.sampleRenderTarget&&this.sampleRenderTarget.dispose()}}const WT=[[[0,0]],[[4,4],[-4,-4]],[[-2,-6],[6,-2],[-6,2],[2,6]],[[1,-3],[-1,3],[5,1],[-3,-5],[-5,5],[-7,-1],[3,7],[7,-7]],[[1,1],[-1,-3],[-3,2],[4,-1],[-5,-2],[2,5],[5,3],[3,-5],[-2,6],[0,-7],[-4,-6],[-6,4],[-8,0],[7,-4],[6,7],[-7,-8]],[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]]],jT=(e,t)=>ni(new HT(e,t)),qT=new t;class XT extends zy{static get type(){return"StereoPassNode"}constructor(e,t){super(zy.COLOR,e,t),this.isStereoPassNode=!0,this.stereo=new Me,this.stereo.aspect=.5}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r,stereo:i,renderTarget:n}=this;this._pixelRatio=t.getPixelRatio(),i.cameraL.coordinateSystem=t.coordinateSystem,i.cameraR.coordinateSystem=t.coordinateSystem,i.update(r);const o=t.getSize(qT);this.setSize(o.width,o.height);const a=t.autoClear;t.autoClear=!1;const u=t.getRenderTarget(),l=t.getMRT();this._cameraNear.value=r.near,this._cameraFar.value=r.far;for(const e in this._previousTextures)this.toggleTexture(e);t.setRenderTarget(n),t.setMRT(this._mrt),t.clear(),n.scissorTest=!0,n.scissor.set(0,0,n.width/2,n.height),n.viewport.set(0,0,n.width/2,n.height),t.render(s,i.cameraL),n.scissor.set(n.width/2,0,n.width/2,n.height),n.viewport.set(n.width/2,0,n.width/2,n.height),t.render(s,i.cameraR),n.scissorTest=!1,t.setRenderTarget(u),t.setMRT(l),t.autoClear=a}}const KT=(e,t)=>ni(new XT(e,t)),YT=new t,QT=new jf;class ZT extends zy{static get type(){return"StereoCompositePassNode"}constructor(e,t){super(zy.COLOR,e,t),this.isStereoCompositePassNode=!0,this.stereo=new Me;const s={minFilter:H,magFilter:Ee,type:xe};this._renderTargetL=new pe(1,1,s),this._renderTargetR=new pe(1,1,s),this._mapLeft=pu(this._renderTargetL.texture),this._mapRight=pu(this._renderTargetR.texture),this._material=null}updateStereoCamera(e){this.stereo.cameraL.coordinateSystem=e,this.stereo.cameraR.coordinateSystem=e,this.stereo.update(this.camera)}setSize(e,t){super.setSize(e,t),this._renderTargetL.setSize(this.renderTarget.width,this.renderTarget.height),this._renderTargetR.setSize(this.renderTarget.width,this.renderTarget.height)}updateBefore(e){const{renderer:t}=e,{scene:s,stereo:r,renderTarget:i}=this;this._pixelRatio=t.getPixelRatio(),this.updateStereoCamera(t.coordinateSystem);const n=t.getSize(YT);this.setSize(n.width,n.height);const o=t.getRenderTarget();t.setRenderTarget(this._renderTargetL),t.render(s,r.cameraL),t.setRenderTarget(this._renderTargetR),t.render(s,r.cameraR),t.setRenderTarget(i),QT.material=this._material,QT.render(t),t.setRenderTarget(o)}dispose(){super.dispose(),this._renderTargetL.dispose(),this._renderTargetR.dispose(),null!==this._material&&this._material.dispose()}}class JT extends ZT{static get type(){return"AnaglyphPassNode"}constructor(e,t){super(e,t),this.isAnaglyphPassNode=!0,this._colorMatrixLeft=Xi((new i).fromArray([.4561,-.0400822,-.0152161,.500484,-.0378246,-.0205971,.176381,-.0157589,-.00546856])),this._colorMatrixRight=Xi((new i).fromArray([-.0434706,.378476,-.0721527,-.0879388,.73364,-.112961,-.00155529,-.0184503,1.2264]))}setup(e){const t=au(),s=di((()=>{const e=this._mapLeft.uv(t),s=this._mapRight.uv(t),r=ia(this._colorMatrixLeft.mul(e.rgb).add(this._colorMatrixRight.mul(s.rgb)));return wi(r.rgb,ko(e.a,s.a))})),r=this._material||(this._material=new jc);return r.fragmentNode=s().context(e.getSharedContext()),r.name="Anaglyph",r.needsUpdate=!0,super.setup(e)}}const eb=(e,t)=>ni(new JT(e,t));class tb extends ZT{static get type(){return"ParallaxBarrierPassNode"}constructor(e,t){super(e,t),this.isParallaxBarrierPassNode=!0}setup(e){const t=au(),s=di((()=>{const e=wi().toVar();return gi($o(_c.y,2).greaterThan(1),(()=>{e.assign(this._mapLeft.uv(t))})).Else((()=>{e.assign(this._mapRight.uv(t))})),e})),r=this._material||(this._material=new jc);return r.fragmentNode=s().context(e.getSharedContext()),r.needsUpdate=!0,super.setup(e)}}const sb=(e,t)=>ni(new tb(e,t));class rb extends Tr{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new o,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:xi()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=ur(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?lr(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const ib=ui(rb);class nb extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(null!==t){const r=t(...s);return this.set(e,r),r}}}class ob{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const ab=new nb;class ub extends Tr{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new nb,this._output=ib(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return void 0===s[e]?s[e]=ib(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):void 0===s[e]?(s[e]=ib(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const s=this.getObject()[e];if("function"==typeof s)return s(...t)}async callAsync(e,...t){const s=this.getObject()[e];if("function"==typeof s)return"AsyncFunction"===s.constructor.name?await s(...t):s(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new ob(this),t=ab.get("THREE"),s=ab.get("TSL"),r=this.getMethod(this.codeNode),i=[e,this._local,ab,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,s];this._object=r(...i);const n=this._object.layout;if(n&&(!1===n.cache&&this._local.clear(),this._output.outputType=n.outputType||null,Array.isArray(n.elements)))for(const e of n.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:xi()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",s="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],s),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[this.source,this.getDefaultOutputNode().getCacheKey(e)];for(const s in this.parameters)t.push(this.parameters[s].getCacheKey(e));return t.join(",")}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const lb=ui(ub);class db extends Tr{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const s=e.context.getViewZ;return void 0!==s&&(t=s(this)),(t||qu.z).negate()}setup(){return this.factorNode}}const cb=ui(db);class hb extends db{static get type(){return"FogRangeNode"}constructor(e,t,s){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=s}setup(e){const t=this.getViewZNode(e);return aa(this.nearNode,this.farNode,t)}}const pb=ui(hb);class gb extends db{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),s=this.densityNode;return s.mul(s,t,t).negate().exp().oneMinus()}}const mb=ui(gb);let fb=null,xb=null;class yb extends Tr{static get type(){return"RangeNode"}constructor(e=xi(),t=xi()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(or(this.minNode.value)),s=e.getTypeLength(or(this.maxNode.value));return t>s?t:s}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(t.count>1){const i=this.minNode.value,n=this.maxNode.value,o=e.getTypeLength(or(i)),u=e.getTypeLength(or(n));fb=fb||new r,xb=xb||new r,fb.setScalar(0),xb.setScalar(0),1===o?fb.setScalar(i):i.isColor?fb.set(i.r,i.g,i.b):fb.set(i.x,i.y,i.z||0,i.w||0),1===u?xb.setScalar(n):n.isColor?xb.set(n.r,n.g,n.b):xb.set(n.x,n.y,n.z||0,n.w||0);const l=4,d=l*t.count,c=new Float32Array(d);for(let e=0;e<d;e++){const t=e%l,s=fb.getComponent(t),r=xb.getComponent(t);c[e]=a.lerp(s,r,Math.random())}const h=this.getNodeType(e);if(t.count<=4096)s=fl(c,"vec4",t.count).element(zd).convert(h);else{const t=new C(c,4);e.geometry.setAttribute("__range"+this.id,t),s=za(t).convert(h)}}else s=xi(0);return s}}const Tb=ui(yb),bb=di((({depthTexture:e,shadowCoord:t})=>pu(e,t.xy).compare(t.z))),_b=di((({depthTexture:e,shadowCoord:t,shadow:s})=>{const r=(t,s)=>pu(e,t).compare(s),i=vl("mapSize","vec2",s).setGroup(Wi),n=vl("radius","float",s).setGroup(Wi),o=_i(1).div(i),a=o.x.negate().mul(n),u=o.y.negate().mul(n),l=o.x.mul(n),d=o.y.mul(n),c=a.div(2),h=u.div(2),p=l.div(2),g=d.div(2);return Un(r(t.xy.add(_i(a,u)),t.z),r(t.xy.add(_i(0,u)),t.z),r(t.xy.add(_i(l,u)),t.z),r(t.xy.add(_i(c,h)),t.z),r(t.xy.add(_i(0,h)),t.z),r(t.xy.add(_i(p,h)),t.z),r(t.xy.add(_i(a,0)),t.z),r(t.xy.add(_i(c,0)),t.z),r(t.xy,t.z),r(t.xy.add(_i(p,0)),t.z),r(t.xy.add(_i(l,0)),t.z),r(t.xy.add(_i(c,g)),t.z),r(t.xy.add(_i(0,g)),t.z),r(t.xy.add(_i(p,g)),t.z),r(t.xy.add(_i(a,d)),t.z),r(t.xy.add(_i(0,d)),t.z),r(t.xy.add(_i(l,d)),t.z)).mul(1/17)})),Nb=di((({depthTexture:e,shadowCoord:t,shadow:s})=>{const r=(t,s)=>pu(e,t).compare(s),i=vl("mapSize","vec2",s).setGroup(Wi),n=_i(1).div(i),o=n.x,a=n.y,u=t.xy,l=bo(u.mul(i).add(.5));return u.subAssign(l.mul(n)),Un(r(u,t.z),r(u.add(_i(o,0)),t.z),r(u.add(_i(0,a)),t.z),r(u.add(n),t.z),ra(r(u.add(_i(o.negate(),0)),t.z),r(u.add(_i(o.mul(2),0)),t.z),l.x),ra(r(u.add(_i(o.negate(),a)),t.z),r(u.add(_i(o.mul(2),a)),t.z),l.x),ra(r(u.add(_i(0,a.negate())),t.z),r(u.add(_i(0,a.mul(2))),t.z),l.y),ra(r(u.add(_i(o,a.negate())),t.z),r(u.add(_i(o,a.mul(2))),t.z),l.y),ra(ra(r(u.add(_i(o.negate(),a.negate())),t.z),r(u.add(_i(o.mul(2),a.negate())),t.z),l.x),ra(r(u.add(_i(o.negate(),a.mul(2))),t.z),r(u.add(_i(o.mul(2),a.mul(2))),t.z),l.x),l.y)).mul(1/9)})),vb=di((({depthTexture:e,shadowCoord:t})=>{const s=xi(1).toVar(),r=pu(e).uv(t.xy).rg,i=Ho(t.z,r.x);return gi(i.notEqual(xi(1)),(()=>{const e=t.z.sub(r.x),n=ko(0,r.y.mul(r.y));let o=n.div(n.add(e.mul(e)));o=ia(Fn(o,.3).div(.95-.3)),s.assign(ia(ko(i,o)))})),s})),Sb=di((({samples:e,radius:t,size:s,shadowPass:r})=>{const i=xi(0).toVar(),n=xi(0).toVar(),o=e.lessThanEqual(xi(1)).select(xi(0),xi(2).div(e.sub(1))),a=e.lessThanEqual(xi(1)).select(xi(0),xi(-1));Jd({start:yi(0),end:yi(e),type:"int",condition:"<"},(({i:e})=>{const u=a.add(xi(e).mul(o)),l=r.uv(Un(_c.xy,_i(0,u).mul(t)).div(s)).x;i.addAssign(l),n.addAssign(l.mul(l))})),i.divAssign(e),n.divAssign(e);const u=mo(n.sub(i.mul(i)));return _i(i,u)})),Rb=di((({samples:e,radius:t,size:s,shadowPass:r})=>{const i=xi(0).toVar(),n=xi(0).toVar(),o=e.lessThanEqual(xi(1)).select(xi(0),xi(2).div(e.sub(1))),a=e.lessThanEqual(xi(1)).select(xi(0),xi(-1));Jd({start:yi(0),end:yi(e),type:"int",condition:"<"},(({i:e})=>{const u=a.add(xi(e).mul(o)),l=r.uv(Un(_c.xy,_i(u,0).mul(t)).div(s));i.addAssign(l.x),n.addAssign(Un(l.y.mul(l.y),l.x.mul(l.x)))})),i.divAssign(e),n.divAssign(e);const u=mo(n.sub(i.mul(i)));return _i(i,u)})),Ab=[bb,_b,Nb,vb];let Cb=null;const Eb=new jf;class wb extends cc{static get type(){return"AnalyticLightNode"}constructor(t=null){super(),this.updateType=hr.FRAME,this.light=t,this.color=new e,this.colorNode=Xi(this.color).setGroup(Wi),this.baseColorNode=null,this.shadowMap=null,this.shadowNode=null,this.shadowColorNode=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.isAnalyticLightNode=!0}getCacheKey(){return super.getCacheKey()+"-"+this.light.id+"-"+(this.light.castShadow?"1":"0")}getHash(){return this.light.uuid}setupShadow(e){const{object:t,renderer:s}=e;let r=this.shadowColorNode;if(null===r){null===Cb&&(Cb=new jc,Cb.fragmentNode=wi(0,0,0,1),Cb.isShadowNodeMaterial=!0,Cb.name="ShadowMaterial");const i=s.shadowMap.type,n=this.light.shadow,o=new U;o.compareFunction=Be;const a=e.createRenderTarget(n.mapSize.width,n.mapSize.height);if(a.depthTexture=o,n.camera.updateProjectionMatrix(),i===Ue){o.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Fe,type:xe}),this.vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:Fe,type:xe});const t=pu(o),s=pu(this.vsmShadowMapVertical.texture),r=vl("blurSamples","float",n).setGroup(Wi),i=vl("radius","float",n).setGroup(Wi),a=vl("mapSize","vec2",n).setGroup(Wi);let u=this.vsmMaterialVertical||(this.vsmMaterialVertical=new jc);u.fragmentNode=Sb({samples:r,radius:i,size:a,shadowPass:t}).context(e.getSharedContext()),u.name="VSMVertical",u=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new jc),u.fragmentNode=Rb({samples:r,radius:i,size:a,shadowPass:s}).context(e.getSharedContext()),u.name="VSMHorizontal"}const u=vl("intensity","float",n).setGroup(Wi),l=vl("bias","float",n).setGroup(Wi),d=vl("normalBias","float",n).setGroup(Wi),c=t.material.shadowPositionNode||Wu;let h=Xi(n.matrix).setGroup(Wi).mul(c.add(sl.mul(d)));h=h.xyz.div(h.w);let p=h.z.add(l);s.coordinateSystem===v&&(p=p.mul(2).sub(1)),h=Ri(h.x,h.y.oneMinus(),p);const g=h.x.greaterThanEqual(0).and(h.x.lessThanEqual(1)).and(h.y.greaterThanEqual(0)).and(h.y.lessThanEqual(1)).and(h.z.lessThanEqual(1)),m=n.filterNode||Ab[s.shadowMap.type]||null;if(null===m)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const f=pu(a.texture,h),x=g.select(m({depthTexture:i===Ue?this.vsmShadowMapHorizontal.texture:o,shadowCoord:h,shadow:n}),xi(1));this.shadowMap=a,this.light.shadow.map=a,this.shadowNode=x,this.shadowColorNode=r=this.colorNode.mul(ra(1,x.rgb.mix(f,1),u.mul(f.a))),this.baseColorNode=this.colorNode}this.colorNode=r,this.updateBeforeType=hr.RENDER}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):null!==this.shadowNode&&this.disposeShadow()}updateShadow(e){const{shadowMap:t,light:s}=this,{renderer:r,scene:i,camera:n}=e,o=r.shadowMap.type,a=t.depthTexture.version;this._depthVersionCached=a;const u=i.overrideMaterial;i.overrideMaterial=Cb,t.setSize(s.shadow.mapSize.width,s.shadow.mapSize.height),s.shadow.updateMatrices(s),s.shadow.camera.layers.mask=n.layers.mask;const l=r.getRenderTarget(),d=r.getRenderObjectFunction();r.setRenderObjectFunction(((e,...t)=>{(!0===e.castShadow||e.receiveShadow&&o===Ue)&&r.renderObject(e,...t)})),r.setRenderTarget(t),r.render(i,s.shadow.camera),r.setRenderObjectFunction(d),!0!==s.isPointLight&&o===Ue&&this.vsmPass(e,s),r.setRenderTarget(l),i.overrideMaterial=u}vsmPass(e,t){const{renderer:s}=e;this.vsmShadowMapVertical.setSize(t.shadow.mapSize.width,t.shadow.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.shadow.mapSize.width,t.shadow.mapSize.height),s.setRenderTarget(this.vsmShadowMapVertical),Eb.material=this.vsmMaterialVertical,Eb.render(s),s.setRenderTarget(this.vsmShadowMapHorizontal),Eb.material=this.vsmMaterialHorizontal,Eb.render(s)}disposeShadow(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.shadowNode=null,this.shadowColorNode=null,this.baseColorNode=null,this.updateBeforeType=hr.NONE}updateBefore(e){const t=this.light.shadow;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const Mb=di((e=>{const{lightDistance:t,cutoffDistance:s,decayExponent:r}=e,i=t.pow(r).max(.01).reciprocal();return s.greaterThan(0).select(i.mul(t.div(s).pow4().oneMinus().clamp().pow2()),i)}));let Bb;function Ub(e){Bb=Bb||new WeakMap;let t=Bb.get(e);return void 0===t&&Bb.set(e,t={}),t}function Fb(e){const t=Ub(e);return t.position||(t.position=Xi(new s).setGroup(Wi).onRenderUpdate(((t,s)=>s.value.setFromMatrixPosition(e.matrixWorld))))}function Pb(e){const t=Ub(e);return t.targetPosition||(t.targetPosition=Xi(new s).setGroup(Wi).onRenderUpdate(((t,s)=>s.value.setFromMatrixPosition(e.target.matrixWorld))))}function Ib(e){const t=Ub(e);return t.viewPosition||(t.viewPosition=Xi(new s).setGroup(Wi).onRenderUpdate((({camera:t},r)=>{r.value=r.value||new s,r.value.setFromMatrixPosition(e.matrixWorld),r.value.applyMatrix4(t.matrixWorldInverse)})))}const Lb=e=>_u.transformDirection(Fb(e).sub(Pb(e))),Vb=di((([e])=>{const t=e.toUint().mul(747796405).add(2891336453),s=t.shiftRight(t.shiftRight(28).add(4)).bitXor(t).mul(277803737);return s.shiftRight(22).bitXor(s).toFloat().mul(1/2**32)})),Db=(e,t)=>Yo(Pn(4,e.mul(Fn(1,e))),t),Ob=(e,t)=>e.lessThan(.5)?Db(e.mul(2),t).div(2):Fn(1,Db(Pn(Fn(1,e),2),t).div(2)),Gb=(e,t,s)=>Yo(In(Yo(e,t),Un(Yo(e,t),Yo(Fn(1,e),s))),1/t),zb=(e,t)=>_o(ro.mul(t.mul(e).sub(1))).div(ro.mul(t.mul(e).sub(1))),kb=di((([e])=>e.fract().sub(.5).abs())).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),$b=di((([e])=>Ri(kb(e.z.add(kb(e.y.mul(1)))),kb(e.z.add(kb(e.x.mul(1)))),kb(e.y.add(kb(e.x.mul(1))))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Hb=di((([e,t,s])=>{const r=Ri(e).toVar(),i=xi(1.4).toVar(),n=xi(0).toVar(),o=Ri(r).toVar();return Jd({start:xi(0),end:xi(3),type:"float",condition:"<="},(()=>{const e=Ri($b(o.mul(2))).toVar();r.addAssign(e.add(s.mul(xi(.1).mul(t)))),o.mulAssign(1.8),i.mulAssign(1.5),r.mulAssign(1.2);const a=xi(kb(r.z.add(kb(r.x.add(kb(r.y)))))).toVar();n.addAssign(a.div(i)),o.addAssign(.14)})),n})).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"p",type:"vec3"},{name:"spd",type:"float"},{name:"time",type:"float"}]}),Wb=di((([e,t,s=_i(.5)])=>lg(e.sub(s),t).add(s))),jb=di((([e,t,s=_i(.5)])=>{const r=e.sub(s),i=r.dot(r),n=i.mul(i).mul(t);return e.add(r.mul(n))})),qb=di((({position:e=null,horizontal:t=!0,vertical:s=!1})=>{let r;null!==e?(r=Fu.toVar(),r[3][0]=e.x,r[3][1]=e.y,r[3][2]=e.z):r=Fu;const i=_u.mul(r);return si(t)&&(i[0][0]=Fu[0].length(),i[0][1]=0,i[0][2]=0),si(s)&&(i[1][0]=0,i[1][1]=Fu[1].length(),i[1][2]=0),i[2][0]=0,i[2][1]=0,i[2][2]=1,Tu.mul(i).mul($u)})),Xb=di((([e=null])=>{const t=$c();return $c(Ic(e)).sub(t).lessThan(0).select(Tc,e)})),Kb=new WeakMap;class Yb extends Nr{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.updateType=hr.OBJECT,this.updateAfterType=hr.OBJECT,this.previousModelWorldMatrix=Xi(new n),this.previousProjectionMatrix=Xi(new n).setGroup(Wi),this.previousCameraViewMatrix=Xi(new n)}update({frameId:e,camera:t,object:s}){const r=Zb(s);this.previousModelWorldMatrix.value.copy(r);const i=Qb(t);i.frameId!==e&&(i.frameId=e,void 0===i.previousProjectionMatrix?(i.previousProjectionMatrix=new n,i.previousCameraViewMatrix=new n,i.currentProjectionMatrix=new n,i.currentCameraViewMatrix=new n,i.previousProjectionMatrix.copy(t.projectionMatrix),i.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(i.previousProjectionMatrix.copy(i.currentProjectionMatrix),i.previousCameraViewMatrix.copy(i.currentCameraViewMatrix)),i.currentProjectionMatrix.copy(t.projectionMatrix),i.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(i.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(i.previousCameraViewMatrix))}updateAfter({object:e}){Zb(e).copy(e.matrixWorld)}setup(){const e=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),t=Tu.mul(Ou).mul($u),s=this.previousProjectionMatrix.mul(e).mul(Hu),r=t.xy.div(t.w),i=s.xy.div(s.w);return Fn(r,i)}}function Qb(e){let t=Kb.get(e);return void 0===t&&(t={},Kb.set(e,t)),t}function Zb(e,t=0){const s=Qb(e);let r=s[t];return void 0===r&&(s[t]=r=new n),r}const Jb=li(Yb),e_=di((([e,t])=>zo(1,e.oneMinus().div(t)).oneMinus())).setLayout({name:"burnBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),t_=di((([e,t])=>zo(e.div(t.oneMinus()),1))).setLayout({name:"dodgeBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),s_=di((([e,t])=>e.oneMinus().mul(t.oneMinus()).oneMinus())).setLayout({name:"screenBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),r_=di((([e,t])=>ra(e.mul(2).mul(t),e.oneMinus().mul(2).mul(t.oneMinus()).oneMinus(),Ho(.5,e)))).setLayout({name:"overlayBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),i_=di((([e,t,s=yi(16)])=>{const r=t=>e.uv(t),i=au(),n=r(i).toVar(),o=xi(s);return Jd({start:yi(1),end:s,type:"int",condition:"<="},(({i:e})=>{const s=t.mul(xi(e).div(o.sub(1)).sub(.5));n.addAssign(r(i.add(s)))})),n.divAssign(o),n})),n_=di((([e,t=1])=>{const s=e,r=iT(s.rgb),i=Ri(r),n=zo(1,ko(0,xi(10).mul(r.sub(.45)))),o=i.mul(s.rgb).mul(2),a=xi(2).mul(i.oneMinus()).mul(s.rgb.oneMinus()).oneMinus(),u=ra(o,a,n),l=s.a.mul(t),d=l.mul(u.rgb);return d.addAssign(s.rgb.mul(l.oneMinus())),wi(d,s.a)})),o_=di((([e])=>{const t=Ri(e);return wi(Xo(t,Ri(.393,.769,.189)),Xo(t,Ri(.349,.686,.168)),Xo(t,Ri(.272,.534,.131)),e.a)})),a_=di((([e])=>{const t=e.mul(.9478672986).add(.0521327014).pow(2.4),s=e.mul(.0773993808),r=e.lessThanEqual(.04045);return ra(t,s,r)})).setLayout({name:"sRGBToLinearSRGB",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),u_=di((([e])=>{const t=e.pow(.41666).mul(1.055).sub(.055),s=e.mul(12.92),r=e.lessThanEqual(.0031308);return ra(t,s,r)})).setLayout({name:"linearSRGBTosRGB",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),l_=di((([e,t])=>e.mul(t).clamp())).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),d_=di((([e,t])=>(e=e.mul(t)).div(e.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),c_=di((([e,t])=>{const s=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),r=e.mul(e.mul(6.2).add(1.7)).add(.06);return s.div(r).pow(2.2)})).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),h_=di((([e])=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),s=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(s)})),p_=di((([e,t])=>{const s=Pi(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),r=Pi(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=s.mul(e),e=h_(e),(e=r.mul(e)).clamp()})).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),g_=Pi(Ri(1.6605,-.1246,-.0182),Ri(-.5876,1.1329,-.1006),Ri(-.0728,-.0083,1.1187)),m_=Pi(Ri(.6274,.0691,.0164),Ri(.3293,.9195,.088),Ri(.0433,.0113,.8956)),f_=di((([e])=>{const t=Ri(e).toVar(),s=Ri(t.mul(t)).toVar(),r=Ri(s.mul(s)).toVar();return xi(15.5).mul(r.mul(s)).sub(Pn(40.14,r.mul(t))).add(Pn(31.96,r).sub(Pn(6.868,s.mul(t))).add(Pn(.4298,s).add(Pn(.1191,t).sub(.00232))))})),x_=di((([e,t])=>{const s=Ri(e).toVar(),r=Pi(Ri(.856627153315983,.137318972929847,.11189821299995),Ri(.0951212405381588,.761241990602591,.0767994186031903),Ri(.0482516061458583,.101439036467562,.811302368396859)),i=Pi(Ri(1.1271005818144368,-.1413297634984383,-.14132976349843826),Ri(-.11060664309660323,1.157823702216272,-.11060664309660294),Ri(-.016493938717834573,-.016493938717834257,1.2519364065950405)),n=xi(-12.47393),o=xi(4.026069);return s.mulAssign(t),s.assign(m_.mul(s)),s.assign(r.mul(s)),s.assign(ko(s,1e-10)),s.assign(go(s)),s.assign(s.sub(n).div(o.sub(n))),s.assign(ia(s,0,1)),s.assign(f_(s)),s.assign(i.mul(s)),s.assign(Yo(ko(Ri(0),s),Ri(2.2))),s.assign(g_.mul(s)),s.assign(ia(s,0,1)),s})).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),y_=di((([e,t])=>{const s=xi(.76),r=xi(.15);e=e.mul(t);const i=zo(e.r,zo(e.g,e.b)),n=pa(i.lessThan(.08),i.sub(Pn(6.25,i.mul(i))),.04);e.subAssign(n);const o=ko(e.r,ko(e.g,e.b));gi(o.lessThan(s),(()=>e));const a=Fn(1,s),u=Fn(1,a.mul(a).div(o.add(a.sub(s))));e.mulAssign(u.div(o));const l=Fn(1,In(1,r.mul(o.sub(u)).add(1)));return ra(e,Ri(u),l)})).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});const T_=ui(class extends Tr{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:s}=e;!0===s.backend.isWebGLBackend?e.addFlowCode(`\t// ${t}Barrier \n`):e.addLineFlowCode(`${t}Barrier()`)}}),b_=()=>T_("workgroup").append(),__=()=>T_("storage").append(),N_=()=>T_("texture").append();class v_ extends br{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let s;const r=e.context.assign;if(s=super.generate(e),!0!==r){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}class S_ extends Tr{constructor(e,t,s=0){super(t),this.bufferType=t,this.bufferCount=s,this.isWorkgroupInfoNode=!0,this.scope=e}label(e){return this.name=e,this}getHash(){return this.uuid}setScope(e){return this.scope=e,this}getInputType(){return`${this.scope}Array`}element(e){return ni(new v_(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const R_=(e,t)=>ni(new S_("Workgroup",e,t)),A_=di((([e=t()])=>{const t=e.mul(2),s=t.x.floor(),r=t.y.floor();return s.add(r).mod(2).sign()})),C_=di((([e,t,s])=>{const r=xi(s).toVar(),i=xi(t).toVar(),n=bi(e).toVar();return pa(n,i,r)})).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),E_=di((([e,t])=>{const s=bi(t).toVar(),r=xi(e).toVar();return pa(s,r.negate(),r)})).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),w_=di((([e])=>{const t=xi(e).toVar();return yi(xo(t))})).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),M_=di((([e,t])=>{const s=xi(e).toVar();return t.assign(w_(s)),s.sub(xi(t))})),B_=lf([di((([e,t,s,r,i,n])=>{const o=xi(n).toVar(),a=xi(i).toVar(),u=xi(r).toVar(),l=xi(s).toVar(),d=xi(t).toVar(),c=xi(e).toVar(),h=xi(Fn(1,a)).toVar();return Fn(1,o).mul(c.mul(h).add(d.mul(a))).add(o.mul(l.mul(h).add(u.mul(a))))})).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),di((([e,t,s,r,i,n])=>{const o=xi(n).toVar(),a=xi(i).toVar(),u=Ri(r).toVar(),l=Ri(s).toVar(),d=Ri(t).toVar(),c=Ri(e).toVar(),h=xi(Fn(1,a)).toVar();return Fn(1,o).mul(c.mul(h).add(d.mul(a))).add(o.mul(l.mul(h).add(u.mul(a))))})).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]})]),U_=lf([di((([e,t,s,r,i,n,o,a,u,l,d])=>{const c=xi(d).toVar(),h=xi(l).toVar(),p=xi(u).toVar(),g=xi(a).toVar(),m=xi(o).toVar(),f=xi(n).toVar(),x=xi(i).toVar(),y=xi(r).toVar(),T=xi(s).toVar(),b=xi(t).toVar(),_=xi(e).toVar(),N=xi(Fn(1,p)).toVar(),v=xi(Fn(1,h)).toVar();return xi(Fn(1,c)).toVar().mul(v.mul(_.mul(N).add(b.mul(p))).add(h.mul(T.mul(N).add(y.mul(p))))).add(c.mul(v.mul(x.mul(N).add(f.mul(p))).add(h.mul(m.mul(N).add(g.mul(p))))))})).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),di((([e,t,s,r,i,n,o,a,u,l,d])=>{const c=xi(d).toVar(),h=xi(l).toVar(),p=xi(u).toVar(),g=Ri(a).toVar(),m=Ri(o).toVar(),f=Ri(n).toVar(),x=Ri(i).toVar(),y=Ri(r).toVar(),T=Ri(s).toVar(),b=Ri(t).toVar(),_=Ri(e).toVar(),N=xi(Fn(1,p)).toVar(),v=xi(Fn(1,h)).toVar();return xi(Fn(1,c)).toVar().mul(v.mul(_.mul(N).add(b.mul(p))).add(h.mul(T.mul(N).add(y.mul(p))))).add(c.mul(v.mul(x.mul(N).add(f.mul(p))).add(h.mul(m.mul(N).add(g.mul(p))))))})).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]})]),F_=di((([e,t,s])=>{const r=xi(s).toVar(),i=xi(t).toVar(),n=Ti(e).toVar(),o=Ti(n.bitAnd(Ti(7))).toVar(),a=xi(C_(o.lessThan(Ti(4)),i,r)).toVar(),u=xi(Pn(2,C_(o.lessThan(Ti(4)),r,i))).toVar();return E_(a,bi(o.bitAnd(Ti(1)))).add(E_(u,bi(o.bitAnd(Ti(2)))))})).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),P_=di((([e,t,s,r])=>{const i=xi(r).toVar(),n=xi(s).toVar(),o=xi(t).toVar(),a=Ti(e).toVar(),u=Ti(a.bitAnd(Ti(15))).toVar(),l=xi(C_(u.lessThan(Ti(8)),o,n)).toVar(),d=xi(C_(u.lessThan(Ti(4)),n,C_(u.equal(Ti(12)).or(u.equal(Ti(14))),o,i))).toVar();return E_(l,bi(u.bitAnd(Ti(1)))).add(E_(d,bi(u.bitAnd(Ti(2)))))})).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),I_=lf([F_,P_]),L_=di((([e,t,s])=>{const r=xi(s).toVar(),i=xi(t).toVar(),n=Ci(e).toVar();return Ri(I_(n.x,i,r),I_(n.y,i,r),I_(n.z,i,r))})).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),V_=di((([e,t,s,r])=>{const i=xi(r).toVar(),n=xi(s).toVar(),o=xi(t).toVar(),a=Ci(e).toVar();return Ri(I_(a.x,o,n,i),I_(a.y,o,n,i),I_(a.z,o,n,i))})).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),D_=lf([L_,V_]),O_=di((([e])=>{const t=xi(e).toVar();return Pn(.6616,t)})).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),G_=di((([e])=>{const t=xi(e).toVar();return Pn(.982,t)})).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),z_=lf([O_,di((([e])=>{const t=Ri(e).toVar();return Pn(.6616,t)})).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),k_=lf([G_,di((([e])=>{const t=Ri(e).toVar();return Pn(.982,t)})).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),$_=di((([e,t])=>{const s=yi(t).toVar(),r=Ti(e).toVar();return r.shiftLeft(s).bitOr(r.shiftRight(yi(32).sub(s)))})).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),H_=di((([e,t,s])=>{e.subAssign(s),e.bitXorAssign($_(s,yi(4))),s.addAssign(t),t.subAssign(e),t.bitXorAssign($_(e,yi(6))),e.addAssign(s),s.subAssign(t),s.bitXorAssign($_(t,yi(8))),t.addAssign(e),e.subAssign(s),e.bitXorAssign($_(s,yi(16))),s.addAssign(t),t.subAssign(e),t.bitXorAssign($_(e,yi(19))),e.addAssign(s),s.subAssign(t),s.bitXorAssign($_(t,yi(4))),t.addAssign(e)})),W_=di((([e,t,s])=>{const r=Ti(s).toVar(),i=Ti(t).toVar(),n=Ti(e).toVar();return r.bitXorAssign(i),r.subAssign($_(i,yi(14))),n.bitXorAssign(r),n.subAssign($_(r,yi(11))),i.bitXorAssign(n),i.subAssign($_(n,yi(25))),r.bitXorAssign(i),r.subAssign($_(i,yi(16))),n.bitXorAssign(r),n.subAssign($_(r,yi(4))),i.bitXorAssign(n),i.subAssign($_(n,yi(14))),r.bitXorAssign(i),r.subAssign($_(i,yi(24))),r})).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),j_=di((([e])=>{const t=Ti(e).toVar();return xi(t).div(xi(Ti(yi(4294967295))))})).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),q_=di((([e])=>{const t=xi(e).toVar();return t.mul(t).mul(t).mul(t.mul(t.mul(6).sub(15)).add(10))})).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),X_=lf([di((([e])=>{const t=yi(e).toVar(),s=Ti(Ti(1)).toVar(),r=Ti(Ti(yi(3735928559)).add(s.shiftLeft(Ti(2))).add(Ti(13))).toVar();return W_(r.add(Ti(t)),r,r)})).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),di((([e,t])=>{const s=yi(t).toVar(),r=yi(e).toVar(),i=Ti(Ti(2)).toVar(),n=Ti().toVar(),o=Ti().toVar(),a=Ti().toVar();return n.assign(o.assign(a.assign(Ti(yi(3735928559)).add(i.shiftLeft(Ti(2))).add(Ti(13))))),n.addAssign(Ti(r)),o.addAssign(Ti(s)),W_(n,o,a)})).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),di((([e,t,s])=>{const r=yi(s).toVar(),i=yi(t).toVar(),n=yi(e).toVar(),o=Ti(Ti(3)).toVar(),a=Ti().toVar(),u=Ti().toVar(),l=Ti().toVar();return a.assign(u.assign(l.assign(Ti(yi(3735928559)).add(o.shiftLeft(Ti(2))).add(Ti(13))))),a.addAssign(Ti(n)),u.addAssign(Ti(i)),l.addAssign(Ti(r)),W_(a,u,l)})).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),di((([e,t,s,r])=>{const i=yi(r).toVar(),n=yi(s).toVar(),o=yi(t).toVar(),a=yi(e).toVar(),u=Ti(Ti(4)).toVar(),l=Ti().toVar(),d=Ti().toVar(),c=Ti().toVar();return l.assign(d.assign(c.assign(Ti(yi(3735928559)).add(u.shiftLeft(Ti(2))).add(Ti(13))))),l.addAssign(Ti(a)),d.addAssign(Ti(o)),c.addAssign(Ti(n)),H_(l,d,c),l.addAssign(Ti(i)),W_(l,d,c)})).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),di((([e,t,s,r,i])=>{const n=yi(i).toVar(),o=yi(r).toVar(),a=yi(s).toVar(),u=yi(t).toVar(),l=yi(e).toVar(),d=Ti(Ti(5)).toVar(),c=Ti().toVar(),h=Ti().toVar(),p=Ti().toVar();return c.assign(h.assign(p.assign(Ti(yi(3735928559)).add(d.shiftLeft(Ti(2))).add(Ti(13))))),c.addAssign(Ti(l)),h.addAssign(Ti(u)),p.addAssign(Ti(a)),H_(c,h,p),c.addAssign(Ti(o)),h.addAssign(Ti(n)),W_(c,h,p)})).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]})]),K_=lf([di((([e,t])=>{const s=yi(t).toVar(),r=yi(e).toVar(),i=Ti(X_(r,s)).toVar(),n=Ci().toVar();return n.x.assign(i.bitAnd(yi(255))),n.y.assign(i.shiftRight(yi(8)).bitAnd(yi(255))),n.z.assign(i.shiftRight(yi(16)).bitAnd(yi(255))),n})).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),di((([e,t,s])=>{const r=yi(s).toVar(),i=yi(t).toVar(),n=yi(e).toVar(),o=Ti(X_(n,i,r)).toVar(),a=Ci().toVar();return a.x.assign(o.bitAnd(yi(255))),a.y.assign(o.shiftRight(yi(8)).bitAnd(yi(255))),a.z.assign(o.shiftRight(yi(16)).bitAnd(yi(255))),a})).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]})]),Y_=lf([di((([e])=>{const t=_i(e).toVar(),s=yi().toVar(),r=yi().toVar(),i=xi(M_(t.x,s)).toVar(),n=xi(M_(t.y,r)).toVar(),o=xi(q_(i)).toVar(),a=xi(q_(n)).toVar(),u=xi(B_(I_(X_(s,r),i,n),I_(X_(s.add(yi(1)),r),i.sub(1),n),I_(X_(s,r.add(yi(1))),i,n.sub(1)),I_(X_(s.add(yi(1)),r.add(yi(1))),i.sub(1),n.sub(1)),o,a)).toVar();return z_(u)})).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),di((([e])=>{const t=Ri(e).toVar(),s=yi().toVar(),r=yi().toVar(),i=yi().toVar(),n=xi(M_(t.x,s)).toVar(),o=xi(M_(t.y,r)).toVar(),a=xi(M_(t.z,i)).toVar(),u=xi(q_(n)).toVar(),l=xi(q_(o)).toVar(),d=xi(q_(a)).toVar(),c=xi(U_(I_(X_(s,r,i),n,o,a),I_(X_(s.add(yi(1)),r,i),n.sub(1),o,a),I_(X_(s,r.add(yi(1)),i),n,o.sub(1),a),I_(X_(s.add(yi(1)),r.add(yi(1)),i),n.sub(1),o.sub(1),a),I_(X_(s,r,i.add(yi(1))),n,o,a.sub(1)),I_(X_(s.add(yi(1)),r,i.add(yi(1))),n.sub(1),o,a.sub(1)),I_(X_(s,r.add(yi(1)),i.add(yi(1))),n,o.sub(1),a.sub(1)),I_(X_(s.add(yi(1)),r.add(yi(1)),i.add(yi(1))),n.sub(1),o.sub(1),a.sub(1)),u,l,d)).toVar();return k_(c)})).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]})]),Q_=lf([di((([e])=>{const t=_i(e).toVar(),s=yi().toVar(),r=yi().toVar(),i=xi(M_(t.x,s)).toVar(),n=xi(M_(t.y,r)).toVar(),o=xi(q_(i)).toVar(),a=xi(q_(n)).toVar(),u=Ri(B_(D_(K_(s,r),i,n),D_(K_(s.add(yi(1)),r),i.sub(1),n),D_(K_(s,r.add(yi(1))),i,n.sub(1)),D_(K_(s.add(yi(1)),r.add(yi(1))),i.sub(1),n.sub(1)),o,a)).toVar();return z_(u)})).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),di((([e])=>{const t=Ri(e).toVar(),s=yi().toVar(),r=yi().toVar(),i=yi().toVar(),n=xi(M_(t.x,s)).toVar(),o=xi(M_(t.y,r)).toVar(),a=xi(M_(t.z,i)).toVar(),u=xi(q_(n)).toVar(),l=xi(q_(o)).toVar(),d=xi(q_(a)).toVar(),c=Ri(U_(D_(K_(s,r,i),n,o,a),D_(K_(s.add(yi(1)),r,i),n.sub(1),o,a),D_(K_(s,r.add(yi(1)),i),n,o.sub(1),a),D_(K_(s.add(yi(1)),r.add(yi(1)),i),n.sub(1),o.sub(1),a),D_(K_(s,r,i.add(yi(1))),n,o,a.sub(1)),D_(K_(s.add(yi(1)),r,i.add(yi(1))),n.sub(1),o,a.sub(1)),D_(K_(s,r.add(yi(1)),i.add(yi(1))),n,o.sub(1),a.sub(1)),D_(K_(s.add(yi(1)),r.add(yi(1)),i.add(yi(1))),n.sub(1),o.sub(1),a.sub(1)),u,l,d)).toVar();return k_(c)})).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]})]),Z_=lf([di((([e])=>{const t=xi(e).toVar(),s=yi(w_(t)).toVar();return j_(X_(s))})).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),di((([e])=>{const t=_i(e).toVar(),s=yi(w_(t.x)).toVar(),r=yi(w_(t.y)).toVar();return j_(X_(s,r))})).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),di((([e])=>{const t=Ri(e).toVar(),s=yi(w_(t.x)).toVar(),r=yi(w_(t.y)).toVar(),i=yi(w_(t.z)).toVar();return j_(X_(s,r,i))})).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),di((([e])=>{const t=wi(e).toVar(),s=yi(w_(t.x)).toVar(),r=yi(w_(t.y)).toVar(),i=yi(w_(t.z)).toVar(),n=yi(w_(t.w)).toVar();return j_(X_(s,r,i,n))})).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]})]),J_=lf([di((([e])=>{const t=xi(e).toVar(),s=yi(w_(t)).toVar();return Ri(j_(X_(s,yi(0))),j_(X_(s,yi(1))),j_(X_(s,yi(2))))})).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),di((([e])=>{const t=_i(e).toVar(),s=yi(w_(t.x)).toVar(),r=yi(w_(t.y)).toVar();return Ri(j_(X_(s,r,yi(0))),j_(X_(s,r,yi(1))),j_(X_(s,r,yi(2))))})).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),di((([e])=>{const t=Ri(e).toVar(),s=yi(w_(t.x)).toVar(),r=yi(w_(t.y)).toVar(),i=yi(w_(t.z)).toVar();return Ri(j_(X_(s,r,i,yi(0))),j_(X_(s,r,i,yi(1))),j_(X_(s,r,i,yi(2))))})).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),di((([e])=>{const t=wi(e).toVar(),s=yi(w_(t.x)).toVar(),r=yi(w_(t.y)).toVar(),i=yi(w_(t.z)).toVar(),n=yi(w_(t.w)).toVar();return Ri(j_(X_(s,r,i,n,yi(0))),j_(X_(s,r,i,n,yi(1))),j_(X_(s,r,i,n,yi(2))))})).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]})]),eN=di((([e,t,s,r])=>{const i=xi(r).toVar(),n=xi(s).toVar(),o=yi(t).toVar(),a=Ri(e).toVar(),u=xi(0).toVar(),l=xi(1).toVar();return Jd(o,(()=>{u.addAssign(l.mul(Y_(a))),l.mulAssign(i),a.mulAssign(n)})),u})).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),tN=di((([e,t,s,r])=>{const i=xi(r).toVar(),n=xi(s).toVar(),o=yi(t).toVar(),a=Ri(e).toVar(),u=Ri(0).toVar(),l=xi(1).toVar();return Jd(o,(()=>{u.addAssign(l.mul(Q_(a))),l.mulAssign(i),a.mulAssign(n)})),u})).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),sN=di((([e,t,s,r])=>{const i=xi(r).toVar(),n=xi(s).toVar(),o=yi(t).toVar(),a=Ri(e).toVar();return _i(eN(a,o,n,i),eN(a.add(Ri(yi(19),yi(193),yi(17))),o,n,i))})).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),rN=di((([e,t,s,r])=>{const i=xi(r).toVar(),n=xi(s).toVar(),o=yi(t).toVar(),a=Ri(e).toVar(),u=Ri(tN(a,o,n,i)).toVar(),l=xi(eN(a.add(Ri(yi(19),yi(193),yi(17))),o,n,i)).toVar();return wi(u,l)})).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),iN=lf([di((([e,t,s,r,i,n,o])=>{const a=yi(o).toVar(),u=xi(n).toVar(),l=yi(i).toVar(),d=yi(r).toVar(),c=yi(s).toVar(),h=yi(t).toVar(),p=_i(e).toVar(),g=Ri(J_(_i(h.add(d),c.add(l)))).toVar(),m=_i(g.x,g.y).toVar();m.subAssign(.5),m.mulAssign(u),m.addAssign(.5);const f=_i(_i(xi(h),xi(c)).add(m)).toVar(),x=_i(f.sub(p)).toVar();return gi(a.equal(yi(2)),(()=>Co(x.x).add(Co(x.y)))),gi(a.equal(yi(3)),(()=>ko(Co(x.x),Co(x.y)))),Xo(x,x)})).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),di((([e,t,s,r,i,n,o,a,u])=>{const l=yi(u).toVar(),d=xi(a).toVar(),c=yi(o).toVar(),h=yi(n).toVar(),p=yi(i).toVar(),g=yi(r).toVar(),m=yi(s).toVar(),f=yi(t).toVar(),x=Ri(e).toVar(),y=Ri(J_(Ri(f.add(p),m.add(h),g.add(c)))).toVar();y.subAssign(.5),y.mulAssign(d),y.addAssign(.5);const T=Ri(Ri(xi(f),xi(m),xi(g)).add(y)).toVar(),b=Ri(T.sub(x)).toVar();return gi(l.equal(yi(2)),(()=>Co(b.x).add(Co(b.y)).add(Co(b.z)))),gi(l.equal(yi(3)),(()=>ko(ko(Co(b.x),Co(b.y)),Co(b.z)))),Xo(b,b)})).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),nN=di((([e,t,s])=>{const r=yi(s).toVar(),i=xi(t).toVar(),n=_i(e).toVar(),o=yi().toVar(),a=yi().toVar(),u=_i(M_(n.x,o),M_(n.y,a)).toVar(),l=xi(1e6).toVar();return Jd({start:-1,end:yi(1),name:"x",condition:"<="},(({x:e})=>{Jd({start:-1,end:yi(1),name:"y",condition:"<="},(({y:t})=>{const s=xi(iN(u,e,t,o,a,i,r)).toVar();l.assign(zo(l,s))}))})),gi(r.equal(yi(0)),(()=>{l.assign(mo(l))})),l})).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),oN=di((([e,t,s])=>{const r=yi(s).toVar(),i=xi(t).toVar(),n=_i(e).toVar(),o=yi().toVar(),a=yi().toVar(),u=_i(M_(n.x,o),M_(n.y,a)).toVar(),l=_i(1e6,1e6).toVar();return Jd({start:-1,end:yi(1),name:"x",condition:"<="},(({x:e})=>{Jd({start:-1,end:yi(1),name:"y",condition:"<="},(({y:t})=>{const s=xi(iN(u,e,t,o,a,i,r)).toVar();gi(s.lessThan(l.x),(()=>{l.y.assign(l.x),l.x.assign(s)})).ElseIf(s.lessThan(l.y),(()=>{l.y.assign(s)}))}))})),gi(r.equal(yi(0)),(()=>{l.assign(mo(l))})),l})).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),aN=di((([e,t,s])=>{const r=yi(s).toVar(),i=xi(t).toVar(),n=_i(e).toVar(),o=yi().toVar(),a=yi().toVar(),u=_i(M_(n.x,o),M_(n.y,a)).toVar(),l=Ri(1e6,1e6,1e6).toVar();return Jd({start:-1,end:yi(1),name:"x",condition:"<="},(({x:e})=>{Jd({start:-1,end:yi(1),name:"y",condition:"<="},(({y:t})=>{const s=xi(iN(u,e,t,o,a,i,r)).toVar();gi(s.lessThan(l.x),(()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(s)})).ElseIf(s.lessThan(l.y),(()=>{l.z.assign(l.y),l.y.assign(s)})).ElseIf(s.lessThan(l.z),(()=>{l.z.assign(s)}))}))})),gi(r.equal(yi(0)),(()=>{l.assign(mo(l))})),l})).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),uN=lf([nN,di((([e,t,s])=>{const r=yi(s).toVar(),i=xi(t).toVar(),n=Ri(e).toVar(),o=yi().toVar(),a=yi().toVar(),u=yi().toVar(),l=Ri(M_(n.x,o),M_(n.y,a),M_(n.z,u)).toVar(),d=xi(1e6).toVar();return Jd({start:-1,end:yi(1),name:"x",condition:"<="},(({x:e})=>{Jd({start:-1,end:yi(1),name:"y",condition:"<="},(({y:t})=>{Jd({start:-1,end:yi(1),name:"z",condition:"<="},(({z:s})=>{const n=xi(iN(l,e,t,s,o,a,u,i,r)).toVar();d.assign(zo(d,n))}))}))})),gi(r.equal(yi(0)),(()=>{d.assign(mo(d))})),d})).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),lN=lf([oN,di((([e,t,s])=>{const r=yi(s).toVar(),i=xi(t).toVar(),n=Ri(e).toVar(),o=yi().toVar(),a=yi().toVar(),u=yi().toVar(),l=Ri(M_(n.x,o),M_(n.y,a),M_(n.z,u)).toVar(),d=_i(1e6,1e6).toVar();return Jd({start:-1,end:yi(1),name:"x",condition:"<="},(({x:e})=>{Jd({start:-1,end:yi(1),name:"y",condition:"<="},(({y:t})=>{Jd({start:-1,end:yi(1),name:"z",condition:"<="},(({z:s})=>{const n=xi(iN(l,e,t,s,o,a,u,i,r)).toVar();gi(n.lessThan(d.x),(()=>{d.y.assign(d.x),d.x.assign(n)})).ElseIf(n.lessThan(d.y),(()=>{d.y.assign(n)}))}))}))})),gi(r.equal(yi(0)),(()=>{d.assign(mo(d))})),d})).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),dN=lf([aN,di((([e,t,s])=>{const r=yi(s).toVar(),i=xi(t).toVar(),n=Ri(e).toVar(),o=yi().toVar(),a=yi().toVar(),u=yi().toVar(),l=Ri(M_(n.x,o),M_(n.y,a),M_(n.z,u)).toVar(),d=Ri(1e6,1e6,1e6).toVar();return Jd({start:-1,end:yi(1),name:"x",condition:"<="},(({x:e})=>{Jd({start:-1,end:yi(1),name:"y",condition:"<="},(({y:t})=>{Jd({start:-1,end:yi(1),name:"z",condition:"<="},(({z:s})=>{const n=xi(iN(l,e,t,s,o,a,u,i,r)).toVar();gi(n.lessThan(d.x),(()=>{d.z.assign(d.y),d.y.assign(d.x),d.x.assign(n)})).ElseIf(n.lessThan(d.y),(()=>{d.z.assign(d.y),d.y.assign(n)})).ElseIf(n.lessThan(d.z),(()=>{d.z.assign(n)}))}))}))})),gi(r.equal(yi(0)),(()=>{d.assign(mo(d))})),d})).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),cN=di((([e])=>{const t=e.y,s=e.z,r=Ri().toVar();return gi(t.lessThan(1e-4),(()=>{r.assign(Ri(s,s,s))})).Else((()=>{let i=e.x;i=i.sub(xo(i)).mul(6).toVar();const n=yi(Lo(i)),o=i.sub(xi(n)),a=s.mul(t.oneMinus()),u=s.mul(t.mul(o).oneMinus()),l=s.mul(t.mul(o.oneMinus()).oneMinus());gi(n.equal(yi(0)),(()=>{r.assign(Ri(s,l,a))})).ElseIf(n.equal(yi(1)),(()=>{r.assign(Ri(u,s,a))})).ElseIf(n.equal(yi(2)),(()=>{r.assign(Ri(a,s,l))})).ElseIf(n.equal(yi(3)),(()=>{r.assign(Ri(a,u,s))})).ElseIf(n.equal(yi(4)),(()=>{r.assign(Ri(l,a,s))})).Else((()=>{r.assign(Ri(s,a,u))}))})),r})).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),hN=di((([e])=>{const t=Ri(e).toVar(),s=xi(t.x).toVar(),r=xi(t.y).toVar(),i=xi(t.z).toVar(),n=xi(zo(s,zo(r,i))).toVar(),o=xi(ko(s,ko(r,i))).toVar(),a=xi(o.sub(n)).toVar(),u=xi().toVar(),l=xi().toVar(),d=xi().toVar();return d.assign(o),gi(o.greaterThan(0),(()=>{l.assign(a.div(o))})).Else((()=>{l.assign(0)})),gi(l.lessThanEqual(0),(()=>{u.assign(0)})).Else((()=>{gi(s.greaterThanEqual(o),(()=>{u.assign(r.sub(i).div(a))})).ElseIf(r.greaterThanEqual(o),(()=>{u.assign(Un(2,i.sub(s).div(a)))})).Else((()=>{u.assign(Un(4,s.sub(r).div(a)))})),u.mulAssign(1/6),gi(u.lessThan(0),(()=>{u.addAssign(1)}))})),Ri(u,l,d)})).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),pN=di((([e])=>{const t=Ri(e).toVar(),s=Ei(Gn(t,Ri(.04045))).toVar(),r=Ri(t.div(12.92)).toVar(),i=Ri(Yo(ko(t.add(Ri(.055)),Ri(0)).div(1.055),Ri(2.4))).toVar();return ra(r,i,s)})).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),gN=(e,t)=>{e=xi(e),t=xi(t);const s=_i(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return aa(e.sub(s),e.add(s),t)},mN=(e,t,s,r)=>ra(e,t,s[r].clamp()),fN=(e,t,s=au())=>mN(e,t,s,"x"),xN=(e,t,s=au())=>mN(e,t,s,"y"),yN=(e,t,s,r,i)=>ra(e,t,gN(s,r[i])),TN=(e,t,s,r=au())=>yN(e,t,s,r,"x"),bN=(e,t,s,r=au())=>yN(e,t,s,r,"y"),_N=(e=1,t=0,s=au())=>s.mul(e).add(t),NN=(e,t=1)=>(e=xi(e)).abs().pow(t).mul(e.sign()),vN=(e,t=1,s=.5)=>xi(e).sub(s).mul(t).add(s),SN=(e=au(),t=1,s=0)=>Y_(e.convert("vec2|vec3")).mul(t).add(s),RN=(e=au(),t=1,s=0)=>Q_(e.convert("vec2|vec3")).mul(t).add(s),AN=(e=au(),t=1,s=0)=>{e=e.convert("vec2|vec3");return wi(Q_(e),Y_(e.add(_i(19,73)))).mul(t).add(s)},CN=(e=au(),t=1)=>uN(e.convert("vec2|vec3"),t,yi(1)),EN=(e=au(),t=1)=>lN(e.convert("vec2|vec3"),t,yi(1)),wN=(e=au(),t=1)=>dN(e.convert("vec2|vec3"),t,yi(1)),MN=(e=au())=>Z_(e.convert("vec2|vec3")),BN=(e=au(),t=3,s=2,r=.5,i=1)=>eN(e,yi(t),s,r).mul(i),UN=(e=au(),t=3,s=2,r=.5,i=1)=>sN(e,yi(t),s,r).mul(i),FN=(e=au(),t=3,s=2,r=.5,i=1)=>tN(e,yi(t),s,r).mul(i),PN=(e=au(),t=3,s=2,r=.5,i=1)=>rN(e,yi(t),s,r).mul(i),IN=di((([e,t])=>{const s=e.x,r=e.y,i=e.z;let n=t.element(0).mul(.886227);return n=n.add(t.element(1).mul(1.023328).mul(r)),n=n.add(t.element(2).mul(1.023328).mul(i)),n=n.add(t.element(3).mul(1.023328).mul(s)),n=n.add(t.element(4).mul(.858086).mul(s).mul(r)),n=n.add(t.element(5).mul(.858086).mul(r).mul(i)),n=n.add(t.element(6).mul(i.mul(i).mul(.743125).sub(.247708))),n=n.add(t.element(7).mul(.858086).mul(s).mul(i)),n=n.add(t.element(8).mul(.429043).mul(Pn(s,s).sub(Pn(r,r)))),n}));class LN extends wb{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=Xi(0).setGroup(Wi),this.decayExponentNode=Xi(0).setGroup(Wi)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(e){const{colorNode:t,cutoffDistanceNode:s,decayExponentNode:r,light:i}=this,n=e.context.lightingModel,o=Ib(i).sub(qu),a=o.normalize(),u=o.length(),l=Mb({lightDistance:u,cutoffDistance:s,decayExponent:r}),d=t.mul(l),c=e.context.reflectedLight;n.direct({lightDirection:a,lightColor:d,reflectedLight:c},e.stack,e)}}class VN extends wb{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,r=Lb(this.light),i=e.context.reflectedLight;t.direct({lightDirection:r,lightColor:s,reflectedLight:i},e.stack,e)}}const DN=new n,ON=new n;let GN=null;class zN extends wb{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=Xi(new s).setGroup(Wi),this.halfWidth=Xi(new s).setGroup(Wi)}update(e){super.update(e);const{light:t}=this,s=e.camera.matrixWorldInverse;ON.identity(),DN.copy(t.matrixWorld),DN.premultiply(s),ON.extractRotation(DN),this.halfWidth.value.set(.5*t.width,0,0),this.halfHeight.value.set(0,.5*t.height,0),this.halfWidth.value.applyMatrix4(ON),this.halfHeight.value.applyMatrix4(ON)}setup(e){let t,s;super.setup(e),e.isAvailable("float32Filterable")?(t=pu(GN.LTC_FLOAT_1),s=pu(GN.LTC_FLOAT_2)):(t=pu(GN.LTC_HALF_1),s=pu(GN.LTC_HALF_2));const{colorNode:r,light:i}=this,n=e.context.lightingModel,o=Ib(i),a=e.context.reflectedLight;n.directRectArea({lightColor:r,lightPosition:o,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:a,ltc_1:t,ltc_2:s},e.stack,e)}static setLTC(e){GN=e}}class kN extends wb{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=Xi(0).setGroup(Wi),this.penumbraCosNode=Xi(0).setGroup(Wi),this.cutoffDistanceNode=Xi(0).setGroup(Wi),this.decayExponentNode=Xi(0).setGroup(Wi)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return aa(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:r,decayExponentNode:i,light:n}=this,o=Ib(n).sub(qu),a=o.normalize(),u=a.dot(Lb(n)),l=this.getSpotAttenuation(u),d=o.length(),c=Mb({lightDistance:d,cutoffDistance:r,decayExponent:i}),h=s.mul(l).mul(c),p=e.context.reflectedLight;t.direct({lightDirection:a,lightColor:h,reflectedLight:p},e.stack,e)}}class $N extends kN{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&!0===t.isTexture){const r=e.acos().mul(1/Math.PI);s=pu(t,_i(r,0),0).r}else s=super.getSpotAttenuation(e);return s}}class HN extends wb{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class WN extends wb{static get type(){return"HemisphereLightNode"}constructor(t=null){super(t),this.lightPositionNode=Fb(t),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=Xi(new e).setGroup(Wi)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:r}=this,i=tl.dot(r).mul(.5).add(.5),n=ra(s,t,i);e.context.irradiance.addAssign(n)}}class jN extends wb{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let e=0;e<9;e++)t.push(new s);this.lightProbe=Tl(t)}update(e){const{light:t}=this;super.update(e);for(let e=0;e<9;e++)this.lightProbe.array[e].copy(t.sh.coefficients[e]).multiplyScalar(t.intensity)}setup(e){const t=IN(sl,this.lightProbe);e.context.irradiance.addAssign(t)}}class qN{parseFunction(){console.warn("Abstract function.")}}class XN{constructor(e,t,s="",r=""){this.type=e,this.inputs=t,this.name=s,this.precision=r}getCode(){console.warn("Abstract function.")}}XN.isNodeFunction=!0;const KN=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,YN=/[a-z_0-9]+/gi,QN="#pragma main";class ZN extends XN{constructor(e){const{type:t,inputs:s,name:r,precision:i,inputsCode:n,blockCode:o,headerCode:a}=(e=>{const t=(e=e.trim()).indexOf(QN),s=-1!==t?e.slice(t+12):e,r=s.match(KN);if(null!==r&&5===r.length){const i=r[4],n=[];let o=null;for(;null!==(o=YN.exec(i));)n.push(o);const a=[];let u=0;for(;u<n.length;){const e="const"===n[u][0];!0===e&&u++;let t=n[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const s=n[u++][0];let r=Number.parseInt(n[u][0]);!1===Number.isNaN(r)?u++:r=null;const i=n[u++][0];a.push(new Jm(s,i,r,t,e))}const l=s.substring(r[0].length),d=void 0!==r[3]?r[3]:"";return{type:r[2],inputs:a,name:d,precision:void 0!==r[1]?r[1]:"",inputsCode:i,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,s,r,i),this.inputsCode=n,this.blockCode=o,this.headerCode=a}getCode(e=this.name){let t;const s=this.blockCode;if(""!==s){const{type:r,inputsCode:i,headerCode:n,precision:o}=this;let a=`${r} ${e} ( ${i.trim()} )`;""!==o&&(a=`${o} ${a}`),t=n+a+s}else t="";return t}}class JN extends qN{parseFunction(e){return new ZN(e)}}function ev(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function tv(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}class sv{constructor(){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparent=[],this.bundles=[],this.lightsNode=new lc([]),this.lightsArray=[],this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,r,i,n){let o=this.renderItems[this.renderItemsIndex];return void 0===o?(o={id:e.id,object:e,geometry:t,material:s,groupOrder:r,renderOrder:e.renderOrder,z:i,group:n},this.renderItems[this.renderItemsIndex]=o):(o.id=e.id,o.object=e,o.geometry=t,o.material=s,o.groupOrder=r,o.renderOrder=e.renderOrder,o.z=i,o.group=n),this.renderItemsIndex++,o}push(e,t,s,r,i,n){const o=this.getNextRenderItem(e,t,s,r,i,n);!0===e.occlusionTest&&this.occlusionQueryCount++,(!0===s.transparent||s.transmission>0?this.transparent:this.opaque).push(o)}unshift(e,t,s,r,i,n){const o=this.getNextRenderItem(e,t,s,r,i,n);(!0===s.transparent?this.transparent:this.opaque).unshift(o)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}getLightsNode(){return this.lightsNode.fromLights(this.lightsArray)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||ev),this.transparent.length>1&&this.transparent.sort(t||tv)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null}}}class rv{constructor(){this.lists=new bg}get(e,t){const s=this.lists,r=[e,t];let i=s.get(r);return void 0===i&&(i=new sv,s.set(r,i)),i}dispose(){this.lists=new bg}}let iv=0;class nv{constructor(){this.id=iv++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new r,this.scissor=!1,this.scissorValue=new r,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return ov(this)}}function ov(e){const{textures:t,activeCubeFace:s}=e;let r="";for(const e of t)r+=e.id+",";return r+=s,r}class av{constructor(){this.chainMaps={}}get(e,t,s=null){const r=[e,t];let i;if(null===s)i="default";else{const e=s.texture.format;i=`${s.textures.length}:${e}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const n=this.getChainMap(i);let o=n.get(r);return void 0===o&&(o=new nv,n.set(r,o)),null!==s&&(o.sampleCount=0===s.samples?1:s.samples),o}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new bg)}dispose(){this.chainMaps={}}}const uv=new s;class lv extends Cg{constructor(e,t,s){super(),this.renderer=e,this.backend=t,this.info=s}updateRenderTarget(e,t=0){const s=this.get(e),r=0===e.samples?1:e.samples,i=s.depthTextureMips||(s.depthTextureMips={}),n=e.textures,o=this.getSize(n[0]),a=o.width>>t,u=o.height>>t;let l=e.depthTexture||i[t],d=!1;void 0===l&&(l=new U,l.format=e.stencilBuffer?Pe:Ie,l.type=e.stencilBuffer?Le:x,l.image.width=a,l.image.height=u,i[t]=l),s.width===o.width&&o.height===s.height||(d=!0,l.needsUpdate=!0,l.image.width=a,l.image.height=u),s.width=o.width,s.height=o.height,s.textures=n,s.depthTexture=l,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.renderTarget=e,s.sampleCount!==r&&(d=!0,l.needsUpdate=!0,s.sampleCount=r);const c={sampleCount:r};for(let e=0;e<n.length;e++){const t=n[e];d&&(t.needsUpdate=!0),this.updateTexture(t,c)}if(this.updateTexture(l,c),!0!==s.initialized){s.initialized=!0;const t=()=>{e.removeEventListener("dispose",t);for(let e=0;e<n.length;e++)this._destroyTexture(n[e]);this._destroyTexture(l),this.delete(e)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const s=this.get(e);if(!0===s.initialized&&s.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,i=this.backend;if(r&&!0===s.initialized&&(i.destroySampler(e),i.destroyTexture(e)),e.isFramebufferTexture){const t=this.renderer.getRenderTarget();e.type=t?t.texture.type:Ve}const{width:n,height:o,depth:a}=this.getSize(e);if(t.width=n,t.height=o,t.depth=a,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,n,o):1,r||!0===e.isStorageTexture)i.createSampler(e),i.createTexture(e,t),s.generation=e.version;else{if(!0!==s.initialized&&i.createSampler(e),e.version>0){const r=e.image;if(void 0===r)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===r.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const s=[];for(const t of e.images)s.push(t);t.images=s}else t.image=r;void 0!==s.isDefaultTexture&&!0!==s.isDefaultTexture||(i.createTexture(e,t),s.isDefaultTexture=!1,s.generation=e.version),!0===e.source.dataReady&&i.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&i.generateMipmaps(e)}}else i.createDefaultTexture(e),s.isDefaultTexture=!0,s.generation=e.version}if(!0!==s.initialized){s.initialized=!0,s.generation=e.version,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}s.version=e.version}getSize(e,t=uv){let s=e.images?e.images[0]:e.image;return s?(void 0!==s.image&&(s=s.image),t.width=s.width,t.height=s.height,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let r;return r=e.isCompressedTexture?e.mipmaps.length:Math.floor(Math.log2(Math.max(t,s)))+1,r}needsMipmaps(e){return!!this.isEnvironmentTexture(e)||(!0===e.isCompressedTexture||e.minFilter!==Ee&&e.minFilter!==H)}isEnvironmentTexture(e){const t=e.mapping;return t===q||t===X||t===_||t===N}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class dv extends e{constructor(e,t,s,r=1){super(e,t,s),this.a=r}set(e,t,s,r=1){return this.a=r,super.set(e,t,s)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}const cv=new dv;class hv extends Cg{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,s){const r=this.renderer,i=this.nodes.getBackgroundNode(e)||e.background;let n=!1;if(null===i)r._clearColor.getRGB(cv,l),cv.a=r._clearColor.a;else if(!0===i.isColor)i.getRGB(cv,l),cv.a=1,n=!0;else if(!0===i.isNode){const s=this.get(e),n=i;cv.copy(r._clearColor);let o=s.backgroundMesh;if(void 0===o){const e=fa(wi(n).mul(rx),{getUV:()=>sl,getTextureLevel:()=>sx});let t=Dd();t=t.setZ(t.w);const r=new jc;r.name="Background.material",r.side=b,r.depthTest=!1,r.depthWrite=!1,r.fog=!1,r.lights=!1,r.vertexNode=t,r.colorNode=e,s.backgroundMeshNode=e,s.backgroundMesh=o=new k(new De(1,32,32),r),o.frustumCulled=!1,o.name="Background.mesh",o.onBeforeRender=function(e,t,s){this.matrixWorld.copyPosition(s.matrixWorld)}}const a=n.getCacheKey();s.backgroundCacheKey!==a&&(s.backgroundMeshNode.node=wi(n).mul(rx),s.backgroundMeshNode.needsUpdate=!0,o.material.needsUpdate=!0,s.backgroundCacheKey=a),t.unshift(o,o.geometry,o.material,0,0,null)}else console.error("THREE.Renderer: Unsupported background configuration.",i);if(!0===r.autoClear||!0===n){cv.multiplyScalar(cv.a);const e=s.clearColorValue;e.r=cv.r,e.g=cv.g,e.b=cv.b,e.a=cv.a,s.depthClearValue=r._clearDepth,s.stencilClearValue=r._clearStencil,s.clearColor=!0===r.autoClearColor,s.clearDepth=!0===r.autoClearDepth,s.clearStencil=!0===r.autoClearStencil}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}class pv{constructor(e,t,s,r,i,n,o,a,u,l=!0,d=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.transforms=d,this.nodeAttributes=r,this.bindings=i,this.updateNodes=n,this.updateBeforeNodes=o,this.updateAfterNodes=a,this.monitor=u,this.instanceBindGroups=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){if(!0!==(this.instanceBindGroups&&t.bindings[0].groupNode.shared)){const s=new jm(t.name,[],t.index,t);e.push(s);for(const e of t.bindings)s.bindings.push(e.clone())}else e.push(t)}return e}}const gv=new WeakMap;class mv extends Cg{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new Zm,this.nodeBuilderCache=new Map,this.callHashCache=new bg,this.groupsData=new bg}updateGroup(e){const t=e.groupNode,s=t.name;if(s===ji.name)return!0;if(s===Wi.name){const t=this.get(e),s=this.nodeFrame.renderId;return t.renderId!==s&&(t.renderId=s,!0)}if(s===Hi.name){const t=this.get(e),s=this.nodeFrame.frameId;return t.frameId!==s&&(t.frameId=s,!0)}const r=[t,e];let i=this.groupsData.get(r);return void 0===i&&this.groupsData.set(r,i={}),i.version!==t.version&&(i.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const{nodeBuilderCache:r}=this,i=this.getForRenderCacheKey(e);if(s=r.get(i),void 0===s){const t=this.backend.createNodeBuilder(e.object,this.renderer);t.scene=e.scene,t.material=e.material,t.camera=e.camera,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.clippingContext=e.clippingContext,t.build(),s=this._createNodeBuilderState(t),r.set(i,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const r=this.backend.createNodeBuilder(e,this.renderer);r.build(),s=this._createNodeBuilderState(r),t.nodeBuilderState=s}return s}_createNodeBuilderState(e){return new pv(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.instanceBindGroups,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const s=[e,t],r=this.renderer.info.calls;let i=this.callHashCache.get(s);if(void 0===i||i.callId!==r){const n=this.getEnvironmentNode(e),o=this.getFogNode(e),a=[];t&&a.push(t.getCacheKey(!0)),n&&a.push(n.getCacheKey()),o&&a.push(o.getCacheKey()),i={callId:r,cacheKey:a.join(",")},this.callHashCache.set(s,i)}return i.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),s=e.background;if(s){const r=0===e.backgroundBlurriness&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&0===t.backgroundBlurriness;if(t.background!==s||r){let r=null;if(!0===s.isCubeTexture||s.mapping===q||s.mapping===X||s.mapping===ge)if(e.backgroundBlurriness>0||s.mapping===ge)r=zp(s,sl);else{let e;e=!0===s.isCubeTexture?gl(s):pu(s),r=hh(e)}else!0===s.isTexture?r=pu(s,Tc.flipY()).setUpdateMatrix(!0):!0!==s.isColor&&console.error("WebGPUNodes: Unsupported background configuration.",s);t.backgroundNode=r,t.background=s,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){let e=null;if(s.isFogExp2){const t=vl("color","color",s).setGroup(Wi),r=vl("density","float",s).setGroup(Wi);e=mb(t,r)}else if(s.isFog){const t=vl("color","color",s).setGroup(Wi),r=vl("near","float",s).setGroup(Wi),i=vl("far","float",s).setGroup(Wi);e=pb(t,r,i)}else console.error("WebGPUNodes: Unsupported fog configuration.",s);t.fogNode=e,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){let e=null;!0===s.isCubeTexture?e=gl(s):!0===s.isTexture?e=pu(s):console.error("Nodes: Unsupported environment configuration.",s),t.environmentNode=e,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,r=null,i=null){const n=this.nodeFrame;return n.renderer=e,n.scene=t,n.object=s,n.camera=r,n.material=i,n}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return gv.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,s=this.getOutputCacheKey(),r=pu(e,Tc).renderOutput(t.toneMapping,t.currentColorSpace);return gv.set(e,s),r}updateBefore(e){const t=e.getNodeBuilderState();for(const s of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(s)}updateAfter(e){const t=e.getNodeBuilderState();for(const s of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(s)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const e of s.updateNodes)t.updateNode(e)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateNodes)t.updateNode(e)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new Zm,this.nodeBuilderCache=new Map}}class fv{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class xv{constructor(){this.lists=new bg}get(e,t){const s=this.lists,r=[e,t];let i=s.get(r);return void 0===i&&(i=new fv(e,t),s.set(r,i)),i}dispose(){this.lists=new bg}}class yv{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map,this.colorSpaceNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const s=this.getMaterialNodeClass(e.type);if(null!==s){t=new s;for(const s in e)t[s]=e[s]}return t}addColorSpace(e,t){this.addType(e,t,this.colorSpaceNodes)}getColorSpaceFunction(e){return this.colorSpaceNodes.get(e)||null}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t.name,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,s){if(s.has(t))console.warn(`Redefinition of node ${t}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"==typeof t||"object"==typeof t)throw new Error(`Base class ${t} is not a class.`);s.set(t,e)}}addClass(e,t,s){if(s.has(t))console.warn(`Redefinition of node ${t.name}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"!=typeof t)throw new Error(`Base class ${t.name} is not a class.`);s.set(t,e)}}}const Tv=new $,bv=new t,_v=new r,Nv=new ke,vv=new n,Sv=new r;class Rv{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1,alpha:i=!0,depth:n=!0,stencil:o=!1,antialias:a=!1,samples:u=0,getFallback:l=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=u||!0===a?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=s,this.outputColorSpace=d,this.toneMapping=c,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=n,this.stencil=o,this.clippingPlanes=[],this.info=new Lg,this.nodes={library:new yv,modelViewMatrix:null,modelNormalViewMatrix:null},this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new r(0,0,this._width,this._height),this._scissor=new r(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new jf(new jc),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const h=!0===this.alpha?0:1;this._clearColor=new dv(0,0,0,h),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Oe},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(e,t,s)=>{await this.compileAsync(e,t);const r=this._renderLists.get(e,t),i=this._renderContexts.get(e,t,this._renderTarget),n=e.overrideMaterial||s.material,o=this._objects.get(s,n,e,t,r.lightsNode,i),{fragmentShader:a,vertexShader:u}=o.getNodeBuilderState();return{fragmentShader:a,vertexShader:u}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{let s=this.backend;try{await s.init(this)}catch(e){if(null===this._getFallback)return void t(e);try{this.backend=s=this._getFallback(e),await s.init(this)}catch(e){return void t(e)}}this._nodes=new mv(this,s),this._animation=new Tg(this._nodes,this.info),this._attributes=new Ug(s),this._background=new hv(this,this._nodes),this._geometries=new Ig(this._attributes,this.info),this._textures=new lv(this,s,this.info),this._pipelines=new kg(s,this._nodes),this._bindings=new $g(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Ag(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new rv,this._bundles=new xv,this._renderContexts=new av,this._initialized=!0,e()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,s=null){!1===this._initialized&&await this.init();const r=this._nodes.nodeFrame,i=r.renderId,n=this._currentRenderContext,o=this._currentRenderObjectFunction,a=this._compilationPromises,u=!0===e.isScene?e:Tv;null===s&&(s=e);const l=this._renderTarget,d=this._renderContexts.get(s,t,l),c=this._activeMipmapLevel,h=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=h,r.renderId++,r.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new Ng),d.clippingContext.updateGlobal(this,t),u.onBeforeRender(this,e,t,l);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p),s!==e&&s.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&p.pushLight(e)})),p.finish(),null!==l){this._textures.updateRenderTarget(l,c);const e=this._textures.get(l);d.textures=e.textures,d.depthTexture=e.depthTexture}else d.textures=null,d.depthTexture=null;this._nodes.updateScene(u),this._background.update(u,p,d);const g=p.opaque,m=p.transparent,f=p.lightsNode;!0===this.opaque&&g.length>0&&this._renderObjects(g,t,u,f),!0===this.transparent&&m.length>0&&this._renderObjects(m,t,u,f),r.renderId=i,this._currentRenderContext=n,this._currentRenderObjectFunction=o,this._compilationPromises=a,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(h)}async renderAsync(e,t){!1===this._initialized&&await this.init();const s=this._renderScene(e,t);await this.backend.resolveTimestampAsync(s,"render")}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_renderBundle(e,t,s){const{bundleGroup:r,camera:i,renderList:n}=e,o=this._currentRenderContext,a=this._bundles.get(r,i),u=this.backend.get(a);void 0===u.renderContexts&&(u.renderContexts=new Set);const l=r.version!==u.version,d=!1===u.renderContexts.has(o)||l;if(u.renderContexts.add(o),d){this.backend.beginBundle(o),(void 0===u.renderObjects||l)&&(u.renderObjects=[]),this._currentRenderBundle=a;const e=n.opaque;e.length>0&&this._renderObjects(e,i,t,s),this._currentRenderBundle=null,this.backend.finishBundle(o,a),u.version=r.version}else{const{renderObjects:e}=u;for(let t=0,s=e.length;t<s;t++){const s=e[t];this._nodes.needsRefresh(s)&&(this._nodes.updateBefore(s),this._nodes.updateForRender(s),this._bindings.updateForRender(s),this._nodes.updateAfter(s))}}this.backend.addBundle(o,a)}render(e,t){if(!1===this._initialized)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(!1===(e!==c)&&!1===(t!==l))return null;const{width:s,height:r}=this.getDrawingBufferSize(bv),{depth:i,stencil:n}=this;let o=this._frameBufferTarget;return null===o&&(o=new pe(s,r,{depthBuffer:i,stencilBuffer:n,type:xe,format:ye,colorSpace:l,generateMipmaps:!1,minFilter:H,magFilter:H,samples:this.samples}),o.isPostProcessingRenderTarget=!0,this._frameBufferTarget=o),o.depthBuffer=i,o.stencilBuffer=n,o.setSize(s,r),o.viewport.copy(this._viewport),o.scissor.copy(this._scissor),o.viewport.multiplyScalar(this._pixelRatio),o.scissor.multiplyScalar(this._pixelRatio),o.scissorTest=this._scissorTest,o}_renderScene(e,t,s=!0){const r=s?this._getFrameBufferTarget():null,i=this._nodes.nodeFrame,n=i.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,u=!0===e.isScene?e:Tv,l=this._renderTarget,d=this._activeCubeFace,c=this._activeMipmapLevel;let h;null!==r?(h=r,this.setRenderTarget(h)):h=l;const p=this._renderContexts.get(e,t,h);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,i.renderId=this.info.calls;const g=this.coordinateSystem;t.coordinateSystem!==g&&(t.coordinateSystem=g,t.updateProjectionMatrix()),!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld();let m=this._viewport,f=this._scissor,x=this._pixelRatio;null!==h&&(m=h.viewport,f=h.scissor,x=1),this.getDrawingBufferSize(bv),_v.set(0,0,bv.width,bv.height);const y=void 0===m.minDepth?0:m.minDepth,T=void 0===m.maxDepth?1:m.maxDepth;p.viewportValue.copy(m).multiplyScalar(x).floor(),p.viewportValue.width>>=c,p.viewportValue.height>>=c,p.viewportValue.minDepth=y,p.viewportValue.maxDepth=T,p.viewport=!1===p.viewportValue.equals(_v),p.scissorValue.copy(f).multiplyScalar(x).floor(),p.scissor=this._scissorTest&&!1===p.scissorValue.equals(_v),p.scissorValue.width>>=c,p.scissorValue.height>>=c,p.clippingContext||(p.clippingContext=new Ng),p.clippingContext.updateGlobal(this,t),u.onBeforeRender(this,e,t,h),vv.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),Nv.setFromProjectionMatrix(vv,g);const b=this._renderLists.get(e,t);if(b.begin(),this._projectObject(e,t,0,b),b.finish(),!0===this.sortObjects&&b.sort(this._opaqueSort,this._transparentSort),null!==h){this._textures.updateRenderTarget(h,c);const e=this._textures.get(h);p.textures=e.textures,p.depthTexture=e.depthTexture,p.width=e.width,p.height=e.height,p.renderTarget=h,p.depth=h.depthBuffer,p.stencil=h.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=c,p.height>>=c,p.activeCubeFace=d,p.activeMipmapLevel=c,p.occlusionQueryCount=b.occlusionQueryCount,this._nodes.updateScene(u),this._background.update(u,b,p),this.backend.beginRender(p);const{bundles:_,lightsNode:N,transparent:v,opaque:S}=b;if(_.length>0&&this._renderBundles(_,u,N),!0===this.opaque&&S.length>0&&this._renderObjects(S,t,u,N),!0===this.transparent&&v.length>0&&this._renderObjects(v,t,u,N),this.backend.finishRender(p),i.renderId=n,this._currentRenderContext=o,this._currentRenderObjectFunction=a,null!==r){this.setRenderTarget(l,d,c);const e=this._quad;this._nodes.hasOutputChange(h.texture)&&(e.material.fragmentNode=this._nodes.getOutputNode(h.texture),e.material.needsUpdate=!0),this._renderScene(e,e.camera,!1)}return u.onAfterRender(this,e,t,h),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio=e,this.setSize(this._width,this._height,!1)}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===s&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,r){const i=this._scissor;e.isVector4?i.copy(e):i.set(e,t,s,r)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,r,i=0,n=1){const o=this._viewport;e.isVector4?o.copy(e):o.set(e,t,s,r),o.minDepth=i,o.maxDepth=n}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){if(!1===this._initialized)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,s);const r=this._renderTarget||this._getFrameBufferTarget();let i=null;if(null!==r&&(this._textures.updateRenderTarget(r),i=this._textures.get(r)),this.backend.clear(e,t,s,i),null!==r&&null===this._renderTarget){const e=this._quad;this._nodes.hasOutputChange(r.texture)&&(e.material.fragmentNode=this._nodes.getOutputNode(r.texture),e.material.needsUpdate=!0),this._renderScene(e,e.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,s=!0){!1===this._initialized&&await this.init(),this.clear(e,t,s)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return null!==this._renderTarget?c:this.toneMapping}get currentColorSpace(){return null!==this._renderTarget?l:this.outputColorSpace}dispose(){this.info.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}async computeAsync(e){!1===this._initialized&&await this.init();const t=this._nodes.nodeFrame,s=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const r=this.backend,i=this._pipelines,n=this._bindings,o=this._nodes,a=Array.isArray(e)?e:[e];if(void 0===a[0]||!0!==a[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const t of a){if(!1===i.has(t)){const e=()=>{t.removeEventListener("dispose",e),i.delete(t),n.delete(t),o.delete(t)};t.addEventListener("dispose",e),t.onInit({renderer:this})}o.updateForCompute(t),n.updateForCompute(t);const s=n.getForCompute(t),a=i.getForCompute(t,s);r.compute(e,t,s,a)}r.finishCompute(e),await this.backend.resolveTimestampAsync(e,"compute"),t.renderId=s}async hasFeatureAsync(e){return!1===this._initialized&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return!1===this._initialized?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}copyFramebufferToTexture(e){const t=this._currentRenderContext;this._textures.updateTexture(e),this.backend.copyFramebufferToTexture(e,t)}copyTextureToTexture(e,t,s=null,r=null,i=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,s,r,i)}readRenderTargetPixelsAsync(e,t,s,r,i,n=0,o=0){return this.backend.copyTextureToBuffer(e.textures[n],t,s,r,i,o)}_projectObject(e,t,s,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)s=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)r.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||Nv.intersectsSprite(e)){!0===this.sortObjects&&Sv.setFromMatrixPosition(e.matrixWorld).applyMatrix4(vv);const{geometry:t,material:i}=e;i.visible&&r.push(e,t,i,s,Sv.z,null)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||Nv.intersectsObject(e))){const{geometry:t,material:i}=e;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),Sv.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(vv)),Array.isArray(i)){const n=t.groups;for(let o=0,a=n.length;o<a;o++){const a=n[o],u=i[a.materialIndex];u&&u.visible&&r.push(e,t,u,s,Sv.z,a)}}else i.visible&&r.push(e,t,i,s,Sv.z,null)}if(!0===e.isBundleGroup&&void 0!==this.backend.beginBundle){const s=r;(r=this._renderLists.get(e,t)).begin(),s.pushBundle({bundleGroup:e,camera:t,renderList:r}),r.finish()}const i=e.children;for(let e=0,n=i.length;e<n;e++)this._projectObject(i[e],t,s,r)}_renderBundles(e,t,s){for(const r of e)this._renderBundle(r,t,s)}_renderObjects(e,t,s,r){for(let i=0,n=e.length;i<n;i++){const n=e[i],{object:o,geometry:a,material:u,group:l}=n;if(t.isArrayCamera){const e=t.cameras;for(let t=0,i=e.length;t<i;t++){const i=e[t];if(o.layers.test(i.layers)){const e=i.viewport,t=void 0===e.minDepth?0:e.minDepth,n=void 0===e.maxDepth?1:e.maxDepth,d=this._currentRenderContext.viewportValue;d.copy(e).multiplyScalar(this._pixelRatio).floor(),d.minDepth=t,d.maxDepth=n,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(o,s,i,a,u,l,r)}}}else this._currentRenderObjectFunction(o,s,t,a,u,l,r)}}renderObject(e,t,s,r,i,n,o){let a,u,l;if(e.onBeforeRender(this,t,s,r,i,n),null!==t.overrideMaterial){const e=t.overrideMaterial;i.positionNode&&i.positionNode.isNode&&(a=e.positionNode,e.positionNode=i.positionNode),e.isShadowNodeMaterial&&(e.side=null===i.shadowSide?i.side:i.shadowSide,i.depthNode&&i.depthNode.isNode&&(l=e.depthNode,e.depthNode=i.depthNode),i.shadowNode&&i.shadowNode.isNode&&(u=e.fragmentNode,e.fragmentNode=i.shadowNode),this.localClippingEnabled&&(i.clipShadows?(e.clippingPlanes!==i.clippingPlanes&&(e.clippingPlanes=i.clippingPlanes,e.needsUpdate=!0),e.clipIntersection!==i.clipIntersection&&(e.clipIntersection=i.clipIntersection)):Array.isArray(e.clippingPlanes)&&(e.clippingPlanes=null,e.needsUpdate=!0))),i=e}!0===i.transparent&&i.side===Ge&&!1===i.forceSinglePass?(i.side=b,this._handleObjectFunction(e,i,t,s,o,n,"backSide"),i.side=ze,this._handleObjectFunction(e,i,t,s,o,n),i.side=Ge):this._handleObjectFunction(e,i,t,s,o,n),void 0!==a&&(t.overrideMaterial.positionNode=a),void 0!==l&&(t.overrideMaterial.depthNode=l),void 0!==u&&(t.overrideMaterial.fragmentNode=u),e.onAfterRender(this,t,s,r,i,n)}_renderObjectDirect(e,t,s,r,i,n,o){const a=this._objects.get(e,t,s,r,i,this._currentRenderContext,o);a.drawRange=e.geometry.drawRange,a.group=n;const u=this._nodes.needsRefresh(a);if(u&&(this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a)),this._pipelines.updateForRender(a),null!==this._currentRenderBundle){this.backend.get(this._currentRenderBundle).renderObjects.push(a),a.bundle=this._currentRenderBundle.scene}this.backend.draw(a,this.info),u&&this._nodes.updateAfter(a)}_createObjectPipeline(e,t,s,r,i,n){const o=this._objects.get(e,t,s,r,i,this._currentRenderContext,n);this._nodes.updateBefore(o),this._geometries.updateForRender(o),this._nodes.updateForRender(o),this._bindings.updateForRender(o),this._pipelines.getForRender(o,this._compilationPromises),this._nodes.updateAfter(o)}get compute(){return this.computeAsync}get compile(){return this.compileAsync}}class Av{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}class Cv extends Av{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return(e=this._buffer.byteLength)+(Bg-e%Bg)%Bg;var e}get buffer(){return this._buffer}update(){return!0}}class Ev extends Cv{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let wv=0;class Mv extends Ev{constructor(e,t){super("UniformBuffer_"+wv++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class Bv extends Ev{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get values(){return null===this._values&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const s=this.uniforms[t],{boundary:r,itemSize:i}=s,n=e%Bg;0!==n&&Bg-n-r<0?e+=Bg-n:n%r!=0&&(e+=n%r),s.offset=e/this.bytesPerElement,e+=i*this.bytesPerElement}return Math.ceil(e/Bg)*Bg}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isNumberUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i]!==r){this.buffer[i]=s[i]=r,t=!0}return t}updateVector2(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i+0]!==r.x||s[i+1]!==r.y){const e=this.buffer;e[i+0]=s[i+0]=r.x,e[i+1]=s[i+1]=r.y,t=!0}return t}updateVector3(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i+0]!==r.x||s[i+1]!==r.y||s[i+2]!==r.z){const e=this.buffer;e[i+0]=s[i+0]=r.x,e[i+1]=s[i+1]=r.y,e[i+2]=s[i+2]=r.z,t=!0}return t}updateVector4(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i+0]!==r.x||s[i+1]!==r.y||s[i+2]!==r.z||s[i+4]!==r.w){const e=this.buffer;e[i+0]=s[i+0]=r.x,e[i+1]=s[i+1]=r.y,e[i+2]=s[i+2]=r.z,e[i+3]=s[i+3]=r.w,t=!0}return t}updateColor(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i+0]!==r.r||s[i+1]!==r.g||s[i+2]!==r.b){const e=this.buffer;e[i+0]=s[i+0]=r.r,e[i+1]=s[i+1]=r.g,e[i+2]=s[i+2]=r.b,t=!0}return t}updateMatrix3(e){let t=!1;const s=this.values,r=e.getValue().elements,i=e.offset;if(s[i+0]!==r[0]||s[i+1]!==r[1]||s[i+2]!==r[2]||s[i+4]!==r[3]||s[i+5]!==r[4]||s[i+6]!==r[5]||s[i+8]!==r[6]||s[i+9]!==r[7]||s[i+10]!==r[8]){const e=this.buffer;e[i+0]=s[i+0]=r[0],e[i+1]=s[i+1]=r[1],e[i+2]=s[i+2]=r[2],e[i+4]=s[i+4]=r[3],e[i+5]=s[i+5]=r[4],e[i+6]=s[i+6]=r[5],e[i+8]=s[i+8]=r[6],e[i+9]=s[i+9]=r[7],e[i+10]=s[i+10]=r[8],t=!0}return t}updateMatrix4(e){let t=!1;const s=this.values,r=e.getValue().elements,i=e.offset;if(!1===function(e,t,s){for(let r=0,i=t.length;r<i;r++)if(e[s+r]!==t[r])return!1;return!0}(s,r,i)){this.buffer.set(r,i),function(e,t,s){for(let r=0,i=t.length;r<i;r++)e[s+r]=t[r]}(s,r,i),t=!0}return t}}let Uv=0;class Fv extends Bv{constructor(e,t){super(e),this.id=Uv++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const s=t.nodeUniform.node;if(!s)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(s)}return e}}let Pv=0;class Iv extends Av{constructor(e,t){super(e),this.id=Pv++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class Lv extends Iv{constructor(e,t,s,r=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s,this.access=r}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class Vv extends Lv{constructor(e,t,s,r){super(e,t,s,r),this.isSampledCubeTexture=!0}}class Dv extends Lv{constructor(e,t,s,r){super(e,t,s,r),this.isSampledTexture3D=!0}}const Ov={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},Gv={low:"lowp",medium:"mediump",high:"highp"},zv={swizzleAssign:!0,storageBuffer:!1},kv="\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler3D;\nprecision highp samplerCube;\nprecision highp sampler2DArray;\n\nprecision highp usampler2D;\nprecision highp usampler3D;\nprecision highp usamplerCube;\nprecision highp usampler2DArray;\n\nprecision highp isampler2D;\nprecision highp isampler3D;\nprecision highp isamplerCube;\nprecision highp isampler2DArray;\n\nprecision lowp sampler2DShadow;\n";class $v extends Qm{constructor(e,t){super(e,t,new JN),this.uniformGroups={},this.transforms=[],this.extensions={},this.instanceBindGroups=!1,this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(e){return!0===e.isVideoTexture&&e.colorSpace!==f}getMethod(e){return Ov[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(this.getType(e.type)+" "+e.name);return`${this.getType(t.type)} ${t.name}( ${r.join(", ")} ) {\n\n\t${s.vars}\n\n${s.code}\n\treturn ${s.result};\n\n}`}setupPBO(e){const t=e.value;if(void 0===t.pbo){const e=t.array,s=t.count*t.itemSize,{itemSize:r}=t,i=t.array.constructor.name.toLowerCase().includes("int");let n=i?$e:He;2===r?n=i?We:Fe:3===r?n=i?je:qe:4===r&&(n=i?Xe:ye);const o={Float32Array:w,Uint8Array:Ve,Uint16Array:Ke,Uint32Array:x,Int8Array:Ye,Int16Array:Qe,Int32Array:y,Uint8ClampedArray:Ve},a=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(s/r))));let u=Math.ceil(s/r/a);a*u*r<s&&u++;const l=a*u*r,d=new e.constructor(l);d.set(e,0),t.array=d;const c=new Ae(t.array,a,u,n,o[t.array.constructor.name]||w);c.needsUpdate=!0,c.isPBOTexture=!0;const h=new hu(c,null,null);h.setPrecision("high"),t.pboNode=h,t.pbo=h.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&!0!==e.node.isTextureNode&&!0!==e.node.isBufferNode?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:s}=e,r=t.value;if(this.renderer.backend.has(r)){this.renderer.backend.get(r).pbo=r.pbo}const i=this.getUniformFromNode(r.pboNode,"texture",this.shaderStage,this.context.label),n=this.getPropertyName(i);this.increaseUsage(s);const o=s.build(this,"uint"),a=this.getDataFromNode(e);let u=a.propertyName;if(void 0===u){const s=this.getVarFromNode(e);u=this.getPropertyName(s);const i=this.getDataFromNode(t);let l=i.propertySizeName;void 0===l&&(l=u+"Size",this.getVarFromNode(t,l,"uint"),this.addLineFlowCode(`${l} = uint( textureSize( ${n}, 0 ).x )`),i.propertySizeName=l);const{itemSize:d}=r,c="."+xr.join("").slice(0,d),h=`ivec2(${o} % ${l}, ${o} / ${l})`,p=this.generateTextureLoad(null,n,h,null,"0");let g="vec4";r.pbo.type===x?g="uvec4":r.pbo.type===y&&(g="ivec4"),this.addLineFlowCode(`${u} = ${g}(${p})${c}`),a.propertyName=u}return u}generateTextureLoad(e,t,s,r,i="0"){return r?`texelFetch( ${t}, ivec3( ${s}, ${r} ), ${i} )`:`texelFetch( ${t}, ${s}, ${i} )`}generateTexture(e,t,s,r){return e.isDepthTexture?`texture( ${t}, ${s} ).x`:(r&&(s=`vec3( ${s}, ${r} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,r){return`textureLod( ${t}, ${s}, ${r} )`}generateTextureBias(e,t,s,r){return`texture( ${t}, ${s}, ${r} )`}generateTextureGrad(e,t,s,r){return`textureGrad( ${t}, ${s}, ${r[0]}, ${r[1]} )`}generateTextureCompare(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`texture( ${t}, vec3( ${s}, ${r} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${n} shader.`)}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`${this.getVar(e.type,e.name)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],s=[],r={};for(const i of t){let t=null,n=!1;if("texture"===i.type){const e=i.node.value;let s="";!0===e.isDataTexture&&(e.type===x?s="u":e.type===y&&(s="i")),t=e.compareFunction?`sampler2DShadow ${i.name};`:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?`${s}sampler2DArray ${i.name};`:`${s}sampler2D ${i.name};`}else if("cubeTexture"===i.type)t=`samplerCube ${i.name};`;else if("texture3D"===i.type)t=`sampler3D ${i.name};`;else if("buffer"===i.type){const e=i.node,s=this.getType(e.bufferType),r=e.bufferCount,n=r>0?r:"";t=`${e.name} {\n\t${s} ${i.name}[${n}];\n};\n`}else{t=`${this.getVectorType(i.type)} ${this.getPropertyName(i,e)};`,n=!0}const o=i.node.precision;if(null!==o&&(t=Gv[o]+" "+t),n){t="\t"+t;const e=i.groupNode.name;(r[e]||(r[e]=[])).push(t)}else t="uniform "+t,s.push(t)}let i="";for(const t in r){const s=r[t];i+=this._getGLSLUniformStruct(e+"_"+t,s.join("\n"))+"\n"}return i+=s.join("\n"),i}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==y){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const r=s.array;!1==(r instanceof Uint32Array||r instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e||"compute"===e){const e=this.getAttributesArray();let s=0;for(const r of e)t+=`layout( location = ${s++} ) in ${r.type} ${r.name};\n`}return t}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`layout( location = ${e} ) out ${r} m${e};`)}return t.join("\n")}getStructs(e){const t=[],s=this.structs[e];if(0===s.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let e=0,r=s.length;e<r;e++){const r=s[e];let i="\n";i+=this.getStructMembers(r),i+="\n",t.push(i)}return t.join("\n\n")}getVaryings(e){let t="";const s=this.varyings;if("vertex"===e||"compute"===e)for(const r of s){"compute"===e&&(r.needsInterpolation=!0);const s=r.type;t+=`${s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":""}${r.needsInterpolation?"out":"/*out*/"} ${s} ${r.name};\n`}else if("fragment"===e)for(const e of s)if(e.needsInterpolation){const s=e.type;t+=`${s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":""}in ${s} ${e.name};\n`}return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce(((e,t)=>e*t),1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,s=this.shaderStage){const r=this.extensions[s]||(this.extensions[s]=new Map);!1===r.has(e)&&r.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if("vertex"===e){const t=this.renderer.backend.extensions;this.object.isBatchedMesh&&t.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const s=this.extensions[e];if(void 0!==s)for(const{name:e,behavior:r}of s.values())t.push(`#extension ${e} : ${r}`);return t.join("\n")}isAvailable(e){let t=zv[e];if(void 0===t){if("float32Filterable"===e){const e=this.renderer.backend.extensions;e.has("OES_texture_float_linear")?(e.get("OES_texture_float_linear"),t=!0):t=!1}zv[e]=t}return t}isFlipY(){return!0}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let s=0;s<e.length;s++){const r=e[s],i=this.getPropertyName(r.attributeNode);t+=`${r.varyingName} = ${i};\n\t`}return t}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions \n${e.extensions}\n\n// precision\n${kv}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// transforms\n\t${e.transforms}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${kv}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const r=this.flowNodes[t],i=r[r.length-1];for(const e of r){const r=this.getFlowData(e),n=e.name;n&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${n}\n\t`),s+=`${r.code}\n\t`,e===i&&"compute"!==t&&(s+="// result\n\t","vertex"===t?(s+="gl_Position = ",s+=`${r.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${r.result};`)))}const n=e[t];n.extensions=this.getExtensions(t),n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.vars=this.getVars(t),n.structs=this.getStructs(t),n.codes=this.getCodes(t),n.transforms=this.getTransforms(t),n.flow=s}null!==this.material?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,s,r=null){const i=super.getUniformFromNode(e,t,s,r),n=this.getDataFromNode(e,s,this.globalCache);let o=n.uniformGPU;if(void 0===o){const r=e.groupNode,a=r.name,u=this.getBindGroupArray(a,s);if("texture"===t)o=new Lv(i.name,i.node,r),u.push(o);else if("cubeTexture"===t)o=new Vv(i.name,i.node,r),u.push(o);else if("texture3D"===t)o=new Dv(i.name,i.node,r),u.push(o);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`,i.name=`buffer${e.id}`;const t=new Mv(e,r);t.name=e.name,u.push(t),o=t}else{const e=this.uniformGroups[s]||(this.uniformGroups[s]={});let n=e[a];void 0===n&&(n=new Fv(s+"_"+a,r),e[a]=n,u.push(n)),o=this.getNodeUniform(i,t),n.addUniform(o)}n.uniformGPU=o}return i}}let Hv=null,Wv=null,jv=null;class qv{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:s}=e;return s.isInstancedBufferGeometry?s.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return Hv=Hv||new t,this.renderer.getDrawingBufferSize(Hv)}getScissor(){return Wv=Wv||new r,this.renderer.getScissor(Wv)}setScissorTest(){}getClearColor(){const e=this.renderer;return jv=jv||new dv,e.getClearColor(jv),jv.getRGB(jv,this.renderer.currentColorSpace),jv}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:Ze(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Ne} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}}let Xv=0;class Kv{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[1^this.activeBufferIndex]}switchBuffers(){this.activeBufferIndex^=1}}class Yv{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:r}=s,i=e.array,n=e.usage||r.STATIC_DRAW,o=e.isInterleavedBufferAttribute?e.data:e,a=s.get(o);let u,l=a.bufferGPU;if(void 0===l&&(l=this._createBuffer(r,t,i,n),a.bufferGPU=l,a.bufferType=t,a.version=o.version),i instanceof Float32Array)u=r.FLOAT;else if(i instanceof Uint16Array)u=e.isFloat16BufferAttribute?r.HALF_FLOAT:r.UNSIGNED_SHORT;else if(i instanceof Int16Array)u=r.SHORT;else if(i instanceof Uint32Array)u=r.UNSIGNED_INT;else if(i instanceof Int32Array)u=r.INT;else if(i instanceof Int8Array)u=r.BYTE;else if(i instanceof Uint8Array)u=r.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+i);u=r.UNSIGNED_BYTE}let d={bufferGPU:l,bufferType:t,type:u,byteLength:i.byteLength,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===r.INT||u===r.UNSIGNED_INT||e.gpuType===y,id:Xv++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const e=this._createBuffer(r,t,i,n);d=new Kv(d,e)}s.set(e,d)}updateAttribute(e){const t=this.backend,{gl:s}=t,r=e.array,i=e.isInterleavedBufferAttribute?e.data:e,n=t.get(i),o=n.bufferType,a=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(o,n.bufferGPU),0===a.length)s.bufferSubData(o,0,r);else{for(let e=0,t=a.length;e<t;e++){const t=a[e];s.bufferSubData(o,t.start*r.BYTES_PER_ELEMENT,r,t.start,t.count)}i.clearUpdateRanges()}s.bindBuffer(o,null),n.version=i.version}destroyAttribute(e){const t=this.backend,{gl:s}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const r=t.get(e);s.deleteBuffer(r.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:s}=t,r=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:i}=t.get(r),n=e.array,o=n.byteLength;s.bindBuffer(s.COPY_READ_BUFFER,i);const a=s.createBuffer();s.bindBuffer(s.COPY_WRITE_BUFFER,a),s.bufferData(s.COPY_WRITE_BUFFER,o,s.STREAM_READ),s.copyBufferSubData(s.COPY_READ_BUFFER,s.COPY_WRITE_BUFFER,0,0,o),await t.utils._clientWaitAsync();const u=new e.array.constructor(n.length);return s.bindBuffer(s.COPY_WRITE_BUFFER,a),s.getBufferSubData(s.COPY_WRITE_BUFFER,0,u),s.deleteBuffer(a),s.bindBuffer(s.COPY_READ_BUFFER,null),s.bindBuffer(s.COPY_WRITE_BUFFER,null),u.buffer}_createBuffer(e,t,s,r){const i=e.createBuffer();return e.bindBuffer(t,i),e.bufferData(t,s,r),e.bindBuffer(t,null),i}}let Qv,Zv,Jv=!1;class eS{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},!1===Jv&&(this._init(this.gl),Jv=!0)}_init(e){Qv={[Je]:e.FUNC_ADD,[et]:e.FUNC_SUBTRACT,[tt]:e.FUNC_REVERSE_SUBTRACT},Zv={[st]:e.ZERO,[rt]:e.ONE,[it]:e.SRC_COLOR,[nt]:e.SRC_ALPHA,[ot]:e.SRC_ALPHA_SATURATE,[at]:e.DST_COLOR,[ut]:e.DST_ALPHA,[lt]:e.ONE_MINUS_SRC_COLOR,[dt]:e.ONE_MINUS_SRC_ALPHA,[ct]:e.ONE_MINUS_DST_COLOR,[ht]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==pt?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===gt?t.cullFace(t.BACK):e===mt?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:s}=this;e!==t&&(s.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,s,r,i,n,o,a){const{gl:u}=this;if(e!==z){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===ft)i=i||t,n=n||s,o=o||r,t===this.currentBlendEquation&&i===this.currentBlendEquationAlpha||(u.blendEquationSeparate(Qv[t],Qv[i]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=i),s===this.currentBlendSrc&&r===this.currentBlendDst&&n===this.currentBlendSrcAlpha&&o===this.currentBlendDstAlpha||(u.blendFuncSeparate(Zv[s],Zv[r],Zv[n],Zv[o]),this.currentBlendSrc=s,this.currentBlendDst=r,this.currentBlendSrcAlpha=n,this.currentBlendDstAlpha=o),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||a!==this.currentPremultipledAlpha){if(this.currentBlendEquation===Je&&this.currentBlendEquationAlpha===Je||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=Je,this.currentBlendEquationAlpha=Je),a)switch(e){case P:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case we:u.blendFunc(u.ONE,u.ONE);break;case yt:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case xt:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case P:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case we:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case yt:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case xt:u.blendFunc(u.ZERO,u.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=a}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case At:t.depthFunc(t.NEVER);break;case Rt:t.depthFunc(t.ALWAYS);break;case St:t.depthFunc(t.LESS);break;case vt:t.depthFunc(t.LEQUAL);break;case Nt:t.depthFunc(t.EQUAL);break;case _t:t.depthFunc(t.GEQUAL);break;case bt:t.depthFunc(t.GREATER);break;case Tt:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===s||(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===s||(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t){const{gl:s}=this;e.side===Ge?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let r=e.side===b;t&&(r=!r),this.setFlipSided(r),e.blending===P&&!1===e.transparent?this.setBlending(z):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const i=e.stencilWrite;this.setStencilTest(i),i&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,s){const{gl:r}=this;e?(this.enable(r.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===s||(r.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(r.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}bindFramebuffer(e,t){const{gl:s,currentBoundFramebuffers:r}=this;return r[e]!==t&&(s.bindFramebuffer(e,t),r[e]=t,e===s.DRAW_FRAMEBUFFER&&(r[s.FRAMEBUFFER]=t),e===s.FRAMEBUFFER&&(r[s.DRAW_FRAMEBUFFER]=t),!0)}drawBuffers(e,t){const{gl:s}=this;let r=[],i=!1;if(null!==e.textures){r=this.currentDrawbuffers.get(t),void 0===r&&(r=[],this.currentDrawbuffers.set(t,r));const n=e.textures;if(r.length!==n.length||r[0]!==s.COLOR_ATTACHMENT0){for(let e=0,t=n.length;e<t;e++)r[e]=s.COLOR_ATTACHMENT0+e;r.length=n.length,i=!0}}else r[0]!==s.BACK&&(r[0]=s.BACK,i=!0);i&&s.drawBuffers(r)}activeTexture(e){const{gl:t,currentTextureSlot:s,maxTextures:r}=this;void 0===e&&(e=t.TEXTURE0+r-1),s!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,s){const{gl:r,currentTextureSlot:i,currentBoundTextures:n,maxTextures:o}=this;void 0===s&&(s=null===i?r.TEXTURE0+o-1:i);let a=n[s];void 0===a&&(a={type:void 0,texture:void 0},n[s]=a),a.type===e&&a.texture===t||(i!==s&&(r.activeTexture(s),this.currentTextureSlot=s),r.bindTexture(e,t),a.type=e,a.texture=t)}bindBufferBase(e,t,s){const{gl:r}=this,i=`${e}-${t}`;return this.currentBoundBufferBases[i]!==s&&(r.bindBufferBase(e,t,s),this.currentBoundBufferBases[i]=s,!0)}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:s}=this,r=s[t];void 0!==r&&void 0!==r.type&&(e.bindTexture(r.type,null),r.type=void 0,r.texture=void 0)}}class tS{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=f){const{gl:s,extensions:r}=this;let i;if(e===Ve)return s.UNSIGNED_BYTE;if(e===Ct)return s.UNSIGNED_SHORT_4_4_4_4;if(e===Et)return s.UNSIGNED_SHORT_5_5_5_1;if(e===wt)return s.UNSIGNED_INT_5_9_9_9_REV;if(e===Ye)return s.BYTE;if(e===Qe)return s.SHORT;if(e===Ke)return s.UNSIGNED_SHORT;if(e===y)return s.INT;if(e===x)return s.UNSIGNED_INT;if(e===w)return s.FLOAT;if(e===xe)return s.HALF_FLOAT;if(e===Mt)return s.ALPHA;if(e===qe)return s.RGB;if(e===ye)return s.RGBA;if(e===Bt)return s.LUMINANCE;if(e===Ut)return s.LUMINANCE_ALPHA;if(e===Ie)return s.DEPTH_COMPONENT;if(e===Pe)return s.DEPTH_STENCIL;if(e===He)return s.RED;if(e===$e)return s.RED_INTEGER;if(e===Fe)return s.RG;if(e===We)return s.RG_INTEGER;if(e===Xe)return s.RGBA_INTEGER;if(e===Ft||e===Pt||e===It||e===Lt)if(t===d){if(i=r.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(e===Ft)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Pt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===It)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Lt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=r.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(e===Ft)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Pt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===It)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Lt)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===Vt||e===Dt||e===Ot||e===Gt){if(i=r.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(e===Vt)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Dt)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Ot)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===Gt)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===zt||e===kt||e===$t){if(i=r.get("WEBGL_compressed_texture_etc"),null===i)return null;if(e===zt||e===kt)return t===d?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(e===$t)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(e===Ht||e===Wt||e===jt||e===qt||e===Xt||e===Kt||e===Yt||e===Qt||e===Zt||e===Jt||e===es||e===ts||e===ss||e===rs){if(i=r.get("WEBGL_compressed_texture_astc"),null===i)return null;if(e===Ht)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Wt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===jt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===qt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Xt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Kt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Yt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Qt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Zt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===Jt)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===es)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===ts)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===ss)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===rs)return t===d?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===is){if(i=r.get("EXT_texture_compression_bptc"),null===i)return null;if(e===is)return t===d?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===ns||e===os||e===as||e===us){if(i=r.get("EXT_texture_compression_rgtc"),null===i)return null;if(e===is)return i.COMPRESSED_RED_RGTC1_EXT;if(e===os)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===as)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===us)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===Le?s.UNSIGNED_INT_24_8:void 0!==s[e]?s[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise(((s,r)=>{!function i(){const n=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(n===e.WAIT_FAILED)return e.deleteSync(t),void r();n!==e.TIMEOUT_EXPIRED?(e.deleteSync(t),s()):requestAnimationFrame(i)}()}))}}let sS,rS,iS,nS=!1;class oS{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===nS&&(this._init(this.gl),nS=!0)}_init(e){sS={[Ce]:e.REPEAT,[ls]:e.CLAMP_TO_EDGE,[ds]:e.MIRRORED_REPEAT},rS={[Ee]:e.NEAREST,[cs]:e.NEAREST_MIPMAP_NEAREST,[be]:e.NEAREST_MIPMAP_LINEAR,[H]:e.LINEAR,[Te]:e.LINEAR_MIPMAP_NEAREST,[B]:e.LINEAR_MIPMAP_LINEAR},iS={[hs]:e.NEVER,[ps]:e.ALWAYS,[Be]:e.LESS,[gs]:e.LEQUAL,[ms]:e.EQUAL,[fs]:e.GEQUAL,[xs]:e.GREATER,[ys]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===Ee||e===cs||e===be?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let s;return s=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?t.TEXTURE_3D:t.TEXTURE_2D,s}getInternalFormat(e,t,s,r,i=!1){const{gl:n,extensions:o}=this;if(null!==e){if(void 0!==n[e])return n[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let a=t;return t===n.RED&&(s===n.FLOAT&&(a=n.R32F),s===n.HALF_FLOAT&&(a=n.R16F),s===n.UNSIGNED_BYTE&&(a=n.R8),s===n.UNSIGNED_SHORT&&(a=n.R16),s===n.UNSIGNED_INT&&(a=n.R32UI),s===n.BYTE&&(a=n.R8I),s===n.SHORT&&(a=n.R16I),s===n.INT&&(a=n.R32I)),t===n.RED_INTEGER&&(s===n.UNSIGNED_BYTE&&(a=n.R8UI),s===n.UNSIGNED_SHORT&&(a=n.R16UI),s===n.UNSIGNED_INT&&(a=n.R32UI),s===n.BYTE&&(a=n.R8I),s===n.SHORT&&(a=n.R16I),s===n.INT&&(a=n.R32I)),t===n.RG&&(s===n.FLOAT&&(a=n.RG32F),s===n.HALF_FLOAT&&(a=n.RG16F),s===n.UNSIGNED_BYTE&&(a=n.RG8),s===n.UNSIGNED_SHORT&&(a=n.RG16),s===n.UNSIGNED_INT&&(a=n.RG32UI),s===n.BYTE&&(a=n.RG8I),s===n.SHORT&&(a=n.RG16I),s===n.INT&&(a=n.RG32I)),t===n.RG_INTEGER&&(s===n.UNSIGNED_BYTE&&(a=n.RG8UI),s===n.UNSIGNED_SHORT&&(a=n.RG16UI),s===n.UNSIGNED_INT&&(a=n.RG32UI),s===n.BYTE&&(a=n.RG8I),s===n.SHORT&&(a=n.RG16I),s===n.INT&&(a=n.RG32I)),t===n.RGB&&(s===n.FLOAT&&(a=n.RGB32F),s===n.HALF_FLOAT&&(a=n.RGB16F),s===n.UNSIGNED_BYTE&&(a=n.RGB8),s===n.UNSIGNED_SHORT&&(a=n.RGB16),s===n.UNSIGNED_INT&&(a=n.RGB32UI),s===n.BYTE&&(a=n.RGB8I),s===n.SHORT&&(a=n.RGB16I),s===n.INT&&(a=n.RGB32I),s===n.UNSIGNED_BYTE&&(a=r===d&&!1===i?n.SRGB8:n.RGB8),s===n.UNSIGNED_SHORT_5_6_5&&(a=n.RGB565),s===n.UNSIGNED_SHORT_5_5_5_1&&(a=n.RGB5_A1),s===n.UNSIGNED_SHORT_4_4_4_4&&(a=n.RGB4),s===n.UNSIGNED_INT_5_9_9_9_REV&&(a=n.RGB9_E5)),t===n.RGB_INTEGER&&(s===n.UNSIGNED_BYTE&&(a=n.RGB8UI),s===n.UNSIGNED_SHORT&&(a=n.RGB16UI),s===n.UNSIGNED_INT&&(a=n.RGB32UI),s===n.BYTE&&(a=n.RGB8I),s===n.SHORT&&(a=n.RGB16I),s===n.INT&&(a=n.RGB32I)),t===n.RGBA&&(s===n.FLOAT&&(a=n.RGBA32F),s===n.HALF_FLOAT&&(a=n.RGBA16F),s===n.UNSIGNED_BYTE&&(a=n.RGBA8),s===n.UNSIGNED_SHORT&&(a=n.RGBA16),s===n.UNSIGNED_INT&&(a=n.RGBA32UI),s===n.BYTE&&(a=n.RGBA8I),s===n.SHORT&&(a=n.RGBA16I),s===n.INT&&(a=n.RGBA32I),s===n.UNSIGNED_BYTE&&(a=r===d&&!1===i?n.SRGB8_ALPHA8:n.RGBA8),s===n.UNSIGNED_SHORT_4_4_4_4&&(a=n.RGBA4),s===n.UNSIGNED_SHORT_5_5_5_1&&(a=n.RGB5_A1)),t===n.RGBA_INTEGER&&(s===n.UNSIGNED_BYTE&&(a=n.RGBA8UI),s===n.UNSIGNED_SHORT&&(a=n.RGBA16UI),s===n.UNSIGNED_INT&&(a=n.RGBA32UI),s===n.BYTE&&(a=n.RGBA8I),s===n.SHORT&&(a=n.RGBA16I),s===n.INT&&(a=n.RGBA32I)),t===n.DEPTH_COMPONENT&&(s===n.UNSIGNED_INT&&(a=n.DEPTH24_STENCIL8),s===n.FLOAT&&(a=n.DEPTH_COMPONENT32F)),t===n.DEPTH_STENCIL&&s===n.UNSIGNED_INT_24_8&&(a=n.DEPTH24_STENCIL8),a!==n.R16F&&a!==n.R32F&&a!==n.RG16F&&a!==n.RG32F&&a!==n.RGBA16F&&a!==n.RGBA32F||o.get("EXT_color_buffer_float"),a}setTextureParameters(e,t){const{gl:s,extensions:r,backend:i}=this;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,t.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,t.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),s.texParameteri(e,s.TEXTURE_WRAP_S,sS[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,sS[t.wrapT]),e!==s.TEXTURE_3D&&e!==s.TEXTURE_2D_ARRAY||s.texParameteri(e,s.TEXTURE_WRAP_R,sS[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,rS[t.magFilter]);const n=void 0!==t.mipmaps&&t.mipmaps.length>0,o=t.minFilter===H&&n?B:t.minFilter;if(s.texParameteri(e,s.TEXTURE_MIN_FILTER,rS[o]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,iS[t.compareFunction])),!0===r.has("EXT_texture_filter_anisotropic")){if(t.magFilter===Ee)return;if(t.minFilter!==be&&t.minFilter!==B)return;if(t.type===w&&!1===r.has("OES_texture_float_linear"))return;if(t.anisotropy>1){const n=r.get("EXT_texture_filter_anisotropic");s.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,i.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:s,defaultTextures:r}=this,i=this.getGLTextureType(e);let n=r[i];void 0===n&&(n=t.createTexture(),s.state.bindTexture(i,n),t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST),r[i]=n),s.set(e,{textureGPU:n,glTextureType:i,isDefault:!0})}createTexture(e,t){const{gl:s,backend:r}=this,{levels:i,width:n,height:o,depth:a}=t,u=r.utils.convert(e.format,e.colorSpace),l=r.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,u,l,e.colorSpace,e.isVideoTexture),c=s.createTexture(),h=this.getGLTextureType(e);r.state.bindTexture(h,c),this.setTextureParameters(h,e),e.isDataArrayTexture||e.isCompressedArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,i,d,n,o,a):e.isData3DTexture?s.texStorage3D(s.TEXTURE_3D,i,d,n,o,a):e.isVideoTexture||s.texStorage2D(h,i,d,n,o),r.set(e,{textureGPU:c,glTextureType:h,glFormat:u,glType:l,glInternalFormat:d})}copyBufferToTexture(e,t){const{gl:s,backend:r}=this,{textureGPU:i,glTextureType:n,glFormat:o,glType:a}=r.get(t),{width:u,height:l}=t.source.data;s.bindBuffer(s.PIXEL_UNPACK_BUFFER,e),r.state.bindTexture(n,i),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,!1),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),s.texSubImage2D(n,0,0,0,u,l,o,a,0),s.bindBuffer(s.PIXEL_UNPACK_BUFFER,null),r.state.unbindTexture()}updateTexture(e,t){const{gl:s}=this,{width:r,height:i}=t,{textureGPU:n,glTextureType:o,glFormat:a,glType:u,glInternalFormat:l}=this.backend.get(e);if(e.isRenderTargetTexture||void 0===n)return;const d=e=>e.isDataTexture?e.image.data:e instanceof ImageBitmap||e instanceof OffscreenCanvas||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement?e:e.data;if(this.backend.state.bindTexture(o,n),this.setTextureParameters(o,e),e.isCompressedTexture){const r=e.mipmaps,i=t.image;for(let t=0;t<r.length;t++){const n=r[t];e.isCompressedArrayTexture?e.format!==s.RGBA?null!==a?s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,t,0,0,0,n.width,n.height,i.depth,a,n.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):s.texSubImage3D(s.TEXTURE_2D_ARRAY,t,0,0,0,n.width,n.height,i.depth,a,u,n.data):null!==a?s.compressedTexSubImage2D(s.TEXTURE_2D,t,0,0,n.width,n.height,a,n.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const n=d(e[t]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,r,i,a,u,n)}}else if(e.isDataArrayTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isData3DTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,a,u,e.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(o,0,l,a,u,t.image);else{const e=d(t.image);s.texSubImage2D(o,0,0,0,r,i,a,u,e)}}generateMipmaps(e){const{gl:t,backend:s}=this,{textureGPU:r,glTextureType:i}=s.get(e);s.state.bindTexture(i,r),t.generateMipmap(i)}deallocateRenderBuffers(e){const{gl:t,backend:s}=this;if(e){const r=s.get(e);if(r.renderBufferStorageSetup=void 0,r.framebuffers){for(const e in r.framebuffers)t.deleteFramebuffer(r.framebuffers[e]);delete r.framebuffers}if(r.depthRenderbuffer&&(t.deleteRenderbuffer(r.depthRenderbuffer),delete r.depthRenderbuffer),r.stencilRenderbuffer&&(t.deleteRenderbuffer(r.stencilRenderbuffer),delete r.stencilRenderbuffer),r.msaaFrameBuffer&&(t.deleteFramebuffer(r.msaaFrameBuffer),delete r.msaaFrameBuffer),r.msaaRenderbuffers){for(let e=0;e<r.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(r.msaaRenderbuffers[e]);delete r.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:s}=this,{textureGPU:r,renderTarget:i}=s.get(e);this.deallocateRenderBuffers(i),t.deleteTexture(r),s.delete(e)}copyTextureToTexture(e,t,s=null,r=null,i=0){const{gl:n,backend:o}=this,{state:a}=this.backend,{textureGPU:u,glTextureType:l,glType:d,glFormat:c}=o.get(t);let h,p,g,m,f,x;null!==s?(h=s.max.x-s.min.x,p=s.max.y-s.min.y,g=s.min.x,m=s.min.y):(h=e.image.width,p=e.image.height,g=0,m=0),null!==r?(f=r.x,x=r.y):(f=0,x=0),a.bindTexture(l,u),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment);const y=n.getParameter(n.UNPACK_ROW_LENGTH),T=n.getParameter(n.UNPACK_IMAGE_HEIGHT),b=n.getParameter(n.UNPACK_SKIP_PIXELS),_=n.getParameter(n.UNPACK_SKIP_ROWS),N=n.getParameter(n.UNPACK_SKIP_IMAGES),v=e.isCompressedTexture?e.mipmaps[i]:e.image;n.pixelStorei(n.UNPACK_ROW_LENGTH,v.width),n.pixelStorei(n.UNPACK_IMAGE_HEIGHT,v.height),n.pixelStorei(n.UNPACK_SKIP_PIXELS,g),n.pixelStorei(n.UNPACK_SKIP_ROWS,m),e.isDataTexture?n.texSubImage2D(n.TEXTURE_2D,i,f,x,h,p,c,d,v.data):e.isCompressedTexture?n.compressedTexSubImage2D(n.TEXTURE_2D,i,f,x,v.width,v.height,c,v.data):n.texSubImage2D(n.TEXTURE_2D,i,f,x,h,p,c,d,v),n.pixelStorei(n.UNPACK_ROW_LENGTH,y),n.pixelStorei(n.UNPACK_IMAGE_HEIGHT,T),n.pixelStorei(n.UNPACK_SKIP_PIXELS,b),n.pixelStorei(n.UNPACK_SKIP_ROWS,_),n.pixelStorei(n.UNPACK_SKIP_IMAGES,N),0===i&&t.generateMipmaps&&n.generateMipmap(n.TEXTURE_2D),a.unbindTexture()}copyFramebufferToTexture(e,t){const{gl:s}=this,{state:r}=this.backend,{textureGPU:i}=this.backend.get(e),n=e.image.width,o=e.image.height;if(!0===e.isDepthTexture||t.renderTarget&&t.renderTarget.samples>0){let a,u;!0===e.isDepthTexture?(a=s.DEPTH_BUFFER_BIT,u=s.DEPTH_ATTACHMENT,t.stencil&&(a|=s.STENCIL_BUFFER_BIT)):(a=s.COLOR_BUFFER_BIT,u=s.COLOR_ATTACHMENT0);const l=s.createFramebuffer();r.bindFramebuffer(s.DRAW_FRAMEBUFFER,l),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,u,s.TEXTURE_2D,i,0),s.blitFramebuffer(0,0,n,o,0,0,n,o,a,s.NEAREST),s.deleteFramebuffer(l)}else r.bindTexture(s.TEXTURE_2D,i),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,0,0,n,o),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:s}=this,r=t.renderTarget,{samples:i,depthTexture:n,depthBuffer:o,stencilBuffer:a,width:u,height:l}=r;if(s.bindRenderbuffer(s.RENDERBUFFER,e),o&&!a){let t=s.DEPTH_COMPONENT24;i>0?(n&&n.isDepthTexture&&n.type===s.FLOAT&&(t=s.DEPTH_COMPONENT32F),s.renderbufferStorageMultisample(s.RENDERBUFFER,i,t,u,l)):s.renderbufferStorage(s.RENDERBUFFER,t,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,e)}else o&&a&&(i>0?s.renderbufferStorageMultisample(s.RENDERBUFFER,i,s.DEPTH24_STENCIL8,u,l):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,s,r,i,n){const{backend:o,gl:a}=this,{textureGPU:u,glFormat:l,glType:d}=this.backend.get(e),c=a.createFramebuffer();a.bindFramebuffer(a.READ_FRAMEBUFFER,c);const h=e.isCubeTexture?a.TEXTURE_CUBE_MAP_POSITIVE_X+n:a.TEXTURE_2D;a.framebufferTexture2D(a.READ_FRAMEBUFFER,a.COLOR_ATTACHMENT0,h,u,0);const p=this._getTypedArrayType(d),g=r*i*this._getBytesPerTexel(d,l),m=a.createBuffer();a.bindBuffer(a.PIXEL_PACK_BUFFER,m),a.bufferData(a.PIXEL_PACK_BUFFER,g,a.STREAM_READ),a.readPixels(t,s,r,i,l,d,0),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),await o.utils._clientWaitAsync();const f=new p(g/p.BYTES_PER_ELEMENT);return a.bindBuffer(a.PIXEL_PACK_BUFFER,m),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,f),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),a.deleteFramebuffer(c),f}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:s}=this;let r=0;return e===s.UNSIGNED_BYTE&&(r=1),e!==s.UNSIGNED_SHORT_4_4_4_4&&e!==s.UNSIGNED_SHORT_5_5_5_1&&e!==s.UNSIGNED_SHORT_5_6_5&&e!==s.UNSIGNED_SHORT&&e!==s.HALF_FLOAT||(r=2),e!==s.UNSIGNED_INT&&e!==s.FLOAT||(r=4),t===s.RGBA?4*r:t===s.RGB?3*r:t===s.ALPHA?r:void 0}}class aS{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return void 0===t&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class uS{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const lS={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class dS{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:s,mode:r,object:i,type:n,info:o,index:a}=this;0!==a?s.drawElements(r,t,n,e):s.drawArrays(r,e,t),o.update(i,t,r,1)}renderInstances(e,t,s){const{gl:r,mode:i,type:n,index:o,object:a,info:u}=this;0!==s&&(0!==o?r.drawElementsInstanced(i,t,n,e,s):r.drawArraysInstanced(i,e,t,s),u.update(a,t,i,s))}renderMultiDraw(e,t,s){const{extensions:r,mode:i,object:n,info:o}=this;if(0===s)return;const a=r.get("WEBGL_multi_draw");if(null===a)for(let r=0;r<s;r++)this.render(e[r],t[r]);else{0!==this.index?a.multiDrawElementsWEBGL(i,t,0,this.type,e,0,s):a.multiDrawArraysWEBGL(i,e,0,t,0,s);let r=0;for(let e=0;e<s;e++)r+=t[e];o.update(n,r,i,1)}}renderMultiDrawInstances(e,t,s,r){const{extensions:i,mode:n,object:o,info:a}=this;if(0===s)return;const u=i.get("WEBGL_multi_draw");if(null===u)for(let i=0;i<s;i++)this.renderInstances(e[i],t[i],r[i]);else{0!==this.index?u.multiDrawElementsInstancedWEBGL(n,t,0,this.type,e,0,r,0,s):u.multiDrawArraysInstancedWEBGL(n,e,0,t,0,r,0,s);let i=0;for(let e=0;e<s;e++)i+=t[e];for(let e=0;e<r.length;e++)a.update(o,i,n,r[e])}}}class cS extends qv{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,s=void 0!==t.context?t.context:e.domElement.getContext("webgl2");this.gl=s,this.extensions=new aS(this),this.capabilities=new uS(this),this.attributeUtils=new Yv(this),this.textureUtils=new oS(this),this.bufferRenderer=new dS(this),this.state=new eS(this),this.utils=new tS(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=!0===t.trackTimestamp,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._currentContext=null}get coordinateSystem(){return T}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning)return t.queryQueue||(t.queryQueue=[]),void t.queryQueue.push(e);t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),null!==t.activeQuery&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const e=t.queryQueue.shift();this.initTimestampQuery(e)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const s=this.get(e);s.gpuQueries||(s.gpuQueries=[]);for(let e=0;e<s.gpuQueries.length;e++){const r=s.gpuQueries[e],i=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT_AVAILABLE),n=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(i&&!n){const i=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT),n=Number(i)/1e6;this.gl.deleteQuery(r.query),s.gpuQueries.splice(e,1),e--,this.renderer.info.updateTimestamp(t,n)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,s=this.get(e);if(this.initTimestampQuery(e),s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:s,y:r,width:i,height:n}=e.scissorValue;t.scissor(s,e.height-n-r,i,n)}const r=e.occlusionQueryCount;r>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(r),s.occlusionQueryObjects=new Array(r),s.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:s}=this,r=this.get(e),i=r.previousContext,n=e.occlusionQueryCount;n>0&&(n>r.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const o=e.textures;if(null!==o)for(let e=0;e<o.length;e++){const t=o[e];t.generateMipmaps&&this.generateMipmaps(t)}if(this._currentContext=i,null!==e.textures&&e.renderTarget){const r=this.get(e.renderTarget),{samples:i}=e.renderTarget;if(i>0){const i=r.framebuffers[e.getCacheKey()],n=t.COLOR_BUFFER_BIT,o=r.msaaFrameBuffer,a=e.textures;s.bindFramebuffer(t.READ_FRAMEBUFFER,o),s.bindFramebuffer(t.DRAW_FRAMEBUFFER,i);for(let s=0;s<a.length;s++)if(e.scissor){const{x:s,y:i,width:o,height:a}=e.scissorValue,u=e.height-a-i;t.blitFramebuffer(s,u,s+o,u+a,s,u,s+o,u+a,n,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray,s,u,o,a)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,n,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray)}}null!==i&&(this._setFramebuffer(i),i.viewport?this.updateViewport(i):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet,{gl:i}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const n=()=>{let o=0;for(let t=0;t<s.length;t++){const n=s[t];null!==n&&(i.getQueryParameter(n,i.QUERY_RESULT_AVAILABLE)&&(i.getQueryParameter(n,i.QUERY_RESULT)>0&&e.add(r[t]),s[t]=null,i.deleteQuery(n),o++))}o<s.length?requestAnimationFrame(n):t.occluded=e};n()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const t=this.gl,{x:s,y:r,width:i,height:n}=e.viewportValue;t.viewport(s,e.height-n-r,i,n)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,s,r=null,i=!0){const{gl:n}=this;null===r&&(r={textures:null,clearColorValue:this.getClearColor()});let o=0;if(e&&(o|=n.COLOR_BUFFER_BIT),t&&(o|=n.DEPTH_BUFFER_BIT),s&&(o|=n.STENCIL_BUFFER_BIT),0!==o){const a=r.clearColorValue||this.getClearColor();if(a.r*=a.a,a.g*=a.a,a.b*=a.a,t&&this.state.setDepthMask(!0),null===r.textures)n.clearColor(a.r,a.g,a.b,a.a),n.clear(o);else{if(i&&this._setFramebuffer(r),e)for(let e=0;e<r.textures.length;e++)n.clearBufferfv(n.COLOR,e,[a.r,a.g,a.b,a.a]);t&&s?n.clearBufferfi(n.DEPTH_STENCIL,0,1,0):t?n.clearBufferfv(n.DEPTH,0,[1]):s&&n.clearBufferiv(n.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:s}=this;t.bindFramebuffer(s.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,s,r){const{state:i,gl:n}=this;this.discard||(n.enable(n.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:o,transformBuffers:a,attributes:u}=this.get(r),l=this._getVaoKey(null,u),d=this.vaoCache[l];void 0===d?this._createVao(null,u):n.bindVertexArray(d),i.useProgram(o),this._bindUniforms(s);const c=this._getTransformFeedback(a);n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,c),n.beginTransformFeedback(n.POINTS),u[0].isStorageInstancedBufferAttribute?n.drawArraysInstanced(n.POINTS,0,1,t.count):n.drawArrays(n.POINTS,0,t.count),n.endTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null);for(let e=0;e<a.length;e++){const t=a[e];t.pbo&&this.textureUtils.copyBufferToTexture(t.transformBuffer,t.pbo),t.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e)}draw(e){const{object:t,pipeline:s,material:r,context:i}=e,{programGPU:n}=this.get(s),{gl:o,state:a}=this,u=this.get(i),l=e.getDrawParameters();if(null===l)return;this._bindUniforms(e.getBindings());const d=t.isMesh&&t.matrixWorld.determinant()<0;a.setMaterial(r,d),a.useProgram(n);let c=e.staticVao;if(void 0===c){const t=this._getVaoKey(e.getIndex(),e.getAttributes());if(c=this.vaoCache[t],void 0===c){let t;({vaoGPU:c,staticVao:t}=this._createVao(e.getIndex(),e.getAttributes())),t&&(e.staticVao=c)}}o.bindVertexArray(c);const h=e.getIndex(),p=u.lastOcclusionObject;if(p!==t&&void 0!==p){if(null!==p&&!0===p.occlusionTest&&(o.endQuery(o.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),!0===t.occlusionTest){const e=o.createQuery();o.beginQuery(o.ANY_SAMPLES_PASSED,e),u.occlusionQueries[u.occlusionQueryIndex]=e,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}const g=this.bufferRenderer;t.isPoints?g.mode=o.POINTS:t.isLineSegments?g.mode=o.LINES:t.isLine?g.mode=o.LINE_STRIP:t.isLineLoop?g.mode=o.LINE_LOOP:!0===r.wireframe?(a.setLineWidth(r.wireframeLinewidth*this.renderer.getPixelRatio()),g.mode=o.LINES):g.mode=o.TRIANGLES;const{vertexCount:m,instanceCount:f}=l;let{firstVertex:x}=l;if(g.object=t,null!==h){x*=h.array.BYTES_PER_ELEMENT;const e=this.get(h);g.index=h.count,g.type=e.type}else g.index=0;t.isBatchedMesh?null!==t._multiDrawInstances?g.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?g.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Ts("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):f>1?g.renderInstances(x,m,f):g.render(x,m),o.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,i,n){return this.textureUtils.copyTextureToBuffer(e,t,s,r,i,n)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new $v(e,t)}createProgram(e){const t=this.gl,{stage:s,code:r}=e,i="fragment"===s?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(i,r),t.compileShader(i),this.set(e,{shaderGPU:i})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const s=this.gl,r=e.pipeline,{fragmentProgram:i,vertexProgram:n}=r,o=s.createProgram(),a=this.get(i).shaderGPU,u=this.get(n).shaderGPU;if(s.attachShader(o,a),s.attachShader(o,u),s.linkProgram(o),this.set(r,{programGPU:o,fragmentShader:a,vertexShader:u}),null!==t&&this.parallel){const i=new Promise((t=>{const i=this.parallel,n=()=>{s.getProgramParameter(o,i.COMPLETION_STATUS_KHR)?(this._completeCompile(e,r),t()):requestAnimationFrame(n)};n()}));t.push(i)}else this._completeCompile(e,r)}_handleSource(e,t){const s=e.split("\n"),r=[],i=Math.max(t-6,0),n=Math.min(t+6,s.length);for(let e=i;e<n;e++){const i=e+1;r.push(`${i===t?">":" "} ${i}: ${s[e]}`)}return r.join("\n")}_getShaderErrors(e,t,s){const r=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";const n=/ERROR: 0:(\d+)/.exec(i);if(n){const r=parseInt(n[1]);return s.toUpperCase()+"\n\n"+i+"\n\n"+this._handleSource(e.getShaderSource(t),r)}return i}_logProgramError(e,t,s){if(this.renderer.debug.checkShaderErrors){const r=this.gl,i=r.getProgramInfoLog(e).trim();if(!1===r.getProgramParameter(e,r.LINK_STATUS))if("function"==typeof this.renderer.debug.onShaderError)this.renderer.debug.onShaderError(r,e,s,t);else{const n=this._getShaderErrors(r,s,"vertex"),o=this._getShaderErrors(r,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(e,r.VALIDATE_STATUS)+"\n\nProgram Info Log: "+i+"\n"+n+"\n"+o)}else""!==i&&console.warn("THREE.WebGLProgram: Program Info Log:",i)}}_completeCompile(e,t){const{state:s,gl:r}=this,i=this.get(t),{programGPU:n,fragmentShader:o,vertexShader:a}=i;!1===r.getProgramParameter(n,r.LINK_STATUS)&&this._logProgramError(n,o,a),s.useProgram(n);const u=e.getBindings();this._setupBindings(u,n),this.set(t,{programGPU:n})}createComputePipeline(e,t){const{state:s,gl:r}=this,i={stage:"fragment",code:"#version 300 es\nprecision highp float;\nvoid main() {}"};this.createProgram(i);const{computeProgram:n}=e,o=r.createProgram(),a=this.get(i).shaderGPU,u=this.get(n).shaderGPU,l=n.transforms,d=[],c=[];for(let e=0;e<l.length;e++){const t=l[e];d.push(t.varyingName),c.push(t.attributeNode)}r.attachShader(o,a),r.attachShader(o,u),r.transformFeedbackVaryings(o,d,r.SEPARATE_ATTRIBS),r.linkProgram(o),!1===r.getProgramParameter(o,r.LINK_STATUS)&&this._logProgramError(o,a,u),s.useProgram(o),this.createBindings(null,t),this._setupBindings(t,o);const h=n.attributes,p=[],g=[];for(let e=0;e<h.length;e++){const t=h[e].node.attribute;p.push(t),this.has(t)||this.attributeUtils.createAttribute(t,r.ARRAY_BUFFER)}for(let e=0;e<c.length;e++){const t=c[e].attribute;this.has(t)||this.attributeUtils.createAttribute(t,r.ARRAY_BUFFER);const s=this.get(t);g.push(s)}this.set(e,{programGPU:o,transformBuffers:g,attributes:p})}createBindings(e,t){this.updateBindings(e,t)}updateBindings(e,t){const{state:s,gl:r}=this;let i=0,n=0;for(const e of t)for(const t of e.bindings)if(t.isUniformsGroup||t.isUniformBuffer){const e=r.createBuffer(),n=t.buffer;r.bindBuffer(r.UNIFORM_BUFFER,e),r.bufferData(r.UNIFORM_BUFFER,n,r.DYNAMIC_DRAW),s.bindBufferBase(r.UNIFORM_BUFFER,i,e),this.set(t,{index:i++,bufferGPU:e})}else if(t.isSampledTexture){const{textureGPU:e,glTextureType:s}=this.get(t.texture);this.set(t,{index:n++,textureGPU:e,glTextureType:s})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(lS).filter((t=>lS[t]===e)),s=this.extensions;for(let e=0;e<t.length;e++)if(s.has(t[e]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,s,r){this.textureUtils.copyTextureToTexture(e,t,s,r)}copyFramebufferToTexture(e,t){this.textureUtils.copyFramebufferToTexture(e,t)}_setFramebuffer(e){const{gl:t,state:s}=this;let r=null;if(null!==e.textures){const i=e.renderTarget,n=this.get(i),{samples:o,depthBuffer:a,stencilBuffer:u}=i,l=!0===i.isWebGLCubeRenderTarget;let d=n.msaaFrameBuffer,c=n.depthRenderbuffer;const h=ov(e);let p;if(l?(n.cubeFramebuffers||(n.cubeFramebuffers={}),p=n.cubeFramebuffers[h]):(n.framebuffers||(n.framebuffers={}),p=n.framebuffers[h]),void 0===p){p=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,p);const r=e.textures;if(l){n.cubeFramebuffers[h]=p;const{textureGPU:e}=this.get(r[0]),s=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+s,e,0)}else{n.framebuffers[h]=p;for(let s=0;s<r.length;s++){const i=r[s],n=this.get(i);n.renderTarget=e.renderTarget;const o=t.COLOR_ATTACHMENT0+s;t.framebufferTexture2D(t.FRAMEBUFFER,o,t.TEXTURE_2D,n.textureGPU,0)}s.drawBuffers(e,p)}if(null!==e.depthTexture){const s=this.get(e.depthTexture),r=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTexture2D(t.FRAMEBUFFER,r,t.TEXTURE_2D,s.textureGPU,0)}}if(o>0){if(void 0===d){const r=[];d=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,d);const i=[],l=e.textures;for(let s=0;s<l.length;s++){if(i[s]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,i[s]),r.push(t.COLOR_ATTACHMENT0+s),a){const e=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(e)}const n=e.textures[s],l=this.get(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,o,l.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+s,t.RENDERBUFFER,i[s])}if(n.msaaFrameBuffer=d,n.msaaRenderbuffers=i,void 0===c){c=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(c,e),n.depthRenderbuffer=c;const s=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(s)}n.invalidationArray=r}r=n.msaaFrameBuffer}else r=p}s.bindFramebuffer(t.FRAMEBUFFER,r)}_getVaoKey(e,t){let s=[];if(null!==e){s+=":"+this.get(e).id}for(let e=0;e<t.length;e++){s+=":"+this.get(t[e]).id}return s}_createVao(e,t){const{gl:s}=this,r=s.createVertexArray();let i="",n=!0;if(s.bindVertexArray(r),null!==e){const t=this.get(e);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.bufferGPU),i+=":"+t.id}for(let e=0;e<t.length;e++){const r=t[e],o=this.get(r);let a,u;i+=":"+o.id,s.bindBuffer(s.ARRAY_BUFFER,o.bufferGPU),s.enableVertexAttribArray(e),(r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute)&&(n=!1),!0===r.isInterleavedBufferAttribute?(a=r.data.stride*o.bytesPerElement,u=r.offset*o.bytesPerElement):(a=0,u=0),o.isInteger?s.vertexAttribIPointer(e,r.itemSize,o.type,a,u):s.vertexAttribPointer(e,r.itemSize,o.type,r.normalized,a,u),r.isInstancedBufferAttribute&&!r.isInterleavedBufferAttribute?s.vertexAttribDivisor(e,r.meshPerAttribute):r.isInterleavedBufferAttribute&&r.data.isInstancedInterleavedBuffer&&s.vertexAttribDivisor(e,r.data.meshPerAttribute)}return s.bindBuffer(s.ARRAY_BUFFER,null),this.vaoCache[i]=r,{vaoGPU:r,staticVao:n}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let s=this.transformFeedbackCache[t];if(void 0!==s)return s;const{gl:r}=this;s=r.createTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,s);for(let t=0;t<e.length;t++){const s=e[t];r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,t,s.transformBuffer)}return r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=s,s}_setupBindings(e,t){const s=this.gl;for(const r of e)for(const e of r.bindings){const r=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const i=s.getUniformBlockIndex(t,e.name);s.uniformBlockBinding(t,i,r)}else if(e.isSampledTexture){const i=s.getUniformLocation(t,e.name);s.uniform1i(i,r)}}}_bindUniforms(e){const{gl:t,state:s}=this;for(const r of e)for(const e of r.bindings){const r=this.get(e),i=r.index;e.isUniformsGroup||e.isUniformBuffer?s.bindBufferBase(t.UNIFORM_BUFFER,i,r.bufferGPU):e.isSampledTexture&&s.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+i)}}}class hS extends Av{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class pS extends hS{constructor(e,t,s){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s}update(){this.texture=this.textureNode.value}}class gS extends Cv{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let mS=0;class fS extends gS{constructor(e,t){super("StorageBuffer_"+mS++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:oy,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class xS extends Cg{constructor(e){super(),this.device=e;this.mipmapSampler=e.createSampler({minFilter:Mx}),this.flipYSampler=e.createSampler({minFilter:Bx}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ux,stripIndexFormat:Rx},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ux,stripIndexFormat:Rx},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const r=t.format,{width:i,height:n}=t.size,o=this.getTransferPipeline(r),a=this.getFlipYPipeline(r),u=this.device.createTexture({size:{width:i,height:n,depthOrArrayLayers:1},format:r,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:xy,baseArrayLayer:s}),d=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:xy,baseArrayLayer:0}),c=this.device.createCommandEncoder({}),h=(e,t,s)=>{const r=e.getBindGroupLayout(0),i=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),n=c.beginRenderPass({colorAttachments:[{view:s,loadOp:Tx,storeOp:xx,clearValue:[0,0,0,0]}]});n.setPipeline(e),n.setBindGroup(0,i),n.draw(4,1,0,0),n.end()};h(o,l,d),h(a,d,l),this.device.queue.submit([c.finish()]),u.destroy()}generateMipmaps(e,t,s=0){const r=this.get(e);void 0===r.useCount&&(r.useCount=0,r.layers=[]);const i=r.layers[s]||this._mipmapCreateBundles(e,t,s),n=this.device.createCommandEncoder({});this._mipmapRunBundles(n,i),this.device.queue.submit([n.finish()]),0!==r.useCount&&(r.layers[s]=i),r.useCount++}_mipmapCreateBundles(e,t,s){const r=this.getTransferPipeline(t.format),i=r.getBindGroupLayout(0);let n=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:xy,baseArrayLayer:s});const o=[];for(let a=1;a<t.mipLevelCount;a++){const u=this.device.createBindGroup({layout:i,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:n}]}),l=e.createView({baseMipLevel:a,mipLevelCount:1,dimension:xy,baseArrayLayer:s}),d={colorAttachments:[{view:l,loadOp:Tx,storeOp:xx,clearValue:[0,0,0,0]}]},c=this.device.createRenderBundleEncoder({colorFormats:[t.format]});c.setPipeline(r),c.setBindGroup(0,u),c.draw(4,1,0,0),o.push({renderBundles:[c.finish()],passDescriptor:d}),n=l}return o}_mipmapRunBundles(e,t){const s=t.length;for(let r=0;r<s;r++){const s=t[r],i=e.beginRenderPass(s.passDescriptor);i.executeBundles(s.renderBundles),i.end()}}}const yS={[hs]:"never",[Be]:"less",[ms]:"equal",[gs]:"less-equal",[xs]:"greater",[fs]:"greater-equal",[ps]:"always",[ys]:"not-equal"},TS=[0,1,3,2,4,5];class bS{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new U,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,r=t.get(e),i={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:e.anisotropy};e.isDepthTexture&&null!==e.compareFunction&&(i.compare=yS[e.compareFunction]),r.sampler=s.createSampler(i)}createDefaultTexture(e){let t;const s=_S(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(s):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(s),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,r=s.get(e);if(r.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:i,height:n,depth:o,levels:a}=t,u=this._getDimension(e),l=e.internalFormat||t.format||_S(e,s.device);r.format=l;let d=void 0!==t.sampleCount?t.sampleCount:1;d=s.utils.getSampleCount(d);const c=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:d;let h=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(h|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&!0!==e.isCompressedArrayTexture&&(h|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:i,height:n,depthOrArrayLayers:o},mipLevelCount:a,sampleCount:c,dimension:u,format:l,usage:h};if(e.isVideoTexture){const t=e.source.data,s=new VideoFrame(t);p.size.width=s.displayWidth,p.size.height=s.displayHeight,s.close(),r.externalTexture=t}else{if(void 0===l)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);r.texture=s.device.createTexture(p)}if(e.isRenderTargetTexture&&d>1&&!e.isMultisampleRenderTargetTexture){const e=Object.assign({},p);e.label=e.label+"-msaa",e.sampleCount=d,r.msaaTexture=s.device.createTexture(e)}r.initialized=!0,r.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture.destroy(),void 0!==s.msaaTexture&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else{const s=e.image.depth||1;for(let e=0;e<s;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const s=this.backend,{width:r,height:i}=s.getDrawingBufferSize(),n=this.depthTexture,o=s.get(n).texture;let a,u;if(t?(a=Pe,u=Le):e&&(a=Ie,u=x),void 0!==o){if(n.image.width===r&&n.image.height===i&&n.format===a&&n.type===u)return o;this.destroyTexture(n)}return n.name="depthBuffer",n.format=a,n.type=u,n.image.width=r,n.image.height=i,this.createTexture(n,{sampleCount:s.utils.getSampleCount(s.renderer.samples),width:r,height:i}),s.get(n).texture}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:r}=s;if(!e.isRenderTargetTexture&&void 0!==r){if(e.isDataTexture)this._copyBufferToTexture(t.image,s.texture,r,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let i=0;i<t.image.depth;i++)this._copyBufferToTexture(t.image,s.texture,r,i,e.flipY,i);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,r,e.flipY);else if(e.isVideoTexture){const t=e.source.data;s.externalTexture=t}else this._copyImageToTexture(t.image,s.texture,r,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,r,i,n){const o=this.backend.device,a=this.backend.get(e),u=a.texture,l=a.textureDescriptorGPU.format,d=this._getBytesPerTexel(l);let c=r*d;c=256*Math.ceil(c/256);const h=o.createBuffer({size:r*i*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=o.createCommandEncoder();p.copyTextureToBuffer({texture:u,origin:{x:t,y:s,z:n}},{buffer:h,bytesPerRow:c},{width:r,height:i});const g=this._getTypedArrayType(l);o.queue.submit([p.finish()]),await h.mapAsync(GPUMapMode.READ);return new g(h.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===q||t===X||t===_||t===N}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const s=new te;s.minFilter=Ee,s.magFilter=Ee,this.createTexture(s,{width:1,height:1,format:e}),this.defaultTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const s=new j;s.minFilter=Ee,s.magFilter=Ee,this.createTexture(s,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(null===e){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,s,r){for(let i=0;i<6;i++){const n=e[i],o=!0===r?TS[i]:i;n.isDataTexture?this._copyBufferToTexture(n.image,t,s,o,r):this._copyImageToTexture(n,t,s,o,r)}}_copyImageToTexture(e,t,s,r,i){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===i&&this._flipY(t,s,r)}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new xS(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,r,i,n=0){const o=this.backend.device,a=e.data,u=this._getBytesPerTexel(s.format),l=e.width*u;o.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},a,{offset:e.width*e.height*u*n,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===i&&this._flipY(t,s,r)}_copyCompressedBufferToTexture(e,t,s){const r=this.backend.device,i=this._getBlockData(s.format),n=s.size.depthOrArrayLayers>1;for(let o=0;o<e.length;o++){const a=e[o],u=a.width,l=a.height,d=n?s.size.depthOrArrayLayers:1,c=Math.ceil(u/i.width)*i.byteLength,h=c*Math.ceil(l/i.height);for(let e=0;e<d;e++)r.queue.writeTexture({texture:t,mipLevel:o,origin:{x:0,y:0,z:e}},a.data,{offset:e*h,bytesPerRow:c,rowsPerImage:Math.ceil(l/i.height)},{width:Math.ceil(u/i.width)*i.width,height:Math.ceil(l/i.height)*i.height,depthOrArrayLayers:1})}}_getBlockData(e){return e===Ax.BC1RGBAUnorm||e===Ax.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:e===Ax.BC2RGBAUnorm||e===Ax.BC2RGBAUnormSRGB||e===Ax.BC3RGBAUnorm||e===Ax.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Ax.BC4RUnorm||e===Ax.BC4RSNorm?{byteLength:8,width:4,height:4}:e===Ax.BC5RGUnorm||e===Ax.BC5RGSnorm||e===Ax.BC6HRGBUFloat||e===Ax.BC6HRGBFloat||e===Ax.BC7RGBAUnorm||e===Ax.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Ax.ETC2RGB8Unorm||e===Ax.ETC2RGB8UnormSRGB||e===Ax.ETC2RGB8A1Unorm||e===Ax.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:e===Ax.ETC2RGBA8Unorm||e===Ax.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:e===Ax.EACR11Unorm||e===Ax.EACR11Snorm?{byteLength:8,width:4,height:4}:e===Ax.EACRG11Unorm||e===Ax.EACRG11Snorm||e===Ax.ASTC4x4Unorm||e===Ax.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:e===Ax.ASTC5x4Unorm||e===Ax.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:e===Ax.ASTC5x5Unorm||e===Ax.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:e===Ax.ASTC6x5Unorm||e===Ax.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:e===Ax.ASTC6x6Unorm||e===Ax.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:e===Ax.ASTC8x5Unorm||e===Ax.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:e===Ax.ASTC8x6Unorm||e===Ax.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:e===Ax.ASTC8x8Unorm||e===Ax.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:e===Ax.ASTC10x5Unorm||e===Ax.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:e===Ax.ASTC10x6Unorm||e===Ax.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:e===Ax.ASTC10x8Unorm||e===Ax.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:e===Ax.ASTC10x10Unorm||e===Ax.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:e===Ax.ASTC12x10Unorm||e===Ax.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:e===Ax.ASTC12x12Unorm||e===Ax.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=Cx;return e===Ce?t=Ex:e===ds&&(t=wx),t}_convertFilterMode(e){let t=Mx;return e!==Ee&&e!==cs&&e!==be||(t=Bx),t}_getBytesPerTexel(e){return e===Ax.R8Unorm||e===Ax.R8Snorm||e===Ax.R8Uint||e===Ax.R8Sint?1:e===Ax.R16Uint||e===Ax.R16Sint||e===Ax.R16Float||e===Ax.RG8Unorm||e===Ax.RG8Snorm||e===Ax.RG8Uint||e===Ax.RG8Sint?2:e===Ax.R32Uint||e===Ax.R32Sint||e===Ax.R32Float||e===Ax.RG16Uint||e===Ax.RG16Sint||e===Ax.RG16Float||e===Ax.RGBA8Unorm||e===Ax.RGBA8UnormSRGB||e===Ax.RGBA8Snorm||e===Ax.RGBA8Uint||e===Ax.RGBA8Sint||e===Ax.BGRA8Unorm||e===Ax.BGRA8UnormSRGB||e===Ax.RGB9E5UFloat||e===Ax.RGB10A2Unorm||e===Ax.RG11B10UFloat||e===Ax.Depth32Float||e===Ax.Depth24Plus||e===Ax.Depth24PlusStencil8||e===Ax.Depth32FloatStencil8?4:e===Ax.RG32Uint||e===Ax.RG32Sint||e===Ax.RG32Float||e===Ax.RGBA16Uint||e===Ax.RGBA16Sint||e===Ax.RGBA16Float?8:e===Ax.RGBA32Uint||e===Ax.RGBA32Sint||e===Ax.RGBA32Float?16:void 0}_getTypedArrayType(e){return e===Ax.R8Uint?Uint8Array:e===Ax.R8Sint?Int8Array:e===Ax.R8Unorm?Uint8Array:e===Ax.R8Snorm?Int8Array:e===Ax.RG8Uint?Uint8Array:e===Ax.RG8Sint?Int8Array:e===Ax.RG8Unorm?Uint8Array:e===Ax.RG8Snorm?Int8Array:e===Ax.RGBA8Uint?Uint8Array:e===Ax.RGBA8Sint?Int8Array:e===Ax.RGBA8Unorm?Uint8Array:e===Ax.RGBA8Snorm?Int8Array:e===Ax.R16Uint?Uint16Array:e===Ax.R16Sint?Int16Array:e===Ax.RG16Uint?Uint16Array:e===Ax.RG16Sint?Int16Array:e===Ax.RGBA16Uint?Uint16Array:e===Ax.RGBA16Sint?Int16Array:e===Ax.R16Float||e===Ax.RG16Float||e===Ax.RGBA16Float?Uint16Array:e===Ax.R32Uint?Uint32Array:e===Ax.R32Sint?Int32Array:e===Ax.R32Float?Float32Array:e===Ax.RG32Uint?Uint32Array:e===Ax.RG32Sint?Int32Array:e===Ax.RG32Float?Float32Array:e===Ax.RGBA32Uint?Uint32Array:e===Ax.RGBA32Sint?Int32Array:e===Ax.RGBA32Float?Float32Array:e===Ax.BGRA8Unorm||e===Ax.BGRA8UnormSRGB?Uint8Array:e===Ax.RGB10A2Unorm||e===Ax.RGB9E5UFloat||e===Ax.RG11B10UFloat?Uint32Array:e===Ax.Depth32Float?Float32Array:e===Ax.Depth24Plus||e===Ax.Depth24PlusStencil8?Uint32Array:e===Ax.Depth32FloatStencil8?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?fy:my,t}}function _S(e,t=null){const s=e.format,r=e.type,i=e.colorSpace;let n;if(!0===e.isFramebufferTexture&&e.type===Ve)n=Ax.BGRA8Unorm;else if(!0===e.isCompressedTexture||!0===e.isCompressedArrayTexture)switch(s){case Pt:n=i===d?Ax.BC1RGBAUnormSRGB:Ax.BC1RGBAUnorm;break;case It:n=i===d?Ax.BC2RGBAUnormSRGB:Ax.BC2RGBAUnorm;break;case Lt:n=i===d?Ax.BC3RGBAUnormSRGB:Ax.BC3RGBAUnorm;break;case kt:n=i===d?Ax.ETC2RGB8UnormSRGB:Ax.ETC2RGB8Unorm;break;case $t:n=i===d?Ax.ETC2RGBA8UnormSRGB:Ax.ETC2RGBA8Unorm;break;case Ht:n=i===d?Ax.ASTC4x4UnormSRGB:Ax.ASTC4x4Unorm;break;case Wt:n=i===d?Ax.ASTC5x4UnormSRGB:Ax.ASTC5x4Unorm;break;case jt:n=i===d?Ax.ASTC5x5UnormSRGB:Ax.ASTC5x5Unorm;break;case qt:n=i===d?Ax.ASTC6x5UnormSRGB:Ax.ASTC6x5Unorm;break;case Xt:n=i===d?Ax.ASTC6x6UnormSRGB:Ax.ASTC6x6Unorm;break;case Kt:n=i===d?Ax.ASTC8x5UnormSRGB:Ax.ASTC8x5Unorm;break;case Yt:n=i===d?Ax.ASTC8x6UnormSRGB:Ax.ASTC8x6Unorm;break;case Qt:n=i===d?Ax.ASTC8x8UnormSRGB:Ax.ASTC8x8Unorm;break;case Zt:n=i===d?Ax.ASTC10x5UnormSRGB:Ax.ASTC10x5Unorm;break;case Jt:n=i===d?Ax.ASTC10x6UnormSRGB:Ax.ASTC10x6Unorm;break;case es:n=i===d?Ax.ASTC10x8UnormSRGB:Ax.ASTC10x8Unorm;break;case ts:n=i===d?Ax.ASTC10x10UnormSRGB:Ax.ASTC10x10Unorm;break;case ss:n=i===d?Ax.ASTC12x10UnormSRGB:Ax.ASTC12x10Unorm;break;case rs:n=i===d?Ax.ASTC12x12UnormSRGB:Ax.ASTC12x12Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",s)}else switch(s){case ye:switch(r){case Ye:n=Ax.RGBA8Snorm;break;case Qe:n=Ax.RGBA16Sint;break;case Ke:n=Ax.RGBA16Uint;break;case x:n=Ax.RGBA32Uint;break;case y:n=Ax.RGBA32Sint;break;case Ve:n=i===d?Ax.RGBA8UnormSRGB:Ax.RGBA8Unorm;break;case xe:n=Ax.RGBA16Float;break;case w:n=Ax.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",r)}break;case qe:if(r===wt)n=Ax.RGB9E5UFloat;else console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",r);break;case He:switch(r){case Ye:n=Ax.R8Snorm;break;case Qe:n=Ax.R16Sint;break;case Ke:n=Ax.R16Uint;break;case x:n=Ax.R32Uint;break;case y:n=Ax.R32Sint;break;case Ve:n=Ax.R8Unorm;break;case xe:n=Ax.R16Float;break;case w:n=Ax.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",r)}break;case Fe:switch(r){case Ye:n=Ax.RG8Snorm;break;case Qe:n=Ax.RG16Sint;break;case Ke:n=Ax.RG16Uint;break;case x:n=Ax.RG32Uint;break;case y:n=Ax.RG32Sint;break;case Ve:n=Ax.RG8Unorm;break;case xe:n=Ax.RG16Float;break;case w:n=Ax.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",r)}break;case Ie:switch(r){case Ke:n=Ax.Depth16Unorm;break;case x:n=Ax.Depth24Plus;break;case w:n=Ax.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",r)}break;case Pe:switch(r){case Le:n=Ax.Depth24PlusStencil8;break;case w:t&&!1===t.features.has(Sy.Depth32FloatStencil8)&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),n=Ax.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",r)}break;case $e:switch(r){case y:n=Ax.R32Sint;break;case x:n=Ax.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",r)}break;case We:switch(r){case y:n=Ax.RG32Sint;break;case x:n=Ax.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",r)}break;case Xe:switch(r){case y:n=Ax.RGBA32Sint;break;case x:n=Ax.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",r)}break;default:console.error("WebGPURenderer: Unsupported texture format.",s)}return n}const NS=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,vS=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/gi,SS={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"};class RS extends XN{constructor(e){const{type:t,inputs:s,name:r,inputsCode:i,blockCode:n,outputType:o}=(e=>{const t=(e=e.trim()).match(NS);if(null!==t&&4===t.length){const s=t[2],r=[];let i=null;for(;null!==(i=vS.exec(s));)r.push({name:i[1],type:i[2]});const n=[];for(let e=0;e<r.length;e++){const{name:t,type:s}=r[e];let i=s;i.startsWith("texture")&&(i=s.split("<")[0]),i=SS[i]||i,n.push(new Jm(i,t))}const o=e.substring(t[0].length),a=t[3]||"void",u=void 0!==t[1]?t[1]:"";return{type:SS[a]||a,inputs:n,name:u,inputsCode:s,blockCode:o,outputType:a}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,s,r),this.inputsCode=i,this.blockCode=n,this.outputType=o}getCode(e=this.name){const t="void"!==this.outputType?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class AS extends qN{parseFunction(e){return new RS(e)}}const CS=self.GPUShaderStage,ES={vertex:CS?CS.VERTEX:1,fragment:CS?CS.FRAGMENT:2,compute:CS?CS.COMPUTE:4},wS={instance:!0,swizzleAssign:!1,storageBuffer:!0},MS={"^^":"tsl_xor"},BS={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",imat2:"mat2x2<i32>",umat2:"mat2x2<u32>",bmat2:"mat2x2<bool>",mat3:"mat3x3<f32>",imat3:"mat3x3<i32>",umat3:"mat3x3<u32>",bmat3:"mat3x3<bool>",mat4:"mat4x4<f32>",imat4:"mat4x4<i32>",umat4:"mat4x4<u32>",bmat4:"mat4x4<bool>"},US={tsl_xor:new Jg("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new Jg("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new Jg("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new Jg("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new Jg("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new Jg("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new Jg("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new Jg("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new Jg("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping:new Jg("\nfn tsl_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {\n\n\tlet uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );\n\n\treturn ( ( uvScaled % dimension ) + dimension ) % dimension;\n\n}\n"),biquadraticTexture:new Jg("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, level : i32 ) -> vec4f {\n\n\tlet res = vec2f( textureDimensions( map, level ) );\n\n\tlet uvScaled = coord * res;\n\tlet uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n\t// https://www.shadertoy.com/view/WtyXRy\n\n\tlet uv = uvWrapping - 0.5;\n\tlet iuv = floor( uv );\n\tlet f = fract( uv );\n\n\tlet rg1 = textureLoad( map, vec2i( iuv + vec2( 0.5, 0.5 ) ), level );\n\tlet rg2 = textureLoad( map, vec2i( iuv + vec2( 1.5, 0.5 ) ), level );\n\tlet rg3 = textureLoad( map, vec2i( iuv + vec2( 0.5, 1.5 ) ), level );\n\tlet rg4 = textureLoad( map, vec2i( iuv + vec2( 1.5, 1.5 ) ), level );\n\n\treturn mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n")},FS={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(US.pow_float=new Jg("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),US.pow_vec2=new Jg("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[US.pow_float]),US.pow_vec3=new Jg("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[US.pow_float]),US.pow_vec4=new Jg("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[US.pow_float]),FS.pow_float="tsl_pow_float",FS.pow_vec2="tsl_pow_vec2",FS.pow_vec3="tsl_pow_vec3",FS.pow_vec4="tsl_pow_vec4");let PS="";!0!==/Firefox/g.test(navigator.userAgent)&&(PS+="diagnostic( off, derivative_uniformity );\n");class IS extends Qm{constructor(e,t){super(e,t,new AS),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return!0===e.isVideoTexture&&e.colorSpace!==f}_generateTextureSample(e,t,s,r,i=this.shaderStage){return"fragment"===i?r?`textureSample( ${t}, ${t}_sampler, ${s}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s):this.generateTextureLod(e,t,s,"0")}_generateVideoSample(e,t,s=this.shaderStage){if("fragment"===s)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${s} shader.`)}_generateTextureSampleLevel(e,t,s,r,i,n=this.shaderStage){return"fragment"===n&&!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${r} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,r):this.generateTextureLod(e,t,s,r)}generateFilteredTexture(e,t,s,r="0"){return this._include("biquadraticTexture"),`tsl_biquadraticTexture( ${t}, ${s}, i32( ${r} ) )`}generateTextureLod(e,t,s,r="0"){this._include("repeatWrapping");return`textureLoad( ${t}, tsl_repeatWrapping( ${s}, ${!0===e.isMultisampleRenderTargetTexture?`textureDimensions( ${t} )`:`textureDimensions( ${t}, 0 )`} ), i32( ${r} ) )`}generateTextureLoad(e,t,s,r,i="0u"){return r?`textureLoad( ${t}, ${s}, ${r}, ${i} )`:`textureLoad( ${t}, ${s}, ${i} )`}generateTextureStore(e,t,s,r){return`textureStore( ${t}, ${s}, ${r} )`}isUnfilterable(e){return"float"!==this.getComponentTypeFromTexture(e)||!this.isAvailable("float32Filterable")&&!0===e.isDataTexture&&e.type===w||!0===e.isMultisampleRenderTargetTexture}generateTexture(e,t,s,r,i=this.shaderStage){let n=null;return n=!0===e.isVideoTexture?this._generateVideoSample(t,s,i):this.isUnfilterable(e)?this.generateTextureLod(e,t,s,"0",r,i):this._generateTextureSample(e,t,s,r,i),n}generateTextureGrad(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`textureSampleGrad( ${t}, ${t}_sampler, ${s},  ${r[0]}, ${r[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${n} shader.`)}generateTextureCompare(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${n} shader.`)}generateTextureLevel(e,t,s,r,i,n=this.shaderStage){let o=null;return o=!0===e.isVideoTexture?this._generateVideoSample(t,s,n):this._generateTextureSampleLevel(e,t,s,r,i,n),o}generateTextureBias(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`textureSampleBias( ${t}, ${t}_sampler, ${s}, ${r} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${n} shader.`)}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,s=e.type;return"texture"===s||"cubeTexture"===s||"storageTexture"===s||"texture3D"===s?t:"buffer"===s||"storageBuffer"===s?`NodeBuffer_${e.id}.${t}`:e.groupNode.name+"."+t}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=MS[e];return void 0!==t?(this._include(t),t):null}getStorageAccess(e){if(e.isStorageTextureNode)switch(e.access){case ly:return"read";case uy:return"write";default:return"read_write"}else switch(e.access){case oy:return"read_write";case ay:return"read";default:return"write"}}getUniformFromNode(e,t,s,r=null){const i=super.getUniformFromNode(e,t,s,r),n=this.getDataFromNode(e,s,this.globalCache);if(void 0===n.uniformGPU){let r;const o=e.groupNode,a=o.name,u=this.getBindGroupArray(a,s);if("texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t){let n=null;if("texture"===t||"storageTexture"===t?n=new Lv(i.name,i.node,o,e.access?e.access:null):"cubeTexture"===t?n=new Vv(i.name,i.node,o,e.access?e.access:null):"texture3D"===t&&(n=new Dv(i.name,i.node,o,e.access?e.access:null)),n.store=!0===e.isStorageTextureNode,n.setVisibility(ES[s]),"fragment"===s&&!1===this.isUnfilterable(e.value)&&!1===n.store){const e=new pS(`${i.name}_sampler`,i.node,o);e.setVisibility(ES[s]),u.push(e,n),r=[e,n]}else u.push(n),r=[n]}else if("buffer"===t||"storageBuffer"===t){const i=new("storageBuffer"===t?fS:Mv)(e,o);i.setVisibility(ES[s]),u.push(i),r=i}else{const e=this.uniformGroups[s]||(this.uniformGroups[s]={});let n=e[a];void 0===n&&(n=new Fv(a,o),n.setVisibility(ES[s]),e[a]=n,u.push(n)),r=this.getNodeUniform(i,t),n.addUniform(r)}n.uniformGPU=r}return i}getBuiltin(e,t,s,r=this.shaderStage){const i=this.builtins[r]||(this.builtins[r]=new Map);return!1===i.has(e)&&i.set(e,{name:e,property:t,type:s}),t}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(e.name+" : "+this.getType(e.type));let i=`fn ${t.name}( ${r.join(", ")} ) -> ${this.getType(t.type)} {\n${s.vars}\n${s.code}\n`;return s.result&&(i+=`\treturn ${s.result};\n`),i+="\n}\n",i}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],s=this.directives[e];if(void 0!==s)for(const e of s)t.push(`enable ${e};`);return t.join("\n")}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}getBuiltins(e){const t=[],s=this.builtins[e];if(void 0!==s)for(const{name:e,property:r,type:i}of s.values())t.push(`@builtin( ${e} ) ${r} : ${i}`);return t.join(",\n\t")}getScopedArray(e,t,s,r){return!1===this.scopedArrays.has(e)&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:s,bufferCount:r}),e}getScopedArrays(e){if("compute"!==e)return;const t=[];for(const{name:e,scope:s,bufferType:r,bufferCount:i}of this.scopedArrays.values()){const n=this.getType(r);t.push(`var<${s}> ${e}: array< ${n}, ${i} >;`)}return t.join("\n")}getAttributes(e){const t=[];if("compute"===e&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute")),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const s=this.getAttributesArray();for(let e=0,r=s.length;e<r;e++){const r=s[e],i=r.name,n=this.getType(r.type);t.push(`@location( ${e} ) ${i} : ${n}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`\t@location( ${e} ) m${e} : ${r}<f32>`)}const r=this.getBuiltins("output");return r&&t.push("\t"+r),t.join(",\n")}getStructs(e){const t=[],s=this.structs[e];for(let e=0,r=s.length;e<r;e++){const r=s[e],i=r.name;let n=`struct ${i} {\n`;n+=this.getStructMembers(r),n+="\n}",t.push(n),t.push(`\nvar<private> output : ${i};\n\n`)}return t.join("\n\n")}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`\t${this.getVar(e.type,e.name)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const s=this.varyings,r=this.vars[e];for(let i=0;i<s.length;i++){const n=s[i];if(n.needsInterpolation){let e=`@location( ${i} )`;/^(int|uint|ivec|uvec)/.test(n.type)&&(e+=" @interpolate( flat )"),t.push(`${e} ${n.name} : ${this.getType(n.type)}`)}else"vertex"===e&&!1===r.includes(n)&&r.push(n)}}const s=this.getBuiltins(e);s&&t.push(s);const r=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+r):r}getUniforms(e){const t=this.uniforms[e],s=[],r=[],i=[],n={};for(const i of t){const t=i.groupNode.name,o=this.bindingsIndexes[t];if("texture"===i.type||"cubeTexture"===i.type||"storageTexture"===i.type||"texture3D"===i.type){const t=i.node.value;let r;"fragment"===e&&!1===this.isUnfilterable(t)&&!0!==i.node.isStorageTextureNode&&(!0===t.isDepthTexture&&null!==t.compareFunction?s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${i.name}_sampler : sampler_comparison;`):s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${i.name}_sampler : sampler;`));let n="";if(!0===t.isMultisampleRenderTargetTexture&&(n="_multisampled"),!0===t.isCubeTexture)r="texture_cube<f32>";else if(!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture)r="texture_2d_array<f32>";else if(!0===t.isDepthTexture)r=`texture_depth${n}_2d`;else if(!0===t.isVideoTexture)r="texture_external";else if(!0===t.isData3DTexture)r="texture_3d<f32>";else if(!0===i.node.isStorageTextureNode){r=`texture_storage_2d<${_S(t)}, ${this.getStorageAccess(i.node)}>`}else{r=`texture${n}_2d<${this.getComponentTypeFromTexture(t).charAt(0)}32>`}s.push(`@binding( ${o.binding++} ) @group( ${o.group} ) var ${i.name} : ${r};`)}else if("buffer"===i.type||"storageBuffer"===i.type){const e=i.node,t=this.getType(e.bufferType),s=e.bufferCount,n=s>0?", "+s:"",a=`\t${i.name} : array< ${t}${n} >\n`,u=e.isStorageBufferNode?`storage, ${this.getStorageAccess(e)}`:"uniform";r.push(this._getWGSLStructBinding("NodeBuffer_"+e.id,a,u,o.binding++,o.group))}else{const e=this.getType(this.getVectorType(i.type)),t=i.groupNode.name;(n[t]||(n[t]={index:o.binding++,id:o.group,snippets:[]})).snippets.push(`\t${i.name} : ${e}`)}}for(const e in n){const t=n[e];i.push(this._getWGSLStructBinding(e,t.snippets.join(",\n"),"uniform",t.index,t.id))}let o=s.join("\n");return o+=r.join("\n"),o+=i.join("\n"),o}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t),s.directives=this.getDirectives(t),s.scopedArrays=this.getScopedArrays(t);let r="// code\n\n";r+=this.flowCode[t];const i=this.flowNodes[t],n=i[i.length-1],o=n.outputNode,a=void 0!==o&&!0===o.isOutputStructNode;for(const e of i){const i=this.getFlowData(e),u=e.name;if(u&&(r.length>0&&(r+="\n"),r+=`\t// flow -> ${u}\n\t`),r+=`${i.code}\n\t`,e===n&&"compute"!==t)if(r+="// result\n\n\t","vertex"===t)r+=`varyings.Vertex = ${i.result};`;else if("fragment"===t)if(a)s.returnType=o.nodeType,r+=`return ${i.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",e),s.structs+="\nvar<private> output : OutputStruct;\n\n",r+=`output.color = ${i.result};\n\n\treturn output;`}}s.flow=r}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let s;return null!==t&&(s=this._getWGSLMethod(e+"_"+t)),void 0===s&&(s=this._getWGSLMethod(e)),s||e}getType(e){return BS[e]||e}isAvailable(e){let t=wS[e];return void 0===t&&("float32Filterable"===e&&(t=this.renderer.hasFeature("float32-filterable")),wS[e]=t),t}_getWGSLMethod(e){return void 0!==US[e]&&this._include(e),FS[e]}_include(e){const t=US[e];return t.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n// global\n${PS}\n\n// uniforms\n${e.uniforms}\n\n// structs\n${e.structs}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// system\nvar<private> instanceIndex : u32;\n\n// locals\n${e.scopedArrays}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,s,r=0,i=0){const n=e+"Struct";return`${this._getWGSLStruct(n,t)}\n@binding( ${r} ) @group( ${i} )\nvar<${s}> ${e} : ${n};`}}class LS{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=Ax.Depth24PlusStencil8:e.depth&&(t=Ax.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?ix:e.isLineSegments||e.isMesh&&!0===t.wireframe?nx:e.isLine?ox:e.isMesh?ax:void 0}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),2===t&&(t=4)),t}getSampleCountRenderContext(e){return null!==e.textures?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?Ax.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const VS=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),DS=new Map([[_e,["float16"]]]),OS=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class GS{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),r=this.backend,i=r.get(s);let n=i.buffer;if(void 0===n){const o=r.device;let a=s.array;if(!1===e.normalized&&(a.constructor===Int16Array||a.constructor===Uint16Array)){const e=new Uint32Array(a.length);for(let t=0;t<a.length;t++)e[t]=a[t];a=e}if(s.array=a,(s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute)&&3===s.itemSize){a=new a.constructor(4*s.count);for(let e=0;e<s.count;e++)a.set(s.array.subarray(3*e,3*e+3),4*e);s.itemSize=4,s.array=a}const u=a.byteLength+(4-a.byteLength%4)%4;n=o.createBuffer({label:s.name,size:u,usage:t,mappedAtCreation:!0}),new a.constructor(n.getMappedRange()).set(a),n.unmap(),i.buffer=n}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,r=s.device,i=s.get(t).buffer,n=t.array,o=t.updateRanges;if(0===o.length)r.queue.writeBuffer(i,0,n,0);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];r.queue.writeBuffer(i,0,n,t.start*n.BYTES_PER_ELEMENT,t.count*n.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let e=0;e<t.length;e++){const r=t[e],i=r.array.BYTES_PER_ELEMENT,n=this._getBufferAttribute(r);let o=s.get(n);if(void 0===o){let e,t;!0===r.isInterleavedBufferAttribute?(e=r.data.stride*i,t=r.data.isInstancedInterleavedBuffer?vy:Ny):(e=r.itemSize*i,t=r.isInstancedBufferAttribute?vy:Ny),!1!==r.normalized||r.array.constructor!==Int16Array&&r.array.constructor!==Uint16Array||(e=4),o={arrayStride:e,attributes:[],stepMode:t},s.set(n,o)}const a=this._getVertexFormat(r),u=!0===r.isInterleavedBufferAttribute?r.offset*i:0;o.attributes.push({shaderLocation:e,offset:u,format:a})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)).buffer,i=r.size,n=s.createBuffer({label:e.name,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),o=s.createCommandEncoder({});o.copyBufferToBuffer(r,0,n,0,i),n.unmap();const a=o.finish();s.queue.submit([a]),await n.mapAsync(GPUMapMode.READ);return n.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,r=e.array.constructor,i=e.constructor;let n;if(1==t)n=OS.get(r);else{const e=(DS.get(i)||VS.get(r))[s?1:0];if(e){const s=r.BYTES_PER_ELEMENT*t,i=4*Math.floor((s+3)/4)/r.BYTES_PER_ELEMENT;if(i%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");n=`${e}x${i}`}}return n||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),n}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class zS{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend.device,s=[];let r=0;for(const t of e.bindings){const e={binding:r++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const s={};t.isStorageBuffer&&(s.type=t.access),e.buffer=s}else if(t.isSampler){const s={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(s.type="comparison"),e.sampler=s}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const s=this.backend.get(t.texture).texture.format,r=t.access;e.storageTexture={format:s,access:r}}else if(t.isSampledTexture){const s={};if(!0===t.texture.isMultisampleRenderTargetTexture&&(s.multisampled=!0),t.texture.isDepthTexture)s.sampleType=hy;else if(t.texture.isDataTexture||t.texture.isDataArrayTexture||t.texture.isData3DTexture){const e=t.texture.type;e===y?s.sampleType=py:e===x?s.sampleType=gy:e===w&&(this.backend.hasFeature("float32-filterable")?s.sampleType=dy:s.sampleType=cy)}t.isSampledCubeTexture?s.viewDimension=Ty:t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?s.viewDimension=yy:t.isSampledTexture3D&&(s.viewDimension=by),e.texture=s}else console.error(`WebGPUBindingUtils: Unsupported binding "${t}".`);s.push(e)}return t.createBindGroupLayout({entries:s})}createBindings(e){const{backend:t,bindGroupLayoutCache:s}=this,r=t.get(e);let i=s.get(e.bindingsReference);void 0===i&&(i=this.createBindingsLayout(e),s.set(e.bindingsReference,i));const n=this.createBindGroup(e,i);r.layout=i,r.group=n}updateBinding(e){const t=this.backend,s=t.device,r=e.buffer,i=t.get(e).buffer;s.queue.writeBuffer(i,0,r,0)}createBindGroup(e,t){const s=this.backend,r=s.device;let i=0;const n=[];for(const t of e.bindings){if(t.isUniformBuffer){const e=s.get(t);if(void 0===e.buffer){const s=t.byteLength,i=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,n=r.createBuffer({label:"bindingBuffer_"+t.name,size:s,usage:i});e.buffer=n}n.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=s.get(t);if(void 0===e.buffer){const r=t.attribute;e.buffer=s.get(r).buffer}n.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=s.get(t.texture);n.push({binding:i,resource:e.sampler})}else if(t.isSampledTexture){const e=s.get(t.texture);let o;if(void 0!==e.externalTexture)o=r.importExternalTexture({source:e.externalTexture});else{const s=t.store?1:e.texture.mipLevelCount,r=`view-${e.texture.width}-${e.texture.height}-${s}`;if(o=e[r],void 0===o){const i=_y;let n;n=t.isSampledCubeTexture?Ty:t.isSampledTexture3D?by:t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?yy:xy,o=e[r]=e.texture.createView({aspect:i,dimension:n,mipLevelCount:s})}}n.push({binding:i,resource:o})}i++}return r.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:n})}}class kS{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:s,material:r,geometry:i,pipeline:n}=e,{vertexProgram:o,fragmentProgram:a}=n,u=this.backend,l=u.device,d=u.utils,c=u.get(n),h=[];for(const t of e.getBindings()){const e=u.get(t);h.push(e.layout)}const p=u.attributeUtils.createShaderVertexBuffers(e);let g;!0===r.transparent&&r.blending!==z&&(g=this._getBlending(r));let m={};!0===r.stencilWrite&&(m={compare:this._getStencilCompare(r),failOp:this._getStencilOperation(r.stencilFail),depthFailOp:this._getStencilOperation(r.stencilZFail),passOp:this._getStencilOperation(r.stencilZPass)});const f=this._getColorWriteMask(r),x=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const s=d.getTextureFormatGPU(t[e]);x.push({format:s,blend:g,writeMask:f})}}else{const t=d.getCurrentColorFormat(e.context);x.push({format:t,blend:g,writeMask:f})}const y=u.get(o).module,T=u.get(a).module,b=this._getPrimitiveState(s,i,r),_=this._getDepthCompare(r),N=d.getCurrentDepthStencilFormat(e.context),v=this._getSampleCount(e.context),S={label:`renderPipeline_${r.name||r.type}_${r.id}`,vertex:Object.assign({},y,{buffers:p}),fragment:Object.assign({},T,{targets:x}),primitive:b,depthStencil:{format:N,depthWriteEnabled:r.depthWrite,depthCompare:_,stencilFront:m,stencilBack:{},stencilReadMask:r.stencilFuncMask,stencilWriteMask:r.stencilWriteMask},multisample:{count:v,alphaToCoverageEnabled:r.alphaToCoverage},layout:l.createPipelineLayout({bindGroupLayouts:h})};if(null===t)c.pipeline=l.createRenderPipeline(S);else{const e=new Promise((e=>{l.createRenderPipelineAsync(S).then((t=>{c.pipeline=t,e()}))}));t.push(e)}}createBundleEncoder(e){const t=this.backend,{utils:s,device:r}=t,i=s.getCurrentDepthStencilFormat(e),n={label:"renderBundleEncoder",colorFormats:[s.getCurrentColorFormat(e)],depthStencilFormat:i,sampleCount:this._getSampleCount(e)};return r.createRenderBundleEncoder(n)}createComputePipeline(e,t){const s=this.backend,r=s.device,i=s.get(e.computeProgram).module,n=s.get(e),o=[];for(const e of t){const t=s.get(e);o.push(t.layout)}n.pipeline=r.createComputePipeline({compute:i,layout:r.createPipelineLayout({bindGroupLayouts:o})})}_getBlending(e){let t,s;const r=e.blending,i=e.blendSrc,n=e.blendDst,o=e.blendEquation;if(r===ft){const r=null!==e.blendSrcAlpha?e.blendSrcAlpha:i,a=null!==e.blendDstAlpha?e.blendDstAlpha:n,u=null!==e.blendEquationAlpha?e.blendEquationAlpha:o;t={srcFactor:this._getBlendFactor(i),dstFactor:this._getBlendFactor(n),operation:this._getBlendOperation(o)},s={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(a),operation:this._getBlendOperation(u)}}else{const i=(e,r,i,n)=>{t={srcFactor:e,dstFactor:r,operation:Wx},s={srcFactor:i,dstFactor:n,operation:Wx}};if(e.premultipliedAlpha)switch(r){case P:i(Fx,Vx,Fx,Vx);break;case we:i(Fx,Fx,Fx,Fx);break;case yt:i(Ux,Ix,Ux,Fx);break;case xt:i(Ux,Px,Ux,Lx)}else switch(r){case P:i(Lx,Vx,Fx,Vx);break;case we:i(Lx,Fx,Lx,Fx);break;case yt:i(Ux,Ix,Ux,Fx);break;case xt:i(Ux,Px,Ux,Px)}}if(void 0!==t&&void 0!==s)return{color:t,alpha:s};console.error("THREE.WebGPURenderer: Invalid blending: ",r)}_getBlendFactor(e){let t;switch(e){case st:t=Ux;break;case rt:t=Fx;break;case it:t=Px;break;case lt:t=Ix;break;case nt:t=Lx;break;case dt:t=Vx;break;case at:t=Dx;break;case ct:t=Ox;break;case ut:t=Gx;break;case ht:t=zx;break;case ot:t=kx;break;case 211:t=$x;break;case 212:t=Hx;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const s=e.stencilFunc;switch(s){case Cs:t=lx;break;case As:t=fx;break;case Rs:t=dx;break;case Ss:t=hx;break;case vs:t=cx;break;case Ns:t=mx;break;case _s:t=px;break;case bs:t=gx;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",s)}return t}_getStencilOperation(e){let t;switch(e){case Is:t=Zx;break;case Ps:t=Jx;break;case Fs:t=ey;break;case Us:t=ty;break;case Bs:t=sy;break;case Ms:t=ry;break;case ws:t=iy;break;case Es:t=ny;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case Je:t=Wx;break;case et:t=jx;break;case tt:t=qx;break;case Vs:t=Xx;break;case Ls:t=Kx;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,s){const r={},i=this.backend.utils;switch(r.topology=i.getPrimitiveTopology(e,s),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(r.stripIndexFormat=t.index.array instanceof Uint16Array?Sx:Rx),s.side){case ze:r.frontFace=bx,r.cullMode=vx;break;case b:r.frontFace=bx,r.cullMode=Nx;break;case Ge:r.frontFace=bx,r.cullMode=_x;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",s.side)}return r}_getColorWriteMask(e){return!0===e.colorWrite?Qx:Yx}_getDepthCompare(e){let t;if(!1===e.depthTest)t=fx;else{const s=e.depthFunc;switch(s){case At:t=lx;break;case Rt:t=fx;break;case St:t=dx;break;case vt:t=hx;break;case Nt:t=cx;break;case _t:t=mx;break;case bt:t=px;break;case Tt:t=gx;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",s)}}return t}}class $S extends qv{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===e.alpha||e.alpha,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.trackTimestamp=!0===e.trackTimestamp,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new LS(this),this.attributeUtils=new GS(this),this.bindingUtils=new zS(this),this.pipelineUtils=new kS(this),this.textureUtils=new bS(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let s;if(void 0===t.device){const e={powerPreference:t.powerPreference},r=await navigator.gpu.requestAdapter(e);if(null===r)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const i=Object.values(Sy),n=[];for(const e of i)r.features.has(e)&&n.push(e);const o={requiredFeatures:n,requiredLimits:t.requiredLimits};s=await r.requestDevice(o)}else s=t.device;const r=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.device=s,this.context=r;const i=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Sy.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:i}),this.updateSize()}get coordinateSystem(){return v}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(null===e){const t=this.renderer;e={colorAttachments:[{view:null}],depthStencilAttachment:{view:this.textureUtils.getDepthBuffer(t.depth,t.stencil).createView()}};const s=e.colorAttachments[0];this.renderer.samples>0?s.view=this.colorBuffer.createView():s.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,s=this.get(t);let r=s.descriptors;if(void 0===r||s.width!==t.width||s.height!==t.height||s.activeMipmapLevel!==t.activeMipmapLevel||s.samples!==t.samples){r={},s.descriptors=r;const e=()=>{t.removeEventListener("dispose",e),this.delete(t)};t.addEventListener("dispose",e)}const i=e.getCacheKey();let n=r[i];if(void 0===n){const o=e.textures,a=[];for(let t=0;t<o.length;t++){const s=this.get(o[t]),r=s.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:xy});let i,n;void 0!==s.msaaTexture?(i=s.msaaTexture.createView(),n=r):(i=r,n=void 0),a.push({view:i,resolveTarget:n,loadOp:yx,storeOp:xx})}n={colorAttachments:a,depthStencilAttachment:{view:this.get(e.depthTexture).texture.createView()}},r[i]=n,s.width=t.width,s.height=t.height,s.samples=t.samples,s.activeMipmapLevel=t.activeMipmapLevel}return n}beginRender(e){const t=this.get(e),s=this.device,r=e.occlusionQueryCount;let i,n;r>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,i=s.createQuerySet({type:"occlusion",count:r}),t.occlusionQuerySet=i,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(r),t.lastOcclusionObject=null),n=null===e.textures?this._getDefaultRenderPassDescriptor():this._getRenderPassDescriptor(e),this.initTimestampQuery(e,n),n.occlusionQuerySet=i;const o=n.depthStencilAttachment;if(null!==e.textures){const t=n.colorAttachments;for(let s=0;s<t.length;s++){const r=t[s];e.clearColor?(r.clearValue=0===s?e.clearColorValue:{r:0,g:0,b:0,a:1},r.loadOp=Tx,r.storeOp=xx):(r.loadOp=yx,r.storeOp=xx)}}else{const t=n.colorAttachments[0];e.clearColor?(t.clearValue=e.clearColorValue,t.loadOp=Tx,t.storeOp=xx):(t.loadOp=yx,t.storeOp=xx)}e.depth&&(e.clearDepth?(o.depthClearValue=e.clearDepthValue,o.depthLoadOp=Tx,o.depthStoreOp=xx):(o.depthLoadOp=yx,o.depthStoreOp=xx)),e.stencil&&(e.clearStencil?(o.stencilClearValue=e.clearStencilValue,o.stencilLoadOp=Tx,o.stencilStoreOp=xx):(o.stencilLoadOp=yx,o.stencilStoreOp=xx));const a=s.createCommandEncoder({label:"renderContext_"+e.id}),u=a.beginRenderPass(n);if(t.descriptor=n,t.encoder=a,t.currentPass=u,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:r,height:i}=e.scissorValue;u.setScissorRect(t,s,r,i)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const r=8*s;let i=this.occludedResolveCache.get(r);void 0===i&&(i=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,i));const n=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,i,0),t.encoder.copyBufferToBuffer(i,0,n,0,r),t.occlusionQueryBuffer=n,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const s=t[e];!0===s.generateMipmaps&&this.textureUtils.generateMipmaps(s)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const i=s.getMappedRange(),n=new BigUint64Array(i);for(let t=0;t<r.length;t++)n[t]!==BigInt(0)&&e.add(r[t]);s.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e),{x:s,y:r,width:i,height:n,minDepth:o,maxDepth:a}=e.viewportValue;t.setViewport(s,r,i,n,o,a)}clear(e,t,s,r=null){const i=this.device,n=this.renderer;let o,a,u,l,d=[];if(e){const e=this.getClearColor();if(!0===this.renderer.alpha){const t=e.a;a={r:e.r*t,g:e.g*t,b:e.b*t,a:t}}else a={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===r){u=n.depth,l=n.stencil;const t=this._getDefaultRenderPassDescriptor();if(e){d=t.colorAttachments;const e=d[0];e.clearValue=a,e.loadOp=Tx,e.storeOp=xx}(u||l)&&(o=t.depthStencilAttachment)}else{if(u=r.depth,l=r.stencil,e)for(const e of r.textures){const t=this.get(e),s=t.texture.createView();let r,i;void 0!==t.msaaTexture?(r=t.msaaTexture.createView(),i=s):(r=s,i=void 0),d.push({view:r,resolveTarget:i,clearValue:a,loadOp:Tx,storeOp:xx})}if(u||l){o={view:this.get(r.depthTexture).texture.createView()}}}u&&(t?(o.depthLoadOp=Tx,o.depthClearValue=n.getClearDepth(),o.depthStoreOp=xx):(o.depthLoadOp=yx,o.depthStoreOp=xx)),l&&(s?(o.stencilLoadOp=Tx,o.stencilClearValue=n.getClearStencil(),o.stencilStoreOp=xx):(o.stencilLoadOp=yx,o.stencilStoreOp=xx));const c=i.createCommandEncoder({});c.beginRenderPass({colorAttachments:d,depthStencilAttachment:o}).end(),i.queue.submit([c.finish()])}beginCompute(e){const t=this.get(e),s={};this.initTimestampQuery(e,s),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(s)}compute(e,t,s,r){const{passEncoderGPU:i}=this.get(e),n=this.get(r).pipeline;i.setPipeline(n);for(let e=0,t=s.length;e<t;e++){const t=s[e],r=this.get(t);i.setBindGroup(e,r.group)}const o=this.device.limits.maxComputeWorkgroupsPerDimension,a=this.get(t);void 0===a.dispatchSize&&(a.dispatchSize={x:0,y:1,z:1});const{dispatchSize:u}=a;t.dispatchCount>o?(u.x=Math.min(t.dispatchCount,o),u.y=Math.ceil(t.dispatchCount/o)):u.x=t.dispatchCount,i.dispatchWorkgroups(u.x,u.y,u.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}draw(e,t){const{object:s,context:r,pipeline:i}=e,n=e.getBindings(),o=this.get(r),a=this.get(i).pipeline,u=o.currentSets,l=o.currentPass,d=e.getDrawParameters();if(null===d)return;u.pipeline!==a&&(l.setPipeline(a),u.pipeline=a);const c=u.bindingGroups;for(let e=0,t=n.length;e<t;e++){const t=n[e],s=this.get(t);c[t.index]!==t.id&&(l.setBindGroup(t.index,s.group),c[t.index]=t.id)}const h=e.getIndex(),p=null!==h;if(!0===p&&u.index!==h){const e=this.get(h).buffer,t=h.array instanceof Uint16Array?Sx:Rx;l.setIndexBuffer(e,t),u.index=h}const g=e.getVertexBuffers();for(let e=0,t=g.length;e<t;e++){const t=g[e];if(u.attributes[e]!==t){const s=this.get(t).buffer;l.setVertexBuffer(e,s),u.attributes[e]=t}}if(void 0!==o.occlusionQuerySet){const e=o.lastOcclusionObject;e!==s&&(null!==e&&!0===e.occlusionTest&&(l.endOcclusionQuery(),o.occlusionQueryIndex++),!0===s.occlusionTest&&(l.beginOcclusionQuery(o.occlusionQueryIndex),o.occlusionQueryObjects[o.occlusionQueryIndex]=s),o.lastOcclusionObject=s)}if(!0===s.isBatchedMesh){const e=s._multiDrawStarts,t=s._multiDrawCounts,r=s._multiDrawCount,i=s._multiDrawInstances,n=p?h.array.BYTES_PER_ELEMENT:1;for(let s=0;s<r;s++){const r=i?i[s]:1,o=r>1?0:s;l.drawIndexed(t[s],r,e[s]/n,0,o)}}else if(!0===p){const{vertexCount:e,instanceCount:r,firstVertex:i}=d;l.drawIndexed(e,r,i,0,0),t.update(s,e,r)}else{const{vertexCount:e,instanceCount:r,firstVertex:i}=d;l.draw(e,r,i,0),t.update(s,e,r)}}needsRenderUpdate(e){const t=this.get(e),{object:s,material:r}=e,i=this.utils,n=i.getSampleCountRenderContext(e.context),o=i.getCurrentColorSpace(e.context),a=i.getCurrentColorFormat(e.context),u=i.getCurrentDepthStencilFormat(e.context),l=i.getPrimitiveTopology(s,r);let d=!1;return t.material===r&&t.materialVersion===r.version&&t.transparent===r.transparent&&t.blending===r.blending&&t.premultipliedAlpha===r.premultipliedAlpha&&t.blendSrc===r.blendSrc&&t.blendDst===r.blendDst&&t.blendEquation===r.blendEquation&&t.blendSrcAlpha===r.blendSrcAlpha&&t.blendDstAlpha===r.blendDstAlpha&&t.blendEquationAlpha===r.blendEquationAlpha&&t.colorWrite===r.colorWrite&&t.depthWrite===r.depthWrite&&t.depthTest===r.depthTest&&t.depthFunc===r.depthFunc&&t.stencilWrite===r.stencilWrite&&t.stencilFunc===r.stencilFunc&&t.stencilFail===r.stencilFail&&t.stencilZFail===r.stencilZFail&&t.stencilZPass===r.stencilZPass&&t.stencilFuncMask===r.stencilFuncMask&&t.stencilWriteMask===r.stencilWriteMask&&t.side===r.side&&t.alphaToCoverage===r.alphaToCoverage&&t.sampleCount===n&&t.colorSpace===o&&t.colorFormat===a&&t.depthStencilFormat===u&&t.primitiveTopology===l&&t.clippingContextCacheKey===e.clippingContext.cacheKey||(t.material=r,t.materialVersion=r.version,t.transparent=r.transparent,t.blending=r.blending,t.premultipliedAlpha=r.premultipliedAlpha,t.blendSrc=r.blendSrc,t.blendDst=r.blendDst,t.blendEquation=r.blendEquation,t.blendSrcAlpha=r.blendSrcAlpha,t.blendDstAlpha=r.blendDstAlpha,t.blendEquationAlpha=r.blendEquationAlpha,t.colorWrite=r.colorWrite,t.depthWrite=r.depthWrite,t.depthTest=r.depthTest,t.depthFunc=r.depthFunc,t.stencilWrite=r.stencilWrite,t.stencilFunc=r.stencilFunc,t.stencilFail=r.stencilFail,t.stencilZFail=r.stencilZFail,t.stencilZPass=r.stencilZPass,t.stencilFuncMask=r.stencilFuncMask,t.stencilWriteMask=r.stencilWriteMask,t.side=r.side,t.alphaToCoverage=r.alphaToCoverage,t.sampleCount=n,t.colorSpace=o,t.colorFormat=a,t.depthStencilFormat=u,t.primitiveTopology=l,t.clippingContextCacheKey=e.clippingContext.cacheKey,d=!0),d}getRenderCacheKey(e){const{object:t,material:s}=e,r=this.utils,i=e.context;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,r.getSampleCountRenderContext(i),r.getCurrentColorSpace(i),r.getCurrentColorFormat(i),r.getCurrentDepthStencilFormat(i),r.getPrimitiveTopology(t,s),e.clippingContext.cacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,i,n){return this.textureUtils.copyTextureToBuffer(e,t,s,r,i,n)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const s=this.get(e);if(!s.timeStampQuerySet){const e=this.device.createQuerySet({type:"timestamp",count:2}),r={querySet:e,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1};Object.assign(t,{timestampWrites:r}),s.timeStampQuerySet=e}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const s=this.get(e),r=2*BigInt64Array.BYTES_PER_ELEMENT;void 0===s.currentTimestampQueryBuffers&&(s.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:i,resultBuffer:n,isMappingPending:o}=s.currentTimestampQueryBuffers;!0!==o&&(t.resolveQuerySet(s.timeStampQuerySet,0,2,i,0),t.copyBufferToBuffer(i,0,n,0,r))}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const s=this.get(e);if(void 0===s.currentTimestampQueryBuffers)return;const{resultBuffer:r,isMappingPending:i}=s.currentTimestampQueryBuffers;!0!==i&&(s.currentTimestampQueryBuffers.isMappingPending=!0,r.mapAsync(GPUMapMode.READ).then((()=>{const e=new BigUint64Array(r.getMappedRange()),i=Number(e[1]-e[0])/1e6;this.renderer.info.updateTimestamp(t,i),r.unmap(),s.currentTimestampQueryBuffers.isMappingPending=!1})))}createNodeBuilder(e,t){return new IS(e,t)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const s=this.get(e),r=s.currentPass.finish();this.get(t).bundleGPU=r,s.currentSets=s._currentSets,s.currentPass=s._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,s=null,r=null,i=0){let n=0,o=0,a=0,u=0,l=0,d=0,c=e.image.width,h=e.image.height;null!==s&&(u=s.x,l=s.y,d=s.z||0,c=s.width,h=s.height),null!==r&&(n=r.x,o=r.y,a=r.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),g=this.get(e).texture,m=this.get(t).texture;p.copyTextureToTexture({texture:g,mipLevel:i,origin:{x:u,y:l,z:d}},{texture:m,mipLevel:i,origin:{x:n,y:o,z:a}},[c,h,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(e,t){const s=this.get(t),{encoder:r,descriptor:i}=s;let n=null;n=t.renderTarget?e.isDepthTexture?this.get(t.depthTexture).texture:this.get(t.textures[0]).texture:e.isDepthTexture?this.textureUtils.getDepthBuffer(t.depth,t.stencil):this.context.getCurrentTexture();const o=this.get(e).texture;if(n.format===o.format){s.currentPass.end(),r.copyTextureToTexture({texture:n,origin:{x:0,y:0,z:0}},{texture:o},[e.image.width,e.image.height]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e);for(let e=0;e<i.colorAttachments.length;e++)i.colorAttachments[e].loadOp=yx;t.depth&&(i.depthStencilAttachment.depthLoadOp=yx),t.stencil&&(i.depthStencilAttachment.stencilLoadOp=yx),s.currentPass=r.beginRenderPass(i),s.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}else console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",n.format,o.format)}}class HS extends Ds{constructor(e,t,s,r,i,n){super(e,t,s,r,i,n),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class WS extends yv{constructor(){super(),this.addMaterial(Ch,ee),this.addMaterial(qp,se),this.addMaterial(Kp,re),this.addMaterial(tg,ie),this.addMaterial(yh,Z),this.addMaterial(Rh,J),this.addMaterial(ih,D),this.addMaterial(ng,ne),this.addMaterial(Yc,L),this.addMaterial(Zc,V),this.addMaterial(ag,I),this.addMaterial(cg,oe),this.addMaterial(gg,ae),this.addLight(LN,Os),this.addLight(VN,Gs),this.addLight(zN,zs),this.addLight(kN,Ds),this.addLight(HN,ks),this.addLight(WN,$s),this.addLight(jN,Hs),this.addLight($N,HS),this.addToneMapping(l_,Ws),this.addToneMapping(d_,js),this.addToneMapping(c_,qs),this.addToneMapping(p_,Xs),this.addToneMapping(x_,Ks),this.addToneMapping(y_,Ys),this.addColorSpace(u_,Ra(l,d)),this.addColorSpace(a_,Ra(d,l))}}class jS extends Rv{constructor(e={}){let t;e.forceWebGL?t=cS:(t=$S,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new cS(e)));super(new t(e),e),this.nodes.library=new WS,this.isWebGPURenderer=!0}}class qS extends Qs{constructor(){super(),this.isBundleGroup=!0,this.type="BundleGroup",this.static=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}}const XS=new jc,KS=new jf(XS);class YS{constructor(e,t=wi(0,0,1,1)){this.renderer=e,this.outputNode=t,this.outputColorTransform=!0,this.needsUpdate=!0,XS.name="PostProcessing"}render(){this.update();const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;e.toneMapping=c,e.outputColorSpace=l,KS.render(e),e.toneMapping=t,e.outputColorSpace=s}update(){if(!0===this.needsUpdate){const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;KS.material.fragmentNode=!0===this.outputColorTransform?ru(this.outputNode,t,s):this.outputNode.context({toneMapping:t,outputColorSpace:s}),KS.material.needsUpdate=!0,this.needsUpdate=!1}}async renderAsync(){this.update();const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;e.toneMapping=c,e.outputColorSpace=l,await KS.renderAsync(e),e.toneMapping=t,e.outputColorSpace=s}}class QS extends te{constructor(e=1,t=1){super(),this.image={width:e,height:t},this.magFilter=H,this.minFilter=H,this.isStorageTexture=!0}}class ZS extends he{constructor(e,t,s=Float32Array){!1===ArrayBuffer.isView(e)&&(e=new s(e*t)),super(e,t),this.isStorageBufferAttribute=!0}}class JS extends C{constructor(e,t,s=Float32Array){!1===ArrayBuffer.isView(e)&&(e=new s(e*t)),super(e,t),this.isStorageInstancedBufferAttribute=!0}}class eR extends Zs{constructor(e){super(e),this.textures={},this.nodes={}}load(e,t,s,r){const i=new Js(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(s=>{try{t(this.parse(JSON.parse(s)))}catch(t){r?r(t):console.error(t),this.manager.itemError(e)}}),s,r)}parseNodes(e){const t={};if(void 0!==e){for(const s of e){const{uuid:e,type:r}=s;t[e]=this.createNodeFromType(r),t[e].uuid=e}const s={nodes:t,textures:this.textures};for(const r of e){r.meta=s;t[r.uuid].deserialize(r),delete r.meta}}return t}parse(e){const t=this.createNodeFromType(e.type);t.uuid=e.uuid;const s={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=s,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}setNodes(e){return this.nodes=e,this}createNodeFromType(e){return void 0===this.nodes[e]?(console.error("THREE.NodeLoader: Node type not found:",e),xi()):ni(new this.nodes[e])}}class tR extends er{constructor(e){super(e),this.nodes={},this.nodeMaterials={}}parse(e){const t=super.parse(e),s=this.nodes,r=e.inputNodes;for(const e in r){const i=r[e];t[e]=s[i]}return t}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}createMaterialFromType(e){const t=this.nodeMaterials[e];return void 0!==t?new t:super.createMaterialFromType(e)}}class sR extends tr{constructor(e){super(e),this.nodes={},this.nodeMaterials={},this._nodesJSON=null}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}parse(e,t){this._nodesJSON=e.nodes;const s=super.parse(e,t);return this._nodesJSON=null,s}parseNodes(e,t){if(void 0!==e){const s=new eR;return s.setNodes(this.nodes),s.setTextures(t),s.parseNodes(e)}return{}}parseMaterials(e,t){const s={};if(void 0!==e){const r=this.parseNodes(this._nodesJSON,t),i=new tR;i.setTextures(t),i.setNodes(r),i.setNodeMaterials(this.nodeMaterials);for(let t=0,r=e.length;t<r;t++){const r=e[t];s[r.uuid]=i.parse(r)}}return s}}export{Xs as ACESFilmicToneMapping,hc as AONode,Je as AddEquation,K as AddOperation,we as AdditiveBlending,Qy as AfterImageNode,Ks as AgXToneMapping,Mt as AlphaFormat,ps as AlwaysCompare,Rt as AlwaysDepth,As as AlwaysStencilFunc,ks as AmbientLight,HN as AmbientLightNode,JT as AnaglyphPassNode,wb as AnalyticLightNode,aT as AnamorphicNode,br as ArrayElementNode,Cn as AssignNode,nu as AttributeNode,Ih as BRDF_GGX,bh as BRDF_Lambert,b as BackSide,ph as BasicEnvironmentNode,jd as BatchNode,LT as BloomNode,G as BoxGeometry,tc as Break,he as BufferAttribute,Da as BufferAttributeNode,ce as BufferGeometry,ml as BufferNode,Kl as BumpMapNode,qS as BundleGroup,qa as BypassNode,Ye as ByteType,Wa as CacheNode,qs as CineonToneMapping,ls as ClampToEdgeWrapping,Jg as CodeNode,e as Color,u as ColorManagement,Aa as ColorSpaceNode,$a as ComputeNode,wr as ConstNode,ma as ContextNode,ec as Continue,_r as ConvertNode,W as CubeCamera,_ as CubeReflectionMapping,N as CubeRefractionMapping,j as CubeTexture,pl as CubeTextureNode,ge as CubeUVReflectionMapping,gt as CullFaceBack,mt as CullFaceFront,pt as CullFaceNone,ft as CustomBlending,Lh as DFGApprox,Uh as D_GGX,E as DataArrayTexture,Ae as DataTexture,Ms as DecrementStencilOp,Es as DecrementWrapStencilOp,AT as DenoiseNode,Ie as DepthFormat,cT as DepthOfFieldNode,Pe as DepthStencilFormat,U as DepthTexture,Gs as DirectionalLight,VN as DirectionalLightNode,eu as Discard,pT as DotScreenNode,Ge as DoubleSide,ut as DstAlphaFactor,at as DstColorFactor,g as DynamicDrawUsage,to as EPSILON,$p as EnvironmentNode,ms as EqualCompare,Nt as EqualDepth,vs as EqualStencilFunc,nh as EquirectUVNode,q as EquirectangularReflectionMapping,X as EquirectangularRefractionMapping,o as EventDispatcher,Za as ExpressionNode,ET as FXAANode,Th as F_Schlick,Js as FileLoader,xT as FilmNode,_e as Float16BufferAttribute,Re as Float32BufferAttribute,w as FloatType,di as Fn,gb as FogExp2Node,db as FogNode,hb as FogRangeNode,M as FramebufferTexture,Ku as FrontFacingNode,ze as FrontSide,ke as Frustum,wn as FunctionCallNode,im as FunctionNode,af as FunctionOverloadingNode,JN as GLSLNodeParser,ST as GTAONode,qy as GaussianBlurNode,xs as GreaterCompare,bt as GreaterDepth,fs as GreaterEqualCompare,_t as GreaterEqualDepth,Ns as GreaterEqualStencilFunc,_s as GreaterStencilFunc,Qs as Group,xe as HalfFloatType,$s as HemisphereLight,WN as HemisphereLightNode,HS as IESSpotLight,$N as IESSpotLightNode,so as INFINITY,gi as If,Bs as IncrementStencilOp,ws as IncrementWrapStencilOp,Od as IndexNode,Hd as InstanceNode,C as InstancedBufferAttribute,A as InstancedInterleavedBuffer,Xc as InstancedPointsNodeMaterial,y as IntType,p as InterleavedBuffer,m as InterleavedBufferAttribute,Us as InvertStencilOp,mc as IrradianceNode,vr as JoinNode,Is as KeepStencilOp,Be as LessCompare,St as LessDepth,gs as LessEqualCompare,vt as LessEqualDepth,Ss as LessEqualStencilFunc,Rs as LessStencilFunc,Hs as LightProbe,jN as LightProbeNode,pc as LightingContextNode,mh as LightingModel,cc as LightingNode,lc as LightsNode,eh as Line2NodeMaterial,L as LineBasicMaterial,Yc as LineBasicNodeMaterial,V as LineDashedMaterial,Zc as LineDashedNodeMaterial,H as LinearFilter,Se as LinearMipMapLinearFilter,B as LinearMipmapLinearFilter,Te as LinearMipmapNearestFilter,l as LinearSRGBColorSpace,Ws as LinearToneMapping,Zs as Loader,Jd as Loop,Zd as LoopNode,Ut as LuminanceAlphaFormat,Bt as LuminanceFormat,TT as Lut3DNode,nf as MRTNode,sg as MatcapUVNode,F as Material,er as MaterialLoader,Zl as MaterialNode,Rl as MaterialReferenceNode,a as MathUtils,i as Matrix3,n as Matrix4,Ls as MaxEquation,du as MaxMipLevelNode,k as Mesh,Z as MeshBasicMaterial,yh as MeshBasicNodeMaterial,J as MeshLambertMaterial,Rh as MeshLambertNodeMaterial,ne as MeshMatcapMaterial,ng as MeshMatcapNodeMaterial,D as MeshNormalMaterial,ih as MeshNormalNodeMaterial,ee as MeshPhongMaterial,Ch as MeshPhongNodeMaterial,re as MeshPhysicalMaterial,Kp as MeshPhysicalNodeMaterial,Qp as MeshSSSNodeMaterial,se as MeshStandardMaterial,qp as MeshStandardNodeMaterial,ie as MeshToonMaterial,tg as MeshToonNodeMaterial,Vs as MinEquation,ds as MirroredRepeatWrapping,Y as MixOperation,Bu as ModelNode,Vd as ModelViewProjectionNode,oc as MorphNode,xt as MultiplyBlending,Q as MultiplyOperation,Ee as NearestFilter,be as NearestMipmapLinearFilter,cs as NearestMipmapNearestFilter,Ys as NeutralToneMapping,hs as NeverCompare,At as NeverDepth,Cs as NeverStencilFunc,z as NoBlending,f as NoColorSpace,c as NoToneMapping,Tr as Node,Hg as NodeAttribute,Qm as NodeBuilder,Yg as NodeCache,Xg as NodeCode,Zm as NodeFrame,Jm as NodeFunctionInput,eR as NodeLoader,jc as NodeMaterial,tR as NodeMaterialLoader,rr as NodeMaterialObserver,sR as NodeObjectLoader,cr as NodeShaderStage,pr as NodeType,Wg as NodeUniform,hr as NodeUpdateType,dr as NodeUtils,jg as NodeVar,qg as NodeVarying,P as NormalBlending,Wl as NormalMapNode,ys as NotEqualCompare,Tt as NotEqualDepth,bs as NotEqualStencilFunc,ve as Object3D,Ru as Object3DNode,tr as ObjectLoader,R as ObjectSpaceNormalMap,rt as OneFactor,ht as OneMinusDstAlphaFactor,ct as OneMinusDstColorFactor,dt as OneMinusSrcAlphaFactor,lt as OneMinusSrcColorFactor,me as OrthographicCamera,mf as OscNode,tf as OutputStructNode,Oe as PCFShadowMap,ro as PI,io as PI2,Om as PMREMGenerator,Gp as PMREMNode,tb as ParallaxBarrierPassNode,Qg as ParameterNode,zy as PassNode,fe as PerspectiveCamera,vh as PhongLightingModel,fp as PhysicalLightingModel,zT as PixelationPassNode,ue as Plane,Os as PointLight,LN as PointLightNode,Jf as PointUVNode,I as PointsMaterial,ag as PointsNodeMaterial,YS as PostProcessing,Fy as PosterizeNode,Ki as PropertyNode,jf as QuadMesh,as as RED_GREEN_RGTC2_Format,ns as RED_RGTC1_Format,Ne as REVISION,ye as RGBAFormat,Xe as RGBAIntegerFormat,ts as RGBA_ASTC_10x10_Format,Zt as RGBA_ASTC_10x5_Format,Jt as RGBA_ASTC_10x6_Format,es as RGBA_ASTC_10x8_Format,ss as RGBA_ASTC_12x10_Format,rs as RGBA_ASTC_12x12_Format,Ht as RGBA_ASTC_4x4_Format,Wt as RGBA_ASTC_5x4_Format,jt as RGBA_ASTC_5x5_Format,qt as RGBA_ASTC_6x5_Format,Xt as RGBA_ASTC_6x6_Format,Kt as RGBA_ASTC_8x5_Format,Yt as RGBA_ASTC_8x6_Format,Qt as RGBA_ASTC_8x8_Format,is as RGBA_BPTC_Format,$t as RGBA_ETC2_EAC_Format,Gt as RGBA_PVRTC_2BPPV1_Format,Ot as RGBA_PVRTC_4BPPV1_Format,Pt as RGBA_S3TC_DXT1_Format,It as RGBA_S3TC_DXT3_Format,Lt as RGBA_S3TC_DXT5_Format,qe as RGBFormat,je as RGBIntegerFormat,mT as RGBShiftNode,zt as RGB_ETC1_Format,kt as RGB_ETC2_Format,Dt as RGB_PVRTC_2BPPV1_Format,Vt as RGB_PVRTC_4BPPV1_Format,Ft as RGB_S3TC_DXT1_Format,Fe as RGFormat,We as RGIntegerFormat,Xf as RTTNode,yb as RangeNode,zs as RectAreaLight,zN as RectAreaLightNode,He as RedFormat,$e as RedIntegerFormat,Nl as ReferenceNode,zf as ReflectorNode,js as ReinhardToneMapping,Ka as RemapNode,su as RenderOutputNode,pe as RenderTarget,Fa as RendererReferenceNode,Ce as RepeatWrapping,Fs as ReplaceStencilOp,tu as Return,tt as ReverseSubtractEquation,ug as RotateNode,us as SIGNED_RED_GREEN_RGTC2_Format,os as SIGNED_RED_RGTC1_Format,d as SRGBColorSpace,HT as SSAAPassNode,$ as Scene,tx as SceneNode,Dh as Schlick_to_F0,yc as ScreenNode,ub as ScriptableNode,rb as ScriptableValueNode,Ar as SetNode,ii as ShaderNode,ae as ShadowMaterial,gg as ShadowNodeMaterial,Qe as ShortType,Kd as SkinningNode,lT as SobelOperatorNode,De as SphereGeometry,Rr as SplitNode,Ds as SpotLight,kN as SpotLightNode,oe as SpriteMaterial,cg as SpriteNodeMaterial,bf as SpriteSheetUVNode,nt as SrcAlphaFactor,ot as SrcAlphaSaturateFactor,it as SrcColorFactor,vm as StackNode,h as StaticDrawUsage,Me as StereoCamera,XT as StereoPassNode,Nf as StorageArrayElementNode,ZS as StorageBufferAttribute,Ry as StorageBufferNode,JS as StorageInstancedBufferAttribute,QS as StorageTexture,Ey as StorageTextureNode,et as SubtractEquation,yt as SubtractiveBlending,Gl as TBNViewMatrix,S as TangentSpaceNormalMap,Nr as TempNode,te as Texture,fg as Texture3DNode,hu as TextureNode,uu as TextureSizeNode,df as TimerNode,Ia as ToneMappingNode,DT as TransitionNode,Sf as TriplanarTexturesNode,de as Uint16BufferAttribute,le as Uint32BufferAttribute,yl as UniformArrayNode,zi as UniformGroupNode,qi as UniformNode,Ve as UnsignedByteType,Le as UnsignedInt248Type,wt as UnsignedInt5999Type,x as UnsignedIntType,Ct as UnsignedShort4444Type,Et as UnsignedShort5551Type,Ke as UnsignedShortType,By as UserDataNode,Ue as VSMShadowMap,Mh as V_GGX_SmithCorrelated,ya as VarNode,ba as VaryingNode,t as Vector2,s as Vector3,r as Vector4,Qf as VertexColorNode,Lc as ViewportDepthNode,Pc as ViewportDepthTextureNode,Ly as ViewportSharedTextureNode,Mc as ViewportTextureNode,yg as VolumeNodeMaterial,T as WebGLCoordinateSystem,O as WebGLCubeRenderTarget,v as WebGPUCoordinateSystem,jS as WebGPURenderer,st as ZeroFactor,Ps as ZeroStencilOp,Co as abs,p_ as acesFilmicToneMapping,Ro as acos,Un as add,Ur as addMethodChaining,iu as addNodeElement,Zy as afterImage,x_ as agxToneMapping,no as all,dn as alphaT,eb as anaglyphPass,uT as anamorphic,$n as and,cn as anisotropy,pn as anisotropyB,hn as anisotropyT,oo as any,RT as ao,mi as append,Vi as arrayBuffer,So as asin,En as assign,Ao as atan,Go as atan2,Rn as attenuationColor,Sn as attenuationDistance,ou as attribute,sx as backgroundBlurriness,rx as backgroundIntensity,qd as batch,qb as billboarding,qn as bitAnd,Xn as bitNot,Kn as bitOr,Yn as bitXor,Pl as bitangentGeometry,Il as bitangentLocal,Ll as bitangentView,Vl as bitangentWorld,Do as bitcast,n_ as bleach,VT as bloom,Lp as blur,bi as bool,fl as buffer,Oa as bufferAttribute,Yl as bumpMap,e_ as burn,Si as bvec2,Ei as bvec3,Ui as bvec4,Xa as bypass,ja as cache,Mn as call,xu as cameraFar,yu as cameraLogDepth,fu as cameraNear,vu as cameraNormalMatrix,Su as cameraPosition,Tu as cameraProjectionMatrix,bu as cameraProjectionMatrixInverse,_u as cameraViewMatrix,Nu as cameraWorldMatrix,ta as cbrt,yo as ceil,A_ as checker,c_ as cineonToneMapping,ia as clamp,sn as clearcoat,rn as clearcoatRoughness,em as code,fi as color,Ma as colorSpaceToWorking,sh as colorToDirection,Ha as compute,ga as cond,fa as context,Oi as convert,Yf as convertToTexture,No as cos,Ze as createCanvasElement,Ko as cross,gl as cubeTexture,Uo as dFdx,Fo as dFdy,yn as dashSize,mr as defaultBuildStages,gr as defaultShaderStages,si as defined,lo as degrees,CT as denoise,mb as densityFog,kc as depth,Hy as depthPass,qo as difference,Zi as diffuseColor,th as directionToColor,An as dispersion,jo as distance,In as div,t_ as dodge,hT as dof,Xo as dot,gT as dotScreen,$d as drawIndex,Ga as dynamicBufferAttribute,Di as element,Ji as emissive,Vn as equal,ao as equals,oh as equirectUV,co as exp,ho as exp2,Ja as expression,Qu as faceDirection,ua as faceForward,yT as film,xi as float,xo as floor,cb as fog,bo as fract,Hi as frameGroup,gf as frameId,Yu as frontFacing,Vo as fwidth,wT as fxaa,Ob as gain,Tn as gapSize,Xy as gaussianBlur,Ra as getColorSpaceMethod,ri as getConstNodeType,pi as getCurrentStack,Up as getDirection,Mb as getDistanceAttenuation,Eh as getGeometryRoughness,wh as getRoughness,IN as getShIrradianceAt,rf as getTextureIndex,ab as global,rm as glsl,om as glslFn,Jy as grayscale,Gn as greaterThan,kn as greaterThanEqual,Vb as hash,zu as highPrecisionModelNormalViewMatrix,Gu as highPrecisionModelViewMatrix,sT as hue,Wd as instance,zd as instanceIndex,za as instancedBufferAttribute,ka as instancedDynamicBufferAttribute,yi as int,fo as inverseSqrt,kd as invocationLocalIndex,_n as ior,an as iridescence,un as iridescenceIOR,ln as iridescenceThickness,Ni as ivec2,Ai as ivec3,Mi as ivec4,tm as js,xa as label,wo as length,sa as lengthSq,On as lessThan,zn as lessThanEqual,Fb as lightPosition,Lb as lightTargetDirection,Pb as lightTargetPosition,Ib as lightViewPosition,gc as lightingContext,dc as lights,$c as linearDepth,u_ as linearSRGBTosRGB,l_ as linearToneMapping,po as log,go as log2,sc as loop,iT as luminance,bT as lut3D,Fi as mat2,Pi as mat3,Ii as mat4,rg as matcapUV,Id as materialAOMap,Jl as materialAlphaTest,yd as materialAnisotropy,Ld as materialAnisotropyVector,Ad as materialAttenuationColor,Rd as materialAttenuationDistance,hd as materialClearcoat,gd as materialClearcoatNormal,pd as materialClearcoatRoughness,ed as materialColor,Fd as materialDispersion,sd as materialEmissive,Sd as materialIOR,Td as materialIridescence,bd as materialIridescenceIOR,_d as materialIridescenceThickness,Pd as materialLightMap,Bd as materialLineDashOffset,Ed as materialLineDashSize,wd as materialLineGapSize,Cd as materialLineScale,Md as materialLineWidth,dd as materialMetalness,cd as materialNormal,rd as materialOpacity,Ud as materialPointWidth,Al as materialReference,ud as materialReflectivity,ul as materialRefractionRatio,md as materialRotation,ld as materialRoughness,fd as materialSheen,xd as materialSheenRoughness,td as materialShininess,id as materialSpecular,od as materialSpecularColor,nd as materialSpecularIntensity,ad as materialSpecularStrength,vd as materialThickness,Nd as materialTransmission,ko as max,cu as maxMipLevel,tn as metalness,zo as min,ra as mix,da as mixElement,$o as mod,Ln as modInt,Uu as modelDirection,Vu as modelNormalMatrix,Pu as modelPosition,Iu as modelScale,Ou as modelViewMatrix,Lu as modelViewPosition,Dd as modelViewProjection,Fu as modelWorldMatrix,Du as modelWorldMatrixInverse,ac as morphReference,i_ as motionBlur,of as mrt,Pn as mul,gN as mx_aastep,MN as mx_cell_noise_float,vN as mx_contrast,BN as mx_fractal_noise_float,UN as mx_fractal_noise_vec2,FN as mx_fractal_noise_vec3,PN as mx_fractal_noise_vec4,cN as mx_hsvtorgb,SN as mx_noise_float,RN as mx_noise_vec3,AN as mx_noise_vec4,fN as mx_ramplr,xN as mx_ramptb,hN as mx_rgbtohsv,NN as mx_safepower,TN as mx_splitlr,bN as mx_splittb,pN as mx_srgb_texture_to_lin_rec709,_N as mx_transform_uv,CN as mx_worley_noise_float,EN as mx_worley_noise_vec2,wN as mx_worley_noise_vec3,Mo as negate,y_ as neutralToneMapping,ai as nodeArray,li as nodeImmutable,ni as nodeObject,oi as nodeObjects,ui as nodeProxy,el as normalFlat,Zu as normalGeometry,Ju as normalLocal,jl as normalMap,tl as normalView,sl as normalWorld,To as normalize,Wn as not,Dn as notEqual,Au as objectDirection,ji as objectGroup,Eu as objectPosition,wu as objectScale,Mu as objectViewPosition,Cu as objectWorldMatrix,Bo as oneMinus,Hn as or,Dc as orthographicDepthToViewZ,Tf as oscSawtooth,ff as oscSine,xf as oscSquare,yf as oscTriangle,xn as output,sf as outputStruct,r_ as overlay,lf as overloadingFn,Db as parabola,sb as parallaxBarrierPass,zl as parallaxDirection,kl as parallaxUV,Zg as parameter,ky as pass,$y as passTexture,Gb as pcurve,Gc as perspectiveDepthToViewZ,kT as pixelationPass,zp as pmremTexture,ex as pointUV,bn as pointWidth,ku as positionGeometry,$u as positionLocal,Hu as positionPrevious,qu as positionView,Xu as positionViewDirection,Wu as positionWorld,ju as positionWorldDirection,Py as posterize,Yo as pow,Qo as pow2,Zo as pow3,Jo as pow4,Yi as property,uo as radians,la as rand,Tb as range,pb as rangeFog,Io as reciprocal,vl as reference,Sl as referenceBuffer,Wo as reflect,cl as reflectVector,ll as reflectView,kf as reflector,oa as refract,hl as refractVector,dl as refractView,d_ as reinhardToneMapping,Jn as remainder,Ya as remap,Qa as remapClamp,Wi as renderGroup,ru as renderOutput,Pa as rendererReference,fT as rgbShift,lg as rotate,Wb as rotateUV,en as roughness,Po as round,Kf as rtt,a_ as sRGBToLinearSRGB,mu as sampler,na as saturate,eT as saturation,s_ as screen,_c as screenCoordinate,bc as screenSize,Tc as screenUV,lb as scriptable,ib as scriptableValue,pa as select,o_ as sepia,hi as setCurrentStack,fr as shaderStages,$i as sharedUniformGroup,nn as sheen,on as sheenRoughness,Qn as shiftLeft,Zn as shiftRight,fn as shininess,Eo as sign,_o as sin,zb as sinc,Yd as skinning,Qd as skinningReference,aa as smoothstep,ca as smoothstepElement,dT as sobel,gn as specularColor,mn as specularF90,jb as spherizeUV,Gi as split,_f as spritesheetUV,mo as sqrt,jT as ssaaPass,Sm as stack,Ho as step,KT as stereoPass,Ay as storage,__ as storageBarrier,Cy as storageObject,wy as storageTexture,Li as string,Fn as sub,vo as tan,Cl as tangentGeometry,El as tangentLocal,wl as tangentView,Ml as tangentWorld,Ta as temp,pu as texture,xg as texture3D,N_ as textureBarrier,sp as textureBicubic,Fp as textureCubeUV,gu as textureLoad,lu as textureSize,My as textureStore,vn as thickness,nT as threshold,pf as timerDelta,hf as timerGlobal,cf as timerLocal,Ca as toOutputColorSpace,Ea as toWorkingColorSpace,La as toneMapping,Va as toneMappingExposure,ea as transformDirection,ol as transformNormal,al as transformNormalToView,$l as transformedBentNormalView,Dl as transformedBitangentView,Ol as transformedBitangentWorld,nl as transformedClearcoatNormalView,rl as transformedNormalView,il as transformedNormalWorld,Bl as transformedTangentView,Ul as transformedTangentWorld,OT as transition,Nn as transmission,Oo as transpose,kb as tri,$b as tri3,Hb as triNoise3D,Af as triplanarTexture,Rf as triplanarTextures,Lo as trunc,ci as tslFn,Ti as uint,Xi as uniform,Tl as uniformArray,ki as uniformGroup,bl as uniforms,Uy as userData,au as uv,vi as uvec2,Ci as uvec3,Bi as uvec4,_a as varying,Qi as varyingProperty,_i as vec2,Ri as vec3,wi as vec4,xr as vectorComponents,Jb as velocity,Zf as vertexColor,Gd as vertexIndex,tT as vibrance,Vc as viewZToOrthographicDepth,Oc as viewZToPerspectiveDepth,Nc as viewport,Ec as viewportBottomLeft,Sc as viewportCoordinate,Ic as viewportDepthTexture,Hc as viewportLinearDepth,Uc as viewportMipTexture,Ac as viewportResolution,Xb as viewportSafeUV,Vy as viewportSharedTexture,vc as viewportSize,Bc as viewportTexture,Cc as viewportTopLeft,Rc as viewportUV,sm as wgsl,am as wgslFn,R_ as workgroupArray,b_ as workgroupBarrier,wa as workingToColorSpace,jn as xor};
