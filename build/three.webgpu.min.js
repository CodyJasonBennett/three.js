/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
import{C as e,V as t,a as s,D as r,M as i,i as n,c3 as a,dA as o,f as l,w as d,a8 as c,N as h,fB as p,dn as m,fC as f,dl as x,bb as y,bf as b,I as T,c9 as _,e as N,o as v,p as A,fL as R,ag as C,af as w,dm as M,dp as B,G as U,j as F,cr as I,b3 as L,K as V,eC as D,ah as O,es as G,eB as z,eA as k,ex as $,W as H,B as W,v as j,c as q,ce as X,L as K,cY as J,X as te,l as se,n as re,aa as ie,ab as ne,ac as oe,r as ue,ey as le,ev as ce,T as he,eu as pe,et as ge,ew as me,ez as xe,eq as ye,ep as Te,k as _e,z as Ne,A as ve,s as Se,t as Ae,dh as Re,b as Ce,O as Ee,q as we,H as Me,R as Be,b2 as Ue,b1 as Fe,eE as Pe,c7 as Ie,dr as Le,f2 as Ve,eD as De,ct as Oe,aZ as Ge,ap as ze,aM as ke,cX as $e,b6 as He,a6 as We,bv as je,bc as qe,bi as Xe,bg as Ke,U as Ye,ej as Qe,a4 as Ze,ai as Je,F as et,al as tt,bu as st,bt as rt,bw as it,f3 as nt,bq as at,bx as ot,bh as ut,bn as lt,bo as ct,c6 as ht,ar as pt,as as gt,at as mt,au as ft,av as xt,aw as yt,ax as bt,ay as Tt,az as _t,aA as Nt,aB as vt,aC as St,aD as At,aE as Rt,aN as Ct,aO as Et,aP as wt,aJ as Mt,aK as Bt,aL as Ut,aQ as Ft,aR as Pt,aS as It,aT as Lt,aq as Vt,aU as Dt,aV as Ot,aW as Gt,bk as zt,bl as kt,bm as $t,bp as Ht,br as Wt,bs as jt,by as qt,bz as Xt,bA as Kt,bB as Yt,bC as Qt,bD as Zt,bE as Jt,bF as es,bG as ts,bH as ss,bI as rs,bJ as is,bK as ns,bL as as,bM as os,bN as us,bO as ls,bP as hs,bQ as ps,bR as gs,bS as ms,bT as fs,bU as xs,bV as ys,bW as bs,bX as Ts,b_ as _s,b$ as Ns,c0 as vs,c1 as Ss,a_ as As,a$ as Rs,b0 as Cs,b4 as Es,b5 as ws,J as Ms,b7 as Bs,b8 as Us,b9 as Fs,ba as Ps,x as Is,fy as Ls,fx as Vs,fz as Ds,fv as Os,fw as Gs,fu as zs,fA as ks,ft as $s,fr as Hs,fq as Ws,fp as js,fo as qs,fs as Xs,fn as Ks,fl as Ys,fm as Qs,aY as Zs,aX as Js,cP as tr,cQ as sr,cT as rr,cR as ir,cU as nr,cS as ar,cW as or,a3 as ur,a2 as lr,a1 as dr,a0 as cr,$ as hr,_ as pr,c2 as gr,cL as mr,cK as fr,cE as xr,cD as yr}from"./three.core.min.js";export{fe as AdditiveAnimationBlendMode,dg as AnimationAction,df as AnimationClip,cy as AnimationLoader,de as AnimationMixer,dd as AnimationObjectGroup,dc as AnimationUtils,eK as ArcCurve,c4 as ArrayCamera,dW as ArrowHelper,eY as AttachedBindMode,d2 as Audio,d1 as AudioAnalyser,d0 as AudioContext,c_ as AudioListener,cO as AudioLoader,dX as AxesHelper,fi as BasicDepthPacking,eX as BasicShadowMap,cl as BatchedMesh,cj as Bone,d8 as BooleanKeyframeTrack,dH as Box2,dG as Box3,dU as Box3Helper,dT as BoxHelper,cF as BufferGeometryLoader,cN as Cache,cZ as Camera,dS as CameraHelper,cx as CanvasTexture,e6 as CapsuleGeometry,eL as CatmullRomCurve3,e7 as CircleGeometry,dt as Clock,d7 as ColorKeyframeTrack,cv as CompressedArrayTexture,cw as CompressedCubeTexture,cu as CompressedTexture,cz as CompressedTextureLoader,e8 as ConeGeometry,aH as ConstantAlphaFactor,aF as ConstantColorFactor,e1 as Controls,cA as CubeTextureLoader,eM as CubicBezierCurve,eN as CubicBezierCurve3,dx as CubicInterpolant,eW as CullFaceFrontBack,e0 as Curve,d$ as CurvePath,Z as CustomToneMapping,e9 as CylinderGeometry,dC as Cylindrical,Q as Data3DTexture,cB as DataTextureLoader,e2 as DataUtils,cG as DefaultLoadingManager,eZ as DetachedBindMode,dR as DirectionalLightHelper,dw as DiscreteInterpolant,a7 as DisplayP3ColorSpace,ea as DodecahedronGeometry,fI as DynamicCopyUsage,fF as DynamicReadUsage,eb as EdgesGeometry,eO as EllipseCurve,E as Euler,ec as ExtrudeGeometry,cd as Fog,cc as FogExp2,dq as GLBufferAttribute,fK as GLSL1,Y as GLSL3,dP as GridHelper,dO as HemisphereLightHelper,ed as IcosahedronGeometry,cJ as ImageBitmapLoader,cI as ImageLoader,e3 as ImageUtils,dk as InstancedBufferGeometry,ck as InstancedMesh,eG as Int16BufferAttribute,eF as Int32BufferAttribute,eJ as Int8BufferAttribute,dy as Interpolant,f7 as InterpolateDiscrete,f8 as InterpolateLinear,f9 as InterpolateSmooth,db as KeyframeTrack,cg as LOD,ee as LatheGeometry,ak as Layers,cV as Light,co as Line,dI as Line3,eP as LineCurve,eQ as LineCurve3,cn as LineLoop,cm as LineSegments,a9 as LinearDisplayP3ColorSpace,dv as LinearInterpolant,f1 as LinearMipMapNearestFilter,be as LinearTransfer,cM as LoaderUtils,cH as LoadingManager,f4 as LoopOnce,f6 as LoopPingPong,f5 as LoopRepeat,eU as MOUSE,dF as Matrix2,am as MeshDepthMaterial,ao as MeshDistanceMaterial,f0 as NearestMipMapLinearFilter,e$ as NearestMipMapNearestFilter,fd as NormalAnimationBlendMode,d6 as NumberKeyframeTrack,ef as OctahedronGeometry,aI as OneMinusConstantAlphaFactor,aG as OneMinusConstantColorFactor,ad as P3Primaries,a5 as PCFSoftShadowMap,dZ as Path,P as PlaneGeometry,dV as PlaneHelper,dN as PointLightHelper,cp as Points,dQ as PolarGridHelper,eg as PolyhedronGeometry,c$ as PositionalAudio,da as PropertyBinding,d9 as PropertyMixer,eR as QuadraticBezierCurve,eS as QuadraticBezierCurve3,dJ as Quaternion,d5 as QuaternionKeyframeTrack,du as QuaternionLinearInterpolant,an as RGBADepthPacking,fj as RGBDepthPacking,bY as RGB_BPTC_SIGNED_Format,bZ as RGB_BPTC_UNSIGNED_Format,fk as RGDepthPacking,er as RawShaderMaterial,dE as Ray,ds as Raycaster,ae as Rec709Primaries,eh as RingGeometry,g as SRGBTransfer,S as ShaderMaterial,dY as Shape,ei as ShapeGeometry,d_ as ShapePath,e4 as ShapeUtils,ci as Skeleton,dM as SkeletonHelper,ch as SkinnedMesh,cs as Source,dD as Sphere,dB as Spherical,dK as SphericalHarmonics3,eT as SplineCurve,dL as SpotLightHelper,cf as Sprite,fH as StaticCopyUsage,fE as StaticReadUsage,fJ as StreamCopyUsage,fD as StreamDrawUsage,fG as StreamReadUsage,d4 as StringKeyframeTrack,eV as TOUCH,ek as TetrahedronGeometry,cC as TextureLoader,e5 as TextureUtils,el as TorusGeometry,em as TorusKnotGeometry,dz as Triangle,fh as TriangleFanDrawMode,fg as TriangleStripDrawMode,ff as TrianglesDrawMode,en as TubeGeometry,e_ as UVMapping,eI as Uint8BufferAttribute,eH as Uint8ClampedBufferAttribute,di as Uniform,dj as UniformsGroup,d3 as VectorKeyframeTrack,cq as VideoTexture,cb as WebGL3DRenderTarget,ca as WebGLArrayRenderTarget,fM as WebGLMultipleRenderTargets,u as WebGLRenderTarget,eo as WireframeGeometry,fc as WrapAroundEnding,fa as ZeroCurvatureEnding,fb as ZeroSlopeEnding}from"./three.core.min.js";const br=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveMap","envMap","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"];class Tr{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.refreshUniforms=br,this.renderId=0}firstInitialization(e){return!1===this.renderObjects.has(e)&&(this.getRenderObjectData(e),!0)}getRenderObjectData(e){let t=this.renderObjects.get(e);return void 0===t&&(t={material:this.getMaterialData(e.material),worldMatrix:e.object.matrixWorld.clone()},null!==e.bundle&&(t.version=e.bundle.version),this.renderObjects.set(e,t)),t}containsNode(e){const t=e.material;for(const e in t)if(t[e]&&t[e].isNode)return!0;return null!==e.renderer.nodes.modelViewMatrix||null!==e.renderer.nodes.modelNormalViewMatrix}getMaterialData(e){const t={};for(const s of this.refreshUniforms){const r=e[s];null!=r&&("object"==typeof r&&void 0!==r.clone?t[s]=r.clone():t[s]=r)}return t}equals(e){const t=this.getRenderObjectData(e);if(!0!==t.worldMatrix.equals(e.object.matrixWorld))return t.worldMatrix.copy(e.object.matrixWorld),!1;const s=t.material,r=e.material;for(const e in s){const t=s[e],i=r[e];if(void 0!==t.equals){if(!1===t.equals(i))return t.copy(i),!1}else t!==i&&(s[e]=i)}return null!==e.bundle&&(t.version=e.bundle.version),!0}needsRefresh(e,t){if(this.hasNode||this.firstInitialization(e))return!0;const{renderId:s}=t;if(this.renderId!==s)return this.renderId=s,!0;const r=!0===e.object.static,i=null!==e.bundle&&!0===e.bundle.static&&this.getRenderObjectData(e).version===e.bundle.version;if(r||i)return!1;return!0!==this.equals(e)}}function _r(e,t=!1){let s="{";!0===e.isNode&&(s+=e.id,e=e.getSelf());for(const{property:r,childNode:i}of Nr(e))s+=","+r.slice(0,-4)+":"+i.getCacheKey(t);return s+="}",s}function*Nr(e,t=!1){for(const s in e){if(!0===s.startsWith("_"))continue;const r=e[s];if(!0===Array.isArray(r))for(let e=0;e<r.length;e++){const i=r[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:s,index:e,childNode:i})}else if(r&&!0===r.isNode)yield{property:s,childNode:r};else if("object"==typeof r)for(const e in r){const i=r[e];i&&(!0===i.isNode||t&&"function"==typeof i.toJSON)&&(yield{property:s,index:e,childNode:i})}}}function vr(e){if(null==e)return null;const t=typeof e;return!0===e.isNode?"node":"number"===t?"float":"boolean"===t?"bool":"string"===t?"string":"function"===t?"shader":!0===e.isVector2?"vec2":!0===e.isVector3?"vec3":!0===e.isVector4?"vec4":!0===e.isMatrix3?"mat3":!0===e.isMatrix4?"mat4":!0===e.isColor?"color":e instanceof ArrayBuffer?"ArrayBuffer":null}function Sr(a,...o){const u=a?a.slice(-4):void 0;return 1===o.length&&("vec2"===u?o=[o[0],o[0]]:"vec3"===u?o=[o[0],o[0],o[0]]:"vec4"===u&&(o=[o[0],o[0],o[0],o[0]])),"color"===a?new e(...o):"vec2"===u?new t(...o):"vec3"===u?new s(...o):"vec4"===u?new r(...o):"mat3"===u?new i(...o):"mat4"===u?new n(...o):"bool"===a?o[0]||!1:"float"===a||"int"===a||"uint"===a?o[0]||0:"string"===a?o[0]||"":"ArrayBuffer"===a?Rr(o[0]):null}function Ar(e){let t="";const s=new Uint8Array(e);for(let e=0;e<s.length;e++)t+=String.fromCharCode(s[e]);return btoa(t)}function Rr(e){return Uint8Array.from(atob(e),(e=>e.charCodeAt(0))).buffer}var Cr=Object.freeze({__proto__:null,arrayBufferToBase64:Ar,base64ToArrayBuffer:Rr,getCacheKey:_r,getNodeChildren:Nr,getValueFromType:Sr,getValueType:vr});const Er={VERTEX:"vertex",FRAGMENT:"fragment"},wr={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},Mr={BOOLEAN:"bool",INTEGER:"int",FLOAT:"float",VECTOR2:"vec2",VECTOR3:"vec3",VECTOR4:"vec4",MATRIX2:"mat2",MATRIX3:"mat3",MATRIX4:"mat4"},Br=["fragment","vertex"],Ur=["setup","analyze","generate"],Fr=[...Br,"compute"],Pr=["x","y","z","w"];let Ir=0;class Lr extends a{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=wr.NONE,this.updateBeforeType=wr.NONE,this.updateAfterType=wr.NONE,this.uuid=o.generateUUID(),this.version=0,this._cacheKey=null,this._cacheKeyVersion=0,this.global=!1,this.isNode=!0,Object.defineProperty(this,"id",{value:Ir++})}set needsUpdate(e){!0===e&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,wr.FRAME)}onRenderUpdate(e){return this.onUpdate(e,wr.RENDER)}onObjectUpdate(e){return this.onUpdate(e,wr.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Nr(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return!0!==(e=e||this.version!==this._cacheKeyVersion)&&null!==this._cacheKey||(this._cacheKey=_r(this,e),this._cacheKeyVersion=this.version),this._cacheKey}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}setup(e){const t=e.getNodeProperties(this);let s=0;for(const e of this.getChildren())t["node"+s++]=e;return null}analyze(e){if(1===e.increaseUsage(this)){const t=e.getNodeProperties(this);for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}generate(e,t){const{outputNode:s}=e.getNodeProperties(this);if(s&&!0===s.isNode)return s.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const s=this.getShared(e);if(this!==s)return s.build(e,t);e.addNode(this),e.addChain(this);let r=null;const i=e.getBuildStage();if("setup"===i){this.updateReference(e);const t=e.getNodeProperties(this);if(!0!==t.initialized){e.stack.nodes.length;t.initialized=!0,t.outputNode=this.setup(e),null!==t.outputNode&&e.stack.nodes.length;for(const s of Object.values(t))s&&!0===s.isNode&&s.build(e)}}else if("analyze"===i)this.analyze(e);else if("generate"===i){if(1===this.generate.length){const s=this.getNodeType(e),i=e.getDataFromNode(this);r=i.snippet,void 0===r&&(r=this.generate(e)||"",i.snippet=r),r=e.format(r,s,t)}else r=this.generate(e,t)||""}return e.removeChain(this),r}getSerializeChildren(){return Nr(this)}serialize(e){const t=this.getSerializeChildren(),s={};for(const{property:r,index:i,childNode:n}of t)void 0!==i?(void 0===s[r]&&(s[r]=Number.isInteger(i)?[]:{}),s[r][i]=n.toJSON(e.meta).uuid):s[r]=n.toJSON(e.meta).uuid;Object.keys(s).length>0&&(e.inputNodes=s)}deserialize(e){if(void 0!==e.inputNodes){const t=e.meta.nodes;for(const s in e.inputNodes)if(Array.isArray(e.inputNodes[s])){const r=[];for(const i of e.inputNodes[s])r.push(t[i]);this[s]=r}else if("object"==typeof e.inputNodes[s]){const r={};for(const i in e.inputNodes[s]){const n=e.inputNodes[s][i];r[i]=t[n]}this[s]=r}else{const r=e.inputNodes[s];this[s]=t[r]}}}toJSON(e){const{uuid:t,type:s}=this,r=void 0===e||"string"==typeof e;r&&(e={textures:{},images:{},nodes:{}});let i=e.nodes[t];function n(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(void 0===i&&(i={uuid:t,type:s,meta:e,metadata:{version:4.6,type:"Node",generator:"Node.toJSON"}},!0!==r&&(e.nodes[i.uuid]=i),this.serialize(i),delete i.meta),r){const t=n(e.textures),s=n(e.images),r=n(e.nodes);t.length>0&&(i.textures=t),s.length>0&&(i.images=s),r.length>0&&(i.nodes=r)}return i}}class Vr extends Lr{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){return`${this.node.build(e)}[ ${this.indexNode.build(e,"uint")} ]`}}class Dr extends Lr{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let s=null;for(const r of this.convertTo.split("|"))null!==s&&e.getTypeLength(t)!==e.getTypeLength(r)||(s=r);return s}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const s=this.node,r=this.getNodeType(e),i=s.build(e,r);return e.format(i,r,t)}}class Or extends Lr{static get type(){return"TempNode"}constructor(e){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if("generate"===e.getBuildStage()){const s=e.getVectorType(this.getNodeType(e,t)),r=e.getDataFromNode(this);if(void 0!==r.propertyName)return e.format(r.propertyName,s,t);if("void"!==s&&"void"!==t&&this.hasDependencies(e)){const i=super.build(e,s),n=e.getVarFromNode(this,null,s),a=e.getPropertyName(n);return e.addLineFlowCode(`${a} = ${i}`),r.snippet=i,r.propertyName=a,e.format(r.propertyName,s,t)}}return super.build(e,t)}}class Gr extends Or{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return null!==this.nodeType?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce(((t,s)=>t+e.getTypeLength(s.getNodeType(e))),0))}generate(e,t){const s=this.getNodeType(e),r=this.nodes,i=e.getComponentType(s),n=[];for(const t of r){let s=t.build(e);const r=e.getComponentType(t.getNodeType(e));r!==i&&(s=e.format(s,r,i)),n.push(s)}const a=`${e.getType(s)}( ${n.join(", ")} )`;return e.format(a,s,t)}}const zr=Pr.join("");class kr extends Lr{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(Pr.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const s=this.node,r=e.getTypeLength(s.getNodeType(e));let i=null;if(r>1){let n=null;this.getVectorLength()>=r&&(n=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const a=s.build(e,n);i=this.components.length===r&&this.components===zr.slice(0,this.components.length)?e.format(a,n,t):e.format(`${a}.${this.components}`,this.getNodeType(e),t)}else i=s.build(e,t);return i}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class $r extends Or{static get type(){return"SetNode"}constructor(e,t,s){super(),this.sourceNode=e,this.components=t,this.targetNode=s}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:s,targetNode:r}=this,i=this.getNodeType(e),n=e.getTypeFromLength(s.length),a=r.build(e,n),o=t.build(e,i),u=e.getTypeLength(i),l=[];for(let e=0;e<u;e++){const t=Pr[e];t===s[0]?(l.push(a),e+=s.length-1):l.push(o+"."+t)}return`${e.getType(i)}( ${l.join(", ")} )`}}class Hr extends Or{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:s}=this,r=this.getNodeType(e),i=s.build(e),n=e.getVarFromNode(this),a=e.getPropertyName(n);e.addLineFlowCode(a+" = "+i);const o=e.getTypeLength(r),u=[];let l=0;for(let e=0;e<o;e++){const s=Pr[e];s===t[l]?(u.push("1.0 - "+a+"."+s),l++):u.push(a+"."+s)}return`${e.getType(r)}( ${u.join(", ")} )`}}class Wr extends Lr{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return null===this.nodeType?vr(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=vr(this.value),e.nodeType=this.nodeType,"ArrayBuffer"===e.valueType&&(e.value=Ar(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?Sr(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}class jr extends Wr{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const s=this.getNodeType(e);return e.format(this.generateConst(e),s,t)}}let qr=null;const Xr=new Map;function Kr(e,t){if(Xr.has(e))console.warn(`Redefinition of method chaining ${e}`);else{if("function"!=typeof t)throw new Error(`Node element ${e} is not a function`);Xr.set(e,t)}}const Yr=e=>e.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),Qr=e=>Yr(e).split("").sort().join(""),Zr={setup(e,t){const s=t.shift();return e(Ci(s),...t)},get(e,t,s){if("string"==typeof t&&void 0===e[t]){if(!0!==e.isStackNode&&"assign"===t)return(...e)=>(qr.assign(s,...e),s);if(Xr.has(t)){const r=Xr.get(t);return e.isStackNode?(...e)=>s.add(r(...e)):(...e)=>r(s,...e)}if("self"===t)return e;if(t.endsWith("Assign")&&Xr.has(t.slice(0,t.length-6))){const r=Xr.get(t.slice(0,t.length-6));return e.isStackNode?(...e)=>s.assign(e[0],r(...e)):(...e)=>s.assign(r(s,...e))}if(!0===/^[xyzwrgbastpq]{1,4}$/.test(t))return t=Yr(t),Ri(new kr(s,t));if(!0===/^set[XYZWRGBASTPQ]{1,4}$/.test(t))return t=Qr(t.slice(3).toLowerCase()),s=>Ri(new $r(e,t,s));if(!0===/^flip[XYZWRGBASTPQ]{1,4}$/.test(t))return t=Qr(t.slice(4).toLowerCase()),()=>Ri(new Hr(Ri(e),t));if("width"===t||"height"===t||"depth"===t)return"width"===t?t="x":"height"===t?t="y":"depth"===t&&(t="z"),Ri(new kr(e,t));if(!0===/^\d+$/.test(t))return Ri(new Vr(s,new jr(Number(t),"uint")))}return Reflect.get(e,t,s)},set:(e,t,s,r)=>"string"!=typeof t||void 0!==e[t]||!0!==/^[xyzwrgbastpq]{1,4}$/.test(t)&&"width"!==t&&"height"!==t&&"depth"!==t&&!0!==/^\d+$/.test(t)?Reflect.set(e,t,s,r):(r[t].assign(s),!0)},Jr=new WeakMap,ti=new WeakMap,si=function(e,t=null){for(const s in e)e[s]=Ri(e[s],t);return e},ri=function(e,t=null){const s=e.length;for(let r=0;r<s;r++)e[r]=Ri(e[r],t);return e},ii=function(e,t=null,s=null,r=null){const i=e=>Ri(null!==r?Object.assign(e,r):e);return null===t?(...t)=>i(new e(...Ei(t))):null!==s?(s=Ri(s),(...r)=>i(new e(t,...Ei(r),s))):(...s)=>i(new e(t,...Ei(s)))},ni=function(e,...t){return Ri(new e(...Ei(t)))};class ai extends Lr{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}call(e){const{shaderNode:t,inputNodes:s}=this,r=e.getNodeProperties(t);if(r.onceOutput)return r.onceOutput;let i=null;if(t.layout){let r=ti.get(e.constructor);void 0===r&&(r=new WeakMap,ti.set(e.constructor,r));let n=r.get(t);void 0===n&&(n=Ri(e.buildFunctionNode(t)),r.set(t,n)),null!==e.currentFunctionNode&&e.currentFunctionNode.includes.push(n),i=Ri(n.call(s))}else{const r=t.jsFunc,n=null!==s?r(s,e):r(e);i=Ri(n)}return t.once&&(r.onceOutput=i),i}getOutputNode(e){const t=e.getNodeProperties(this);return null===t.outputNode&&(t.outputNode=this.setupOutput(e)),t.outputNode}setup(e){return this.getOutputNode(e)}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}generate(e,t){return this.getOutputNode(e).build(e,t)}}class oi extends Lr{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return Ci(e),Ri(new ai(this,e))}setup(){return this.call()}}const ui=[!1,!0],li=[0,1,2,3],hi=[-1,-2],pi=[.5,1.5,1/3,1e-6,1e6,Math.PI,2*Math.PI,1/Math.PI,2/Math.PI,1/(2*Math.PI),Math.PI/2],gi=new Map;for(const e of ui)gi.set(e,new jr(e));const mi=new Map;for(const e of li)mi.set(e,new jr(e,"uint"));const xi=new Map([...mi].map((e=>new jr(e.value,"int"))));for(const e of hi)xi.set(e,new jr(e,"int"));const yi=new Map([...xi].map((e=>new jr(e.value))));for(const e of pi)yi.set(e,new jr(e));for(const e of pi)yi.set(-e,new jr(-e));const bi={bool:gi,uint:mi,ints:xi,float:yi},Ti=new Map([...gi,...yi]),_i=(e,t)=>Ti.has(e)?Ti.get(e):!0===e.isNode?e:new jr(e,t),Ni=function(e,t=null){return(...s)=>{if((0===s.length||!["bool","float","int","uint"].includes(e)&&s.every((e=>"object"!=typeof e)))&&(s=[Sr(e,...s)]),1===s.length&&null!==t&&t.has(s[0]))return Ri(t.get(s[0]));if(1===s.length){const t=_i(s[0],e);return(e=>{try{return e.getNodeType()}catch(e){return}})(t)===e?Ri(t):Ri(new Dr(t,e))}const r=s.map((e=>_i(e)));return Ri(new Gr(r,e))}},vi=e=>"object"==typeof e&&null!==e?e.value:e,Si=e=>null!=e?e.nodeType||e.convertTo||("string"==typeof e?e:null):null;function Ai(e,t){return new Proxy(new oi(e,t),Zr)}const Ri=(e,t=null)=>function(e,t=null){const s=vr(e);if("node"===s){let t=Jr.get(e);return void 0===t&&(t=new Proxy(e,Zr),Jr.set(e,t),Jr.set(t,t)),t}return null===t&&("float"===s||"boolean"===s)||s&&"shader"!==s&&"string"!==s?Ri(_i(e,t)):"shader"===s?Bi(e):e}(e,t),Ci=(e,t=null)=>new si(e,t),Ei=(e,t=null)=>new ri(e,t),wi=(...e)=>new ii(...e),Mi=(...e)=>new ni(...e),Bi=(e,t)=>{const s=new Ai(e,t),r=(...e)=>{let t;return Ci(e),t=e[0]&&e[0].isNode?[...e]:e[0],s.call(t)};return r.shaderNode=s,r.setLayout=e=>(s.setLayout(e),r),r.once=()=>(s.once=!0,r),r},Ui=(...e)=>(console.warn("TSL.ShaderNode: tslFn() has been renamed to Fn()."),Bi(...e));Kr("toGlobal",(e=>(e.global=!0,e)));const Fi=e=>{qr=e},Pi=()=>qr,Ii=(...e)=>qr.If(...e);function Li(e){return qr&&qr.add(e),e}Kr("append",Li);const Vi=new Ni("color"),Di=new Ni("float",bi.float),Oi=new Ni("int",bi.ints),Gi=new Ni("uint",bi.uint),zi=new Ni("bool",bi.bool),ki=new Ni("vec2"),$i=new Ni("ivec2"),Hi=new Ni("uvec2"),Wi=new Ni("bvec2"),ji=new Ni("vec3"),qi=new Ni("ivec3"),Xi=new Ni("uvec3"),Ki=new Ni("bvec3"),Yi=new Ni("vec4"),Qi=new Ni("ivec4"),Zi=new Ni("uvec4"),Ji=new Ni("bvec4"),tn=new Ni("mat2"),sn=new Ni("mat3"),rn=new Ni("mat4"),nn=(e="")=>Ri(new jr(e,"string")),on=e=>Ri(new jr(e,"ArrayBuffer"));Kr("toColor",Vi),Kr("toFloat",Di),Kr("toInt",Oi),Kr("toUint",Gi),Kr("toBool",zi),Kr("toVec2",ki),Kr("toIVec2",$i),Kr("toUVec2",Hi),Kr("toBVec2",Wi),Kr("toVec3",ji),Kr("toIVec3",qi),Kr("toUVec3",Xi),Kr("toBVec3",Ki),Kr("toVec4",Yi),Kr("toIVec4",Qi),Kr("toUVec4",Zi),Kr("toBVec4",Ji),Kr("toMat2",tn),Kr("toMat3",sn),Kr("toMat4",rn);const un=wi(Vr),ln=(e,t)=>Ri(new Dr(Ri(e),t)),dn=(e,t)=>Ri(new kr(Ri(e),t));Kr("element",un),Kr("convert",ln);class hn extends Lr{static get type(){return"UniformGroupNode"}constructor(e,t=!1,s=1){super("string"),this.name=e,this.version=0,this.shared=t,this.order=s,this.isUniformGroup=!0}set needsUpdate(e){!0===e&&this.version++}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const pn=e=>new hn(e),gn=(e,t=0)=>new hn(e,!0,t),mn=gn("frame"),fn=gn("render"),xn=pn("object");class yn extends Wr{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=xn}label(e){return this.name=e,this}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const s=this.getSelf();return e=e.bind(s),super.onUpdate((t=>{const r=e(t,s);void 0!==r&&(this.value=r)}),t)}generate(e,t){const s=this.getNodeType(e),r=this.getUniformHash(e);let i=e.getNodeFromHash(r);void 0===i&&(e.setHashNode(this,r),i=this);const n=i.getInputType(e),a=e.getUniformFromNode(i,n,e.shaderStage,this.name||e.context.label),o=e.getPropertyName(a);return void 0!==e.context.label&&delete e.context.label,e.format(o,s,t)}}const bn=(e,t)=>{const s=Si(t||e),r=e&&!0===e.isNode?e.node&&e.node.value||e.value:e;return Ri(new yn(r,s))};class Tn extends Lr{static get type(){return"PropertyNode"}constructor(e,t=null,s=!1){super(e),this.name=t,this.varying=s,this.isPropertyNode=!0}getHash(e){return this.name||super.getHash(e)}isGlobal(){return!0}generate(e){let t;return!0===this.varying?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const _n=(e,t)=>Ri(new Tn(e,t)),Nn=(e,t)=>Ri(new Tn(e,t,!0)),vn=Mi(Tn,"vec4","DiffuseColor"),Sn=Mi(Tn,"vec3","EmissiveColor"),An=Mi(Tn,"float","Roughness"),Rn=Mi(Tn,"float","Metalness"),Cn=Mi(Tn,"float","Clearcoat"),En=Mi(Tn,"float","ClearcoatRoughness"),wn=Mi(Tn,"vec3","Sheen"),Mn=Mi(Tn,"float","SheenRoughness"),Bn=Mi(Tn,"float","Iridescence"),Un=Mi(Tn,"float","IridescenceIOR"),Fn=Mi(Tn,"float","IridescenceThickness"),Pn=Mi(Tn,"float","AlphaT"),In=Mi(Tn,"float","Anisotropy"),Ln=Mi(Tn,"vec3","AnisotropyT"),Vn=Mi(Tn,"vec3","AnisotropyB"),Dn=Mi(Tn,"color","SpecularColor"),On=Mi(Tn,"float","SpecularF90"),Gn=Mi(Tn,"float","Shininess"),zn=Mi(Tn,"vec4","Output"),kn=Mi(Tn,"float","dashSize"),$n=Mi(Tn,"float","gapSize"),Hn=Mi(Tn,"float","pointWidth"),Wn=Mi(Tn,"float","IOR"),jn=Mi(Tn,"float","Transmission"),qn=Mi(Tn,"float","Thickness"),Xn=Mi(Tn,"float","AttenuationDistance"),Kn=Mi(Tn,"color","AttenuationColor"),Yn=Mi(Tn,"float","Dispersion");class Qn extends Or{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t}hasDependencies(){return!1}getNodeType(e,t){return"void"!==t?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(!1===e.isAvailable("swizzleAssign")&&t.isSplitNode&&t.components.length>1){const s=e.getTypeLength(t.node.getNodeType(e));return Pr.join("").slice(0,s)!==t.components}return!1}generate(e,t){const{targetNode:s,sourceNode:r}=this,i=this.needsSplitAssign(e),n=s.getNodeType(e),a=s.context({assign:!0}).build(e),o=r.build(e,n),u=r.getNodeType(e),l=e.getDataFromNode(this);let d;if(!0===l.initialized)"void"!==t&&(d=a);else if(i){const r=e.getVarFromNode(this,null,n),i=e.getPropertyName(r);e.addLineFlowCode(`${i} = ${o}`);const u=s.node.context({assign:!0}).build(e);for(let t=0;t<s.components.length;t++){const r=s.components[t];e.addLineFlowCode(`${u}.${r} = ${i}[ ${t} ]`)}"void"!==t&&(d=a)}else d=`${a} = ${o}`,"void"!==t&&"void"!==u||(e.addLineFlowCode(d),"void"!==t&&(d=a));return l.initialized=!0,e.format(d,n,t)}}const Zn=wi(Qn);Kr("assign",Zn);class Jn extends Or{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],s=this.functionNode,r=s.getInputs(e),i=this.parameters;if(Array.isArray(i))for(let s=0;s<i.length;s++){const n=r[s],a=i[s];t.push(a.build(e,n.type))}else for(const s of r){const r=i[s.name];if(void 0===r)throw new Error(`FunctionCallNode: Input '${s.name}' not found in FunctionNode.`);t.push(r.build(e,s.type))}return`${s.build(e,"property")}( ${t.join(", ")} )`}}const ta=(e,...t)=>(t=t.length>1||t[0]&&!0===t[0].isNode?Ei(t):Ci(t[0]),Ri(new Jn(Ri(e),t)));Kr("call",ta);class sa extends Or{static get type(){return"OperatorNode"}constructor(e,t,s,...r){if(super(),r.length>0){let i=new sa(e,t,s);for(let t=0;t<r.length-1;t++)i=new sa(e,i,r[t]);t=i,s=r[r.length-1]}this.op=e,this.aNode=t,this.bNode=s}getNodeType(e,t){const s=this.op,r=this.aNode,i=this.bNode,n=r.getNodeType(e),a=void 0!==i?i.getNodeType(e):null;if("void"===n||"void"===a)return"void";if("%"===s)return n;if("~"===s||"&"===s||"|"===s||"^"===s||">>"===s||"<<"===s)return e.getIntegerType(n);if("!"===s||"=="===s||"&&"===s||"||"===s||"^^"===s)return"bool";if("<"===s||">"===s||"<="===s||">="===s){const s=t?e.getTypeLength(t):Math.max(e.getTypeLength(n),e.getTypeLength(a));return s>1?`bvec${s}`:"bool"}return"float"===n&&e.isMatrix(a)?a:e.isMatrix(n)&&e.isVector(a)?e.getVectorFromMatrix(n):e.isVector(n)&&e.isMatrix(a)?e.getVectorFromMatrix(a):e.getTypeLength(a)>e.getTypeLength(n)?a:n}generate(e,t){const s=this.op,r=this.aNode,i=this.bNode,n=this.getNodeType(e,t);let a=null,o=null;"void"!==n?(a=r.getNodeType(e),o=void 0!==i?i.getNodeType(e):null,"<"===s||">"===s||"<="===s||">="===s||"=="===s?e.isVector(a)?o=a:a!==o&&(a=o="float"):">>"===s||"<<"===s?(a=n,o=e.changeComponentType(o,"uint")):e.isMatrix(a)&&e.isVector(o)?o=e.getVectorFromMatrix(a):a=e.isVector(a)&&e.isMatrix(o)?e.getVectorFromMatrix(o):o=n):a=o=n;const u=r.build(e,a),l=void 0!==i?i.build(e,o):null,d=e.getTypeLength(t),c=e.getFunctionOperator(s);return"void"!==t?"<"===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThan",t)}( ${u}, ${l} )`,n,t):e.format(`( ${u} < ${l} )`,n,t):"<="===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("lessThanEqual",t)}( ${u}, ${l} )`,n,t):e.format(`( ${u} <= ${l} )`,n,t):">"===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThan",t)}( ${u}, ${l} )`,n,t):e.format(`( ${u} > ${l} )`,n,t):">="===s&&d>1?e.useComparisonMethod?e.format(`${e.getMethod("greaterThanEqual",t)}( ${u}, ${l} )`,n,t):e.format(`( ${u} >= ${l} )`,n,t):"!"===s||"~"===s?e.format(`(${s}${u})`,a,t):c?e.format(`${c}( ${u}, ${l} )`,n,t):e.format(`( ${u} ${s} ${l} )`,n,t):"void"!==a?c?e.format(`${c}( ${u}, ${l} )`,n,t):e.format(`${u} ${s} ${l}`,n,t):void 0}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const ra=wi(sa,"+"),ia=wi(sa,"-"),na=wi(sa,"*"),aa=wi(sa,"/"),oa=wi(sa,"%"),ua=wi(sa,"=="),la=wi(sa,"!="),ha=wi(sa,"<"),pa=wi(sa,">"),ga=wi(sa,"<="),ma=wi(sa,">="),xa=wi(sa,"&&"),ya=wi(sa,"||"),ba=wi(sa,"!"),Ta=wi(sa,"^^"),_a=wi(sa,"&"),Na=wi(sa,"~"),va=wi(sa,"|"),Sa=wi(sa,"^"),Aa=wi(sa,"<<"),Ra=wi(sa,">>");Kr("add",ra),Kr("sub",ia),Kr("mul",na),Kr("div",aa),Kr("modInt",oa),Kr("equal",ua),Kr("notEqual",la),Kr("lessThan",ha),Kr("greaterThan",pa),Kr("lessThanEqual",ga),Kr("greaterThanEqual",ma),Kr("and",xa),Kr("or",ya),Kr("not",ba),Kr("xor",Ta),Kr("bitAnd",_a),Kr("bitNot",Na),Kr("bitOr",va),Kr("bitXor",Sa),Kr("shiftLeft",Aa),Kr("shiftRight",Ra);const Ca=(...e)=>(console.warn("TSL.OperatorNode: .remainder() has been renamed to .modInt()."),oa(...e));Kr("remainder",Ca);class Ea extends Or{static get type(){return"MathNode"}constructor(e,t,s=null,r=null){super(),this.method=e,this.aNode=t,this.bNode=s,this.cNode=r}getInputType(e){const t=this.aNode.getNodeType(e),s=this.bNode?this.bNode.getNodeType(e):null,r=this.cNode?this.cNode.getNodeType(e):null,i=e.isMatrix(t)?0:e.getTypeLength(t),n=e.isMatrix(s)?0:e.getTypeLength(s),a=e.isMatrix(r)?0:e.getTypeLength(r);return i>n&&i>a?t:n>a?s:a>i?r:t}getNodeType(e){const t=this.method;return t===Ea.LENGTH||t===Ea.DISTANCE||t===Ea.DOT?"float":t===Ea.CROSS?"vec3":t===Ea.ALL?"bool":t===Ea.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):t===Ea.MOD?this.aNode.getNodeType(e):this.getInputType(e)}generate(e,t){const s=this.method,r=this.getNodeType(e),i=this.getInputType(e),n=this.aNode,a=this.bNode,o=this.cNode,u=!0===e.renderer.isWebGLRenderer;if(s===Ea.TRANSFORM_DIRECTION){let s=n,r=a;e.isMatrix(s.getNodeType(e))?r=Yi(ji(r),0):s=Yi(ji(s),0);const i=na(s,r).xyz;return ja(i).build(e,t)}if(s===Ea.NEGATE)return e.format("( - "+n.build(e,i)+" )",r,t);if(s===Ea.ONE_MINUS)return ia(1,n).build(e,t);if(s===Ea.RECIPROCAL)return aa(1,n).build(e,t);if(s===Ea.DIFFERENCE)return to(ia(n,a)).build(e,t);{const l=[];return s===Ea.CROSS||s===Ea.MOD?l.push(n.build(e,r),a.build(e,r)):u&&s===Ea.STEP?l.push(n.build(e,1===e.getTypeLength(n.getNodeType(e))?"float":i),a.build(e,i)):u&&(s===Ea.MIN||s===Ea.MAX)||s===Ea.MOD?l.push(n.build(e,i),a.build(e,1===e.getTypeLength(a.getNodeType(e))?"float":i)):s===Ea.REFRACT?l.push(n.build(e,i),a.build(e,i),o.build(e,"float")):s===Ea.MIX?l.push(n.build(e,i),a.build(e,i),o.build(e,1===e.getTypeLength(o.getNodeType(e))?"float":i)):(l.push(n.build(e,i)),null!==a&&l.push(a.build(e,i)),null!==o&&l.push(o.build(e,i))),e.format(`${e.getMethod(s,r)}( ${l.join(", ")} )`,r,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Ea.ALL="all",Ea.ANY="any",Ea.EQUALS="equals",Ea.RADIANS="radians",Ea.DEGREES="degrees",Ea.EXP="exp",Ea.EXP2="exp2",Ea.LOG="log",Ea.LOG2="log2",Ea.SQRT="sqrt",Ea.INVERSE_SQRT="inversesqrt",Ea.FLOOR="floor",Ea.CEIL="ceil",Ea.NORMALIZE="normalize",Ea.FRACT="fract",Ea.SIN="sin",Ea.COS="cos",Ea.TAN="tan",Ea.ASIN="asin",Ea.ACOS="acos",Ea.ATAN="atan",Ea.ABS="abs",Ea.SIGN="sign",Ea.LENGTH="length",Ea.NEGATE="negate",Ea.ONE_MINUS="oneMinus",Ea.DFDX="dFdx",Ea.DFDY="dFdy",Ea.ROUND="round",Ea.RECIPROCAL="reciprocal",Ea.TRUNC="trunc",Ea.FWIDTH="fwidth",Ea.BITCAST="bitcast",Ea.TRANSPOSE="transpose",Ea.ATAN2="atan2",Ea.MIN="min",Ea.MAX="max",Ea.MOD="mod",Ea.STEP="step",Ea.REFLECT="reflect",Ea.DISTANCE="distance",Ea.DIFFERENCE="difference",Ea.DOT="dot",Ea.CROSS="cross",Ea.POW="pow",Ea.TRANSFORM_DIRECTION="transformDirection",Ea.MIX="mix",Ea.CLAMP="clamp",Ea.REFRACT="refract",Ea.SMOOTHSTEP="smoothstep",Ea.FACEFORWARD="faceforward";const wa=Di(1e-6),Ma=Di(1e6),Ba=Di(Math.PI),Ua=Di(2*Math.PI),Fa=wi(Ea,Ea.ALL),Pa=wi(Ea,Ea.ANY),Ia=wi(Ea,Ea.EQUALS),La=wi(Ea,Ea.RADIANS),Va=wi(Ea,Ea.DEGREES),Da=wi(Ea,Ea.EXP),Oa=wi(Ea,Ea.EXP2),Ga=wi(Ea,Ea.LOG),za=wi(Ea,Ea.LOG2),ka=wi(Ea,Ea.SQRT),$a=wi(Ea,Ea.INVERSE_SQRT),Ha=wi(Ea,Ea.FLOOR),Wa=wi(Ea,Ea.CEIL),ja=wi(Ea,Ea.NORMALIZE),qa=wi(Ea,Ea.FRACT),Xa=wi(Ea,Ea.SIN),Ka=wi(Ea,Ea.COS),Ya=wi(Ea,Ea.TAN),Qa=wi(Ea,Ea.ASIN),Za=wi(Ea,Ea.ACOS),Ja=wi(Ea,Ea.ATAN),to=wi(Ea,Ea.ABS),so=wi(Ea,Ea.SIGN),ro=wi(Ea,Ea.LENGTH),io=wi(Ea,Ea.NEGATE),no=wi(Ea,Ea.ONE_MINUS),oo=wi(Ea,Ea.DFDX),uo=wi(Ea,Ea.DFDY),lo=wi(Ea,Ea.ROUND),ho=wi(Ea,Ea.RECIPROCAL),po=wi(Ea,Ea.TRUNC),go=wi(Ea,Ea.FWIDTH),mo=wi(Ea,Ea.BITCAST),fo=wi(Ea,Ea.TRANSPOSE),xo=wi(Ea,Ea.ATAN2),yo=wi(Ea,Ea.MIN),bo=wi(Ea,Ea.MAX),To=wi(Ea,Ea.MOD),_o=wi(Ea,Ea.STEP),No=wi(Ea,Ea.REFLECT),vo=wi(Ea,Ea.DISTANCE),So=wi(Ea,Ea.DIFFERENCE),Ao=wi(Ea,Ea.DOT),Ro=wi(Ea,Ea.CROSS),Co=wi(Ea,Ea.POW),Eo=wi(Ea,Ea.POW,2),wo=wi(Ea,Ea.POW,3),Mo=wi(Ea,Ea.POW,4),Bo=wi(Ea,Ea.TRANSFORM_DIRECTION),Uo=e=>na(so(e),Co(to(e),1/3)),Fo=e=>Ao(e,e),Po=wi(Ea,Ea.MIX),Io=(e,t=0,s=1)=>Ri(new Ea(Ea.CLAMP,Ri(e),Ri(t),Ri(s))),Lo=e=>Io(e),Vo=wi(Ea,Ea.REFRACT),Do=wi(Ea,Ea.SMOOTHSTEP),Oo=wi(Ea,Ea.FACEFORWARD),Go=Bi((([e])=>{const t=Ao(e.xy,ki(12.9898,78.233)),s=To(t,Ba);return qa(Xa(s).mul(43758.5453))})),zo=(e,t,s)=>Po(t,s,e),ko=(e,t,s)=>Do(t,s,e);Kr("all",Fa),Kr("any",Pa),Kr("equals",Ia),Kr("radians",La),Kr("degrees",Va),Kr("exp",Da),Kr("exp2",Oa),Kr("log",Ga),Kr("log2",za),Kr("sqrt",ka),Kr("inverseSqrt",$a),Kr("floor",Ha),Kr("ceil",Wa),Kr("normalize",ja),Kr("fract",qa),Kr("sin",Xa),Kr("cos",Ka),Kr("tan",Ya),Kr("asin",Qa),Kr("acos",Za),Kr("atan",Ja),Kr("abs",to),Kr("sign",so),Kr("length",ro),Kr("lengthSq",Fo),Kr("negate",io),Kr("oneMinus",no),Kr("dFdx",oo),Kr("dFdy",uo),Kr("round",lo),Kr("reciprocal",ho),Kr("trunc",po),Kr("fwidth",go),Kr("atan2",xo),Kr("min",yo),Kr("max",bo),Kr("mod",To),Kr("step",_o),Kr("reflect",No),Kr("distance",vo),Kr("dot",Ao),Kr("cross",Ro),Kr("pow",Co),Kr("pow2",Eo),Kr("pow3",wo),Kr("pow4",Mo),Kr("transformDirection",Bo),Kr("mix",zo),Kr("clamp",Io),Kr("refract",Vo),Kr("smoothstep",ko),Kr("faceForward",Oo),Kr("difference",So),Kr("saturate",Lo),Kr("cbrt",Uo),Kr("transpose",fo),Kr("rand",Go);class $o extends Lr{static get type(){return"ConditionalNode"}constructor(e,t,s=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=s}getNodeType(e){const t=this.ifNode.getNodeType(e);if(null!==this.elseNode){const s=this.elseNode.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(t))return s}return t}setup(e){const t=e.getNodeProperties(this);t.condNode=this.condNode.cache(),t.ifNode=this.ifNode.cache(),t.elseNode=this.elseNode?this.elseNode.cache():null}generate(e,t){const s=this.getNodeType(e),r=e.getDataFromNode(this);if(void 0!==r.nodeProperty)return r.nodeProperty;const{condNode:i,ifNode:n,elseNode:a}=e.getNodeProperties(this),o="void"!==t,u=o?_n(s).build(e):"";r.nodeProperty=u;const l=i.build(e,"bool");e.addFlowCode(`\n${e.tab}if ( ${l} ) {\n\n`).addFlowTab();let d=n.build(e,s);if(d&&(d=o?u+" = "+d+";":"return "+d+";"),e.removeFlowTab().addFlowCode(e.tab+"\t"+d+"\n\n"+e.tab+"}"),null!==a){e.addFlowCode(" else {\n\n").addFlowTab();let t=a.build(e,s);t&&(t=o?u+" = "+t+";":"return "+t+";"),e.removeFlowTab().addFlowCode(e.tab+"\t"+t+"\n\n"+e.tab+"}\n\n")}else e.addFlowCode("\n\n");return e.format(u,s,t)}}const Ho=wi($o);Kr("select",Ho);const Wo=(...e)=>(console.warn("TSL.ConditionalNode: cond() has been renamed to select()."),Ho(...e));Kr("cond",Wo);class jo extends Lr{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){this.node.build(e)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value});const s=this.node.build(e);return e.setContext(t),s}generate(e,t){const s=e.getContext();e.setContext({...e.context,...this.value});const r=this.node.build(e,t);return e.setContext(s),r}}const qo=wi(jo),Xo=(e,t)=>qo(e,{label:t});Kr("context",qo),Kr("label",Xo);class Ko extends Lr{static get type(){return"VarNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}generate(e){const{node:t,name:s}=this,r=e.getVarFromNode(this,s,e.getVectorType(this.getNodeType(e))),i=e.getPropertyName(r),n=t.build(e,r.type);return e.addLineFlowCode(`${i} = ${n}`),i}}const Yo=wi(Ko);Kr("temp",Yo),Kr("toVar",((...e)=>Yo(...e).append()));class Qo extends Lr{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0}isGlobal(){return!0}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let s=t.varying;if(void 0===s){const r=this.name,i=this.getNodeType(e);t.varying=s=e.getVaryingFromNode(this,r,i),t.node=this.node}return s.needsInterpolation||(s.needsInterpolation="fragment"===e.shaderStage),s}setup(e){this.setupVarying(e)}analyze(e){return this.setupVarying(e),this.node.analyze(e)}generate(e){const t=e.getNodeProperties(this),s=this.setupVarying(e);if(void 0===t.propertyName){const r=this.getNodeType(e),i=e.getPropertyName(s,Er.VERTEX);e.flowNodeFromShaderStage(Er.VERTEX,this.node,r,i),t.propertyName=i}return e.getPropertyName(s)}}const Zo=wi(Qo);Kr("varying",Zo);const Jo="WorkingColorSpace",eu="OutputColorSpace";function tu(e){let t=null;return e===d?t="Linear":e===c&&(t="sRGB"),t}function su(e,t){return tu(e)+"To"+tu(t)}class ru extends Or{static get type(){return"ColorSpaceNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.source=t,this.target=s}getColorSpace(e,t){return t===Jo?l.workingColorSpace:t===eu?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{renderer:t}=e,{colorNode:s}=this,r=this.getColorSpace(e,this.source),i=this.getColorSpace(e,this.target);if(r===i)return s;const n=su(r,i);let a=null;const o=t.nodes.library.getColorSpaceFunction(n);return null!==o?a=Yi(o(s.rgb),s.a):(console.error("ColorSpaceNode: Unsupported Color Space configuration.",n),a=s),a}}const iu=e=>Ri(new ru(Ri(e),Jo,eu)),nu=e=>Ri(new ru(Ri(e),eu,Jo)),au=(e,t)=>Ri(new ru(Ri(e),Jo,t)),ou=(e,t)=>Ri(new ru(Ri(e),t,Jo));Kr("toOutputColorSpace",iu),Kr("toWorkingColorSpace",nu),Kr("workingToColorSpace",au),Kr("colorSpaceToWorking",ou);let uu=class extends Vr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,s,r)}};class lu extends Lr{static get type(){return"ReferenceBaseNode"}constructor(e,t,s=null,r=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=r,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=wr.OBJECT}setGroup(e){return this.group=e,this}element(e){return Ri(new uu(this,Ri(e)))}setNodeType(e){const t=bn(null,e).getSelf();null!==this.group&&t.setGroup(this.group),this.node=t}getNodeType(e){return null===this.node&&this.updateValue(),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let e=1;e<t.length;e++)s=s[t[e]];return s}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class hu extends lu{static get type(){return"RendererReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.renderer=s,this.setGroup(fn)}updateReference(e){return this.reference=null!==this.renderer?this.renderer:e.renderer,this.reference}}const pu=(e,t,s)=>Ri(new hu(e,t,s));class gu extends Or{static get type(){return"ToneMappingNode"}constructor(e,t=fu,s=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=s}getCacheKey(){let e=super.getCacheKey();return e="{toneMapping:"+this.toneMapping+",nodes:"+e+"}",e}setup(e){const t=this.colorNode||e.context.color,s=this.toneMapping;if(s===h)return t;let r=null;const i=e.renderer.nodes.library.getToneMappingFunction(s);return null!==i?r=Yi(i(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",s),r=t),r}}const mu=(e,t,s)=>Ri(new gu(e,Ri(t),Ri(s))),fu=pu("toneMappingExposure","float");Kr("toneMapping",((e,t,s)=>mu(t,s,e)));class xu extends Wr{static get type(){return"BufferAttributeNode"}constructor(e,t=null,s=0,r=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=s,this.bufferOffset=r,this.usage=p,this.instanced=!1,this.attribute=null,this.global=!0,e&&!0===e.isBufferAttribute&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(0===this.bufferStride&&0===this.bufferOffset){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return null===this.bufferType&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(null!==this.attribute)return;const t=this.getNodeType(e),s=this.value,r=e.getTypeLength(t),i=this.bufferStride||r,n=this.bufferOffset,a=!0===s.isInterleavedBuffer?s:new m(s,i),o=new x(a,r,n);a.setUsage(this.usage),this.attribute=o,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),s=e.getBufferAttributeFromNode(this,t),r=e.getPropertyName(s);let i=null;if("vertex"===e.shaderStage||"compute"===e.shaderStage)this.name=r,i=r;else{i=Zo(this).build(e,t)}return i}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&!0===this.attribute.isBufferAttribute&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const yu=(e,t,s,r)=>Ri(new xu(e,t,s,r)),bu=(e,t,s,r)=>yu(e,t,s,r).setUsage(f),Tu=(e,t,s,r)=>yu(e,t,s,r).setInstanced(!0),_u=(e,t,s,r)=>bu(e,t,s,r).setInstanced(!0);Kr("toAttribute",(e=>yu(e.value)));class Nu extends Lr{static get type(){return"ComputeNode"}constructor(e,t,s=[64]){super("void"),this.isComputeNode=!0,this.computeNode=e,this.count=t,this.workgroupSize=s,this.dispatchCount=0,this.version=1,this.updateBeforeType=wr.OBJECT,this.updateDispatchCount()}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}updateDispatchCount(){const{count:e,workgroupSize:t}=this;let s=t[0];for(let e=1;e<t.length;e++)s*=t[e];this.dispatchCount=Math.ceil(e/s)}onInit(){}updateBefore({renderer:e}){e.compute(this)}generate(e){const{shaderStage:t}=e;if("compute"===t){const t=this.computeNode.build(e,"void");""!==t&&e.addLineFlowCode(t)}}}const vu=(e,t,s)=>Ri(new Nu(Ri(e),t,s));Kr("compute",vu);class Su extends Lr{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){return this.node.getNodeType(e)}build(e,...t){const s=e.getCache(),r=e.getCacheFromNode(this,this.parent);e.setCache(r);const i=this.node.build(e,...t);return e.setCache(s),i}}const Au=(e,...t)=>Ri(new Su(Ri(e),...t));Kr("cache",Au);class Ru extends Lr{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return""!==t&&e.addLineFlowCode(t),this.outputNode.build(e)}}const Cu=wi(Ru);Kr("bypass",Cu);class Eu extends Lr{static get type(){return"RemapNode"}constructor(e,t,s,r=Di(0),i=Di(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=s,this.outLowNode=r,this.outHighNode=i,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:s,outLowNode:r,outHighNode:i,doClamp:n}=this;let a=e.sub(t).div(s.sub(t));return!0===n&&(a=a.clamp()),a.mul(i.sub(r)).add(r)}}const wu=wi(Eu,null,null,{doClamp:!1}),Mu=wi(Eu);Kr("remap",wu),Kr("remapClamp",Mu);class Bu extends Lr{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const s=this.getNodeType(e),r=this.snippet;if("void"!==s)return e.format(`( ${r} )`,s,t);e.addLineFlowCode(r)}}const Uu=wi(Bu),Fu=e=>(e?Ho(e,Uu("discard")):Uu("discard")).append(),Pu=()=>Uu("return").append();Kr("discard",Fu);class Iu extends Or{static get type(){return"RenderOutputNode"}constructor(e,t,s){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=s,this.isRenderOutput=!0}setup({context:e}){let t=this.colorNode||e.color;const s=(null!==this.toneMapping?this.toneMapping:e.toneMapping)||h,r=(null!==this.outputColorSpace?this.outputColorSpace:e.outputColorSpace)||y;return s!==h&&(t=t.toneMapping(s)),r!==y&&r!==l.workingColorSpace&&(t=t.workingToColorSpace(r)),t}}const Lu=(e,t=null,s=null)=>Ri(new Iu(Ri(e),t,s));function Vu(e){console.warn("THREE.TSLBase: AddNodeElement has been removed in favor of tree-shaking. Trying add",e)}Kr("renderOutput",Lu);class Du extends Lr{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(null===t){const s=this.getAttributeName(e);if(e.hasGeometryAttribute(s)){const r=e.geometry.getAttribute(s);t=e.getTypeFromAttribute(r)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),s=this.getNodeType(e);if(!0===e.hasGeometryAttribute(t)){const r=e.geometry.getAttribute(t),i=e.getTypeFromAttribute(r),n=e.getAttribute(t,i);if("vertex"===e.shaderStage)return e.format(n.name,i,s);return Zo(this).build(e,s)}return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(s)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const Ou=(e,t)=>Ri(new Du(e,t)),Gu=e=>Ou("uv"+(e>0?e:""),"vec2");class zu extends Lr{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const s=this.textureNode.build(e,"property"),r=this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${s}, ${r} )`,this.getNodeType(e),t)}}const ku=wi(zu);class $u extends yn{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=wr.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,s=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(s&&void 0!==s.width){const{width:e,height:t}=s;this.value=Math.log2(Math.max(e,t))}}}const Hu=wi($u);class Wu extends yn{static get type(){return"TextureNode"}constructor(e,t=null,s=null,r=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=s,this.biasNode=r,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=wr.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(null===t)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return!0===this.value.isDepthTexture?"float":this.value.type===b?"uvec4":this.value.type===T?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return Gu(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return null===this._matrixUniform&&(this._matrixUniform=bn(this.value.matrix)),this._matrixUniform.mul(ji(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?wr.FRAME:wr.NONE,this}setupUV(e,t){const s=this.value;return!e.isFlipY()||!0!==s.isRenderTargetTexture&&!0!==s.isFramebufferTexture&&!0!==s.isDepthTexture||(t=t.setY(t.y.oneMinus())),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;let s=this.uvNode;null!==s&&!0!==e.context.forceUVContext||!e.context.getUV||(s=e.context.getUV(this)),s||(s=this.getDefaultUV()),!0===this.updateMatrix&&(s=this.getTransformedUV(s)),s=this.setupUV(e,s);let r=this.levelNode;null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),t.uvNode=s,t.levelNode=r,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,!0===this.sampler?"vec2":"ivec2")}generateSnippet(e,t,s,r,i,n,a,o){const u=this.value;let l;return l=r?e.generateTextureLevel(u,t,s,r,n):i?e.generateTextureBias(u,t,s,i,n):o?e.generateTextureGrad(u,t,s,o,n):a?e.generateTextureCompare(u,t,s,a,n):!1===this.sampler?e.generateTextureLoad(u,t,s,n):e.generateTexture(u,t,s,n),l}generate(e,t){const s=e.getNodeProperties(this),r=this.value;if(!r||!0!==r.isTexture)throw new Error("TextureNode: Need a three.js texture.");const i=super.generate(e,"property");if("sampler"===t)return i+"_sampler";if(e.isReference(t))return i;{const n=e.getDataFromNode(this);let a=n.propertyName;if(void 0===a){const{uvNode:t,levelNode:r,biasNode:o,compareNode:u,depthNode:l,gradNode:d}=s,c=this.generateUV(e,t),h=r?r.build(e,"float"):null,p=o?o.build(e,"float"):null,g=l?l.build(e,"int"):null,m=u?u.build(e,"float"):null,f=d?[d[0].build(e,"vec2"),d[1].build(e,"vec2")]:null,x=e.getVarFromNode(this);a=e.getPropertyName(x);const y=this.generateSnippet(e,i,c,h,p,g,m,f);e.addLineFlowCode(`${a} = ${y}`),n.snippet=y,n.propertyName=a}let o=a;const u=this.getNodeType(e);return e.needsToWorkingColorSpace(r)&&(o=ou(Uu(o,u),r.colorSpace).setup(e).build(e,u)),e.format(o,u,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){const t=this.clone();return t.uvNode=Ri(e),t.referenceNode=this.getSelf(),Ri(t)}blur(e){const t=this.clone();return t.biasNode=Ri(e).mul(Hu(t)),t.referenceNode=this.getSelf(),Ri(t)}level(e){const t=this.clone();return t.levelNode=Ri(e),t.referenceNode=this.getSelf(),Ri(t)}size(e){return ku(this,e)}bias(e){const t=this.clone();return t.biasNode=Ri(e),t.referenceNode=this.getSelf(),Ri(t)}compare(e){const t=this.clone();return t.compareNode=Ri(e),t.referenceNode=this.getSelf(),Ri(t)}grad(e,t){const s=this.clone();return s.gradNode=[Ri(e),Ri(t)],s.referenceNode=this.getSelf(),Ri(s)}depth(e){const t=this.clone();return t.depthNode=Ri(e),t.referenceNode=this.getSelf(),Ri(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;null!==t&&(t.value=e.matrix),!0===e.matrixAutoUpdate&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e}}const ju=wi(Wu),qu=(...e)=>ju(...e).setSampler(!1),Xu=e=>(!0===e.isNode?e:ju(e)).convert("sampler"),Ku=bn("float").label("cameraNear").setGroup(fn).onRenderUpdate((({camera:e})=>e.near)),Yu=bn("float").label("cameraFar").setGroup(fn).onRenderUpdate((({camera:e})=>e.far)),Qu=bn("float").label("cameraLogDepth").setGroup(fn).onRenderUpdate((({camera:e})=>2/(Math.log(e.far+1)/Math.LN2))),Zu=bn("mat4").label("cameraProjectionMatrix").setGroup(fn).onRenderUpdate((({camera:e})=>e.projectionMatrix)),Ju=bn("mat4").label("cameraProjectionMatrixInverse").setGroup(fn).onRenderUpdate((({camera:e})=>e.projectionMatrixInverse)),tl=bn("mat4").label("cameraViewMatrix").setGroup(fn).onRenderUpdate((({camera:e})=>e.matrixWorldInverse)),sl=bn("mat4").label("cameraWorldMatrix").setGroup(fn).onRenderUpdate((({camera:e})=>e.matrixWorld)),rl=bn("mat3").label("cameraNormalMatrix").setGroup(fn).onRenderUpdate((({camera:e})=>e.normalMatrix)),il=bn(new s).label("cameraPosition").setGroup(fn).onRenderUpdate((({camera:e},t)=>t.value.setFromMatrixPosition(e.matrixWorld)));class nl extends Lr{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=wr.OBJECT,this._uniformNode=new yn(null)}getNodeType(){const e=this.scope;return e===nl.WORLD_MATRIX?"mat4":e===nl.POSITION||e===nl.VIEW_POSITION||e===nl.DIRECTION||e===nl.SCALE?"vec3":void 0}update(e){const t=this.object3d,r=this._uniformNode,i=this.scope;if(i===nl.WORLD_MATRIX)r.value=t.matrixWorld;else if(i===nl.POSITION)r.value=r.value||new s,r.value.setFromMatrixPosition(t.matrixWorld);else if(i===nl.SCALE)r.value=r.value||new s,r.value.setFromMatrixScale(t.matrixWorld);else if(i===nl.DIRECTION)r.value=r.value||new s,t.getWorldDirection(r.value);else if(i===nl.VIEW_POSITION){const i=e.camera;r.value=r.value||new s,r.value.setFromMatrixPosition(t.matrixWorld),r.value.applyMatrix4(i.matrixWorldInverse)}}generate(e){const t=this.scope;return t===nl.WORLD_MATRIX?this._uniformNode.nodeType="mat4":t!==nl.POSITION&&t!==nl.VIEW_POSITION&&t!==nl.DIRECTION&&t!==nl.SCALE||(this._uniformNode.nodeType="vec3"),this._uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}nl.WORLD_MATRIX="worldMatrix",nl.POSITION="position",nl.SCALE="scale",nl.VIEW_POSITION="viewPosition",nl.DIRECTION="direction";const al=wi(nl,nl.DIRECTION),ol=wi(nl,nl.WORLD_MATRIX),ul=wi(nl,nl.POSITION),ll=wi(nl,nl.SCALE),dl=wi(nl,nl.VIEW_POSITION);class hl extends nl{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const pl=Mi(hl,hl.DIRECTION),gl=Mi(hl,hl.WORLD_MATRIX),ml=Mi(hl,hl.POSITION),fl=Mi(hl,hl.SCALE),xl=Mi(hl,hl.VIEW_POSITION),yl=bn(new i).onObjectUpdate((({object:e},t)=>t.value.getNormalMatrix(e.matrixWorld))),bl=bn(new n).onObjectUpdate((({object:e},t)=>t.value.copy(e.matrixWorld).invert())),Tl=tl.mul(gl).toVar("modelViewMatrix"),_l=Bi((e=>(e.context.isHighPrecisionModelViewMatrix=!0,bn("mat4").onObjectUpdate((({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))))).once()().toVar("highPrecisionModelViewMatrix"),Nl=Bi((e=>{const t=e.context.isHighPrecisionModelViewMatrix;return bn("mat3").onObjectUpdate((({object:e,camera:s})=>(!0!==t&&e.modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix))))})).once()().toVar("highPrecisionModelNormalMatrix"),vl=Ou("position","vec3"),Sl=vl.varying("positionLocal"),Al=vl.varying("positionPrevious"),Rl=gl.mul(Sl).xyz.varying("v_positionWorld"),Cl=Sl.transformDirection(gl).varying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),El=Tl.mul(Sl).xyz.varying("v_positionView"),wl=El.negate().varying("v_positionViewDirection").normalize().toVar("positionViewDirection");class Ml extends Lr{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){const{renderer:t,material:s}=e;return t.coordinateSystem===_&&s.side===N?"false":e.getFrontFacing()}}const Bl=Mi(Ml),Ul=Di(Bl).mul(2).sub(1),Fl=Ou("normal","vec3"),Pl=Bi((e=>!1===e.geometry.hasAttribute("normal")?(console.warn('TSL.NormalNode: Vertex attribute "normal" not found on geometry.'),ji(0,1,0)):Fl),"vec3").once()().toVar("normalLocal"),Il=El.dFdx().cross(El.dFdy()).normalize().toVar("normalFlat"),Ll=Bi((e=>{let t;return t=!0===e.material.flatShading?Il:Zo(kl(Pl),"v_normalView").normalize(),t}),"vec3").once()().toVar("normalView"),Vl=Zo(Ll.transformDirection(tl),"v_normalWorld").normalize().toVar("normalWorld"),Dl=Bi((e=>e.context.setupNormal()),"vec3").once()().mul(Ul).toVar("transformedNormalView"),Ol=Dl.transformDirection(tl).toVar("transformedNormalWorld"),Gl=Bi((e=>e.context.setupClearcoatNormal()),"vec3").once()().mul(Ul).toVar("transformedClearcoatNormalView"),zl=Bi((([e,t=gl])=>{const s=sn(t),r=e.div(ji(s[0].dot(s[0]),s[1].dot(s[1]),s[2].dot(s[2])));return s.mul(r).xyz})),kl=Bi((([e],t)=>{const s=t.renderer.nodes.modelNormalViewMatrix;if(null!==s)return s.transformDirection(e);const r=yl.mul(e);return tl.transformDirection(r)})),$l=bn(0).onReference((({material:e})=>e)).onRenderUpdate((({material:e})=>e.refractionRatio)),Hl=wl.negate().reflect(Dl),Wl=wl.negate().refract(Dl,$l),jl=Hl.transformDirection(tl).toVar("reflectVector"),ql=Wl.transformDirection(tl).toVar("reflectVector");class Xl extends Wu{static get type(){return"CubeTextureNode"}constructor(e,t=null,s=null,r=null){super(e,t,s,r),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===v?jl:e.mapping===A?ql:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),ji(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const s=this.value;return e.renderer.coordinateSystem!==R&&s.isRenderTargetTexture?t:ji(t.x.negate(),t.yz)}generateUV(e,t){return t.build(e,"vec3")}}const Kl=wi(Xl);class Yl extends yn{static get type(){return"BufferNode"}constructor(e,t,s=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=s}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const Ql=(e,t,s)=>Ri(new Yl(e,t,s));class Zl extends Vr{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=super.generate(e),s=this.getNodeType();return e.format(t,"vec4",s)}}class Jl extends Yl{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null,"vec4"),this.array=e,this.elementType=t,this._elementType=null,this._elementLength=0,this.updateType=wr.RENDER,this.isArrayBufferNode=!0}getElementType(){return this.elementType||this._elementType}getElementLength(){return this._elementLength}update(){const{array:e,value:t}=this,s=this.getElementLength(),r=this.getElementType();if(1===s)for(let s=0;s<e.length;s++){t[4*s]=e[s]}else if("color"===r)for(let s=0;s<e.length;s++){const r=4*s,i=e[s];t[r]=i.r,t[r+1]=i.g,t[r+2]=i.b||0}else for(let s=0;s<e.length;s++){const r=4*s,i=e[s];t[r]=i.x,t[r+1]=i.y,t[r+2]=i.z||0,t[r+3]=i.w||0}}setup(e){const t=this.array.length;this._elementType=null===this.elementType?vr(this.array[0]):this.elementType,this._elementLength=e.getTypeLength(this._elementType);let s=Float32Array;return"i"===this._elementType.charAt(0)?s=Int32Array:"u"===this._elementType.charAt(0)&&(s=Uint32Array),this.value=new s(4*t),this.bufferCount=t,this.bufferType=e.changeComponentType("vec4",e.getComponentType(this._elementType)),super.setup(e)}element(e){return Ri(new Zl(this,Ri(e)))}}const td=(e,t)=>Ri(new Jl(e,t)),sd=(e,t)=>(console.warn("TSL.UniformArrayNode: uniforms() has been renamed to uniformArray()."),Ri(new Jl(e,t)));class rd extends Vr{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),s=this.referenceNode.getNodeType(),r=this.getNodeType();return e.format(t,s,r)}}class id extends Lr{static get type(){return"ReferenceNode"}constructor(e,t,s=null,r=null){super(),this.property=e,this.uniformType=t,this.object=s,this.count=r,this.properties=e.split("."),this.reference=s,this.node=null,this.group=null,this.updateType=wr.OBJECT}element(e){return Ri(new rd(this,Ri(e)))}setGroup(e){return this.group=e,this}setNodeType(e){let t=null;t=null!==this.count?Ql(null,e,this.count):Array.isArray(this.getValueFromReference())?td(null,e):"texture"===e?ju(null):"cubeTexture"===e?Kl(null):bn(null,e),null!==this.group&&t.setGroup(this.group),this.node=t.getSelf()}getNodeType(e){return null===this.node&&this.updateValue(),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let s=e[t[0]];for(let e=1;e<t.length;e++)s=s[t[e]];return s}updateReference(e){return this.reference=null!==this.object?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){null===this.node&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const nd=(e,t,s)=>Ri(new id(e,t,s)),od=(e,t,s,r)=>Ri(new id(e,t,r,s));class ud extends id{static get type(){return"MaterialReferenceNode"}constructor(e,t,s=null){super(e,t,s),this.material=s,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=null!==this.material?this.material:e.material,this.reference}}const ld=(e,t,s)=>Ri(new ud(e,t,s)),hd=Bi((e=>(!1===e.geometry.hasAttribute("tangent")&&e.geometry.computeTangents(),Ou("tangent","vec4"))))(),pd=hd.xyz.toVar("tangentLocal"),gd=Tl.mul(Yi(pd,0)).xyz.varying("v_tangentView").normalize().toVar("tangentView"),md=gd.transformDirection(tl).varying("v_tangentWorld").normalize().toVar("tangentWorld"),xd=gd.toVar("transformedTangentView"),yd=xd.transformDirection(tl).normalize().toVar("transformedTangentWorld"),bd=e=>e.mul(hd.w).xyz,Td=Zo(bd(Fl.cross(hd)),"v_bitangentGeometry").normalize().toVar("bitangentGeometry"),_d=Zo(bd(Pl.cross(pd)),"v_bitangentLocal").normalize().toVar("bitangentLocal"),Nd=Zo(bd(Ll.cross(gd)),"v_bitangentView").normalize().toVar("bitangentView"),vd=Zo(bd(Vl.cross(md)),"v_bitangentWorld").normalize().toVar("bitangentWorld"),Sd=bd(Dl.cross(xd)).normalize().toVar("transformedBitangentView"),Ad=Sd.transformDirection(tl).normalize().toVar("transformedBitangentWorld"),Rd=sn(gd,Nd,Ll),Cd=wl.mul(Rd),Ed=(e,t)=>e.sub(Cd.mul(t)),wd=(()=>{let e=Vn.cross(wl);return e=e.cross(Vn).normalize(),e=Po(e,Dl,In.mul(An.oneMinus()).oneMinus().pow2().pow2()).normalize(),e})(),Md=Bi((e=>{const{eye_pos:t,surf_norm:s,mapN:r,uv:i}=e,n=t.dFdx(),a=t.dFdy(),o=i.dFdx(),u=i.dFdy(),l=s,d=a.cross(l),c=l.cross(n),h=d.mul(o.x).add(c.mul(u.x)),p=d.mul(o.y).add(c.mul(u.y)),g=h.dot(h).max(p.dot(p)),m=Ul.mul(g.inverseSqrt());return ra(h.mul(r.x,m),p.mul(r.y,m),l.mul(r.z)).normalize()}));class Bd extends Or{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=C}setup(e){const{normalMapType:t,scaleNode:s}=this;let r=this.node.mul(2).sub(1);null!==s&&(r=ji(r.xy.mul(s),r.z));let i=null;if(t===w)i=kl(r);else if(t===C){i=!0===e.hasGeometryAttribute("tangent")?Rd.mul(r).normalize():Md({eye_pos:El,surf_norm:Ll,mapN:r,uv:Gu()})}return i}}const Ud=wi(Bd),Fd=Bi((({textureNode:e,bumpScale:t})=>{const s=t=>e.cache().context({getUV:e=>t(e.uvNode||Gu()),forceUVContext:!0}),r=Di(s((e=>e)));return ki(Di(s((e=>e.add(e.dFdx())))).sub(r),Di(s((e=>e.add(e.dFdy())))).sub(r)).mul(t)})),Pd=Bi((e=>{const{surf_pos:t,surf_norm:s,dHdxy:r}=e,i=t.dFdx().normalize(),n=s,a=t.dFdy().normalize().cross(n),o=n.cross(i),u=i.dot(a).mul(Ul),l=u.sign().mul(r.x.mul(a).add(r.y.mul(o)));return u.abs().mul(s).sub(l).normalize()}));class Id extends Or{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=null!==this.scaleNode?this.scaleNode:1,t=Fd({textureNode:this.textureNode,bumpScale:e});return Pd({surf_pos:El,surf_norm:Ll,dHdxy:t})}}const Ld=wi(Id),Vd=new Map;class Dd extends Lr{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let s=Vd.get(e);return void 0===s&&(s=ld(e,t),Vd.set(e,s)),s}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache("map"===e?"map":e+"Map","texture")}setup(e){const t=e.context.material,s=this.scope;let r=null;if(s===Dd.COLOR){const e=void 0!==t.color?this.getColor(s):ji();r=t.map&&!0===t.map.isTexture?e.mul(this.getTexture("map")):e}else if(s===Dd.OPACITY){const e=this.getFloat(s);r=t.alphaMap&&!0===t.alphaMap.isTexture?e.mul(this.getTexture("alpha")):e}else if(s===Dd.SPECULAR_STRENGTH)r=t.specularMap&&!0===t.specularMap.isTexture?this.getTexture("specular").r:Di(1);else if(s===Dd.SPECULAR_INTENSITY){const e=this.getFloat(s);r=t.specularMap?e.mul(this.getTexture(s).a):e}else if(s===Dd.SPECULAR_COLOR){const e=this.getColor(s);r=t.specularColorMap&&!0===t.specularColorMap.isTexture?e.mul(this.getTexture(s).rgb):e}else if(s===Dd.ROUGHNESS){const e=this.getFloat(s);r=t.roughnessMap&&!0===t.roughnessMap.isTexture?e.mul(this.getTexture(s).g):e}else if(s===Dd.METALNESS){const e=this.getFloat(s);r=t.metalnessMap&&!0===t.metalnessMap.isTexture?e.mul(this.getTexture(s).b):e}else if(s===Dd.EMISSIVE){const e=this.getFloat("emissiveIntensity"),i=this.getColor(s).mul(e);r=t.emissiveMap&&!0===t.emissiveMap.isTexture?i.mul(this.getTexture(s)):i}else if(s===Dd.NORMAL)t.normalMap?(r=Ud(this.getTexture("normal"),this.getCache("normalScale","vec2")),r.normalMapType=t.normalMapType):r=t.bumpMap?Ld(this.getTexture("bump").r,this.getFloat("bumpScale")):Ll;else if(s===Dd.CLEARCOAT){const e=this.getFloat(s);r=t.clearcoatMap&&!0===t.clearcoatMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===Dd.CLEARCOAT_ROUGHNESS){const e=this.getFloat(s);r=t.clearcoatRoughnessMap&&!0===t.clearcoatRoughnessMap.isTexture?e.mul(this.getTexture(s).r):e}else if(s===Dd.CLEARCOAT_NORMAL)r=t.clearcoatNormalMap?Ud(this.getTexture(s),this.getCache(s+"Scale","vec2")):Ll;else if(s===Dd.SHEEN){const e=this.getColor("sheenColor").mul(this.getFloat("sheen"));r=t.sheenColorMap&&!0===t.sheenColorMap.isTexture?e.mul(this.getTexture("sheenColor").rgb):e}else if(s===Dd.SHEEN_ROUGHNESS){const e=this.getFloat(s);r=t.sheenRoughnessMap&&!0===t.sheenRoughnessMap.isTexture?e.mul(this.getTexture(s).a):e,r=r.clamp(.07,1)}else if(s===Dd.ANISOTROPY)if(t.anisotropyMap&&!0===t.anisotropyMap.isTexture){const e=this.getTexture(s);r=tn(Rc.x,Rc.y,Rc.y.negate(),Rc.x).mul(e.rg.mul(2).sub(ki(1)).normalize().mul(e.b))}else r=Rc;else if(s===Dd.IRIDESCENCE_THICKNESS){const e=nd("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const i=nd("0","float",t.iridescenceThicknessRange);r=e.sub(i).mul(this.getTexture(s).g).add(i)}else r=e}else if(s===Dd.TRANSMISSION){const e=this.getFloat(s);r=t.transmissionMap?e.mul(this.getTexture(s).r):e}else if(s===Dd.THICKNESS){const e=this.getFloat(s);r=t.thicknessMap?e.mul(this.getTexture(s).g):e}else if(s===Dd.IOR)r=this.getFloat(s);else if(s===Dd.LIGHT_MAP)r=this.getTexture(s).rgb.mul(this.getFloat("lightMapIntensity"));else if(s===Dd.AO_MAP)r=this.getTexture(s).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else{const t=this.getNodeType(e);r=this.getCache(s,t)}return r}}Dd.ALPHA_TEST="alphaTest",Dd.COLOR="color",Dd.OPACITY="opacity",Dd.SHININESS="shininess",Dd.SPECULAR="specular",Dd.SPECULAR_STRENGTH="specularStrength",Dd.SPECULAR_INTENSITY="specularIntensity",Dd.SPECULAR_COLOR="specularColor",Dd.REFLECTIVITY="reflectivity",Dd.ROUGHNESS="roughness",Dd.METALNESS="metalness",Dd.NORMAL="normal",Dd.CLEARCOAT="clearcoat",Dd.CLEARCOAT_ROUGHNESS="clearcoatRoughness",Dd.CLEARCOAT_NORMAL="clearcoatNormal",Dd.EMISSIVE="emissive",Dd.ROTATION="rotation",Dd.SHEEN="sheen",Dd.SHEEN_ROUGHNESS="sheenRoughness",Dd.ANISOTROPY="anisotropy",Dd.IRIDESCENCE="iridescence",Dd.IRIDESCENCE_IOR="iridescenceIOR",Dd.IRIDESCENCE_THICKNESS="iridescenceThickness",Dd.IOR="ior",Dd.TRANSMISSION="transmission",Dd.THICKNESS="thickness",Dd.ATTENUATION_DISTANCE="attenuationDistance",Dd.ATTENUATION_COLOR="attenuationColor",Dd.LINE_SCALE="scale",Dd.LINE_DASH_SIZE="dashSize",Dd.LINE_GAP_SIZE="gapSize",Dd.LINE_WIDTH="linewidth",Dd.LINE_DASH_OFFSET="dashOffset",Dd.POINT_WIDTH="pointWidth",Dd.DISPERSION="dispersion",Dd.LIGHT_MAP="light",Dd.AO_MAP="ao";const Od=Mi(Dd,Dd.ALPHA_TEST),Gd=Mi(Dd,Dd.COLOR),zd=Mi(Dd,Dd.SHININESS),kd=Mi(Dd,Dd.EMISSIVE),$d=Mi(Dd,Dd.OPACITY),Hd=Mi(Dd,Dd.SPECULAR),Wd=Mi(Dd,Dd.SPECULAR_INTENSITY),jd=Mi(Dd,Dd.SPECULAR_COLOR),qd=Mi(Dd,Dd.SPECULAR_STRENGTH),Xd=Mi(Dd,Dd.REFLECTIVITY),Kd=Mi(Dd,Dd.ROUGHNESS),Yd=Mi(Dd,Dd.METALNESS),Qd=Mi(Dd,Dd.NORMAL).context({getUV:null}),Zd=Mi(Dd,Dd.CLEARCOAT),Jd=Mi(Dd,Dd.CLEARCOAT_ROUGHNESS),tc=Mi(Dd,Dd.CLEARCOAT_NORMAL).context({getUV:null}),sc=Mi(Dd,Dd.ROTATION),rc=Mi(Dd,Dd.SHEEN),ic=Mi(Dd,Dd.SHEEN_ROUGHNESS),nc=Mi(Dd,Dd.ANISOTROPY),ac=Mi(Dd,Dd.IRIDESCENCE),oc=Mi(Dd,Dd.IRIDESCENCE_IOR),uc=Mi(Dd,Dd.IRIDESCENCE_THICKNESS),lc=Mi(Dd,Dd.TRANSMISSION),hc=Mi(Dd,Dd.THICKNESS),pc=Mi(Dd,Dd.IOR),gc=Mi(Dd,Dd.ATTENUATION_DISTANCE),mc=Mi(Dd,Dd.ATTENUATION_COLOR),xc=Mi(Dd,Dd.LINE_SCALE),yc=Mi(Dd,Dd.LINE_DASH_SIZE),bc=Mi(Dd,Dd.LINE_GAP_SIZE),Tc=Mi(Dd,Dd.LINE_WIDTH),_c=Mi(Dd,Dd.LINE_DASH_OFFSET),Nc=Mi(Dd,Dd.POINT_WIDTH),vc=Mi(Dd,Dd.DISPERSION),Sc=Mi(Dd,Dd.LIGHT_MAP),Ac=Mi(Dd,Dd.AO_MAP),Rc=bn(new t).onReference((function(e){return e.material})).onRenderUpdate((function({material:e}){this.value.set(e.anisotropy*Math.cos(e.anisotropyRotation),e.anisotropy*Math.sin(e.anisotropyRotation))}));class Cc extends Or{static get type(){return"ModelViewProjectionNode"}constructor(e=null){super("vec4"),this.positionNode=e}setup(e){if("fragment"===e.shaderStage)return Zo(e.context.mvp);const t=this.positionNode||Sl,s=e.renderer.nodes.modelViewMatrix||Tl;return Zu.mul(s).mul(t)}}const Ec=wi(Cc);class wc extends Lr{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isInstanceIndexNode=!0}generate(e){const t=this.getNodeType(e),s=this.scope;let r,i;if(s===wc.VERTEX)r=e.getVertexIndex();else if(s===wc.INSTANCE)r=e.getInstanceIndex();else if(s===wc.DRAW)r=e.getDrawIndex();else{if(s!==wc.INVOCATION_LOCAL)throw new Error("THREE.IndexNode: Unknown scope: "+s);r=e.getInvocationLocalIndex()}if("vertex"===e.shaderStage||"compute"===e.shaderStage)i=r;else{i=Zo(this).build(e,t)}return i}}wc.VERTEX="vertex",wc.INSTANCE="instance",wc.INVOCATION_LOCAL="invocationLocal",wc.DRAW="draw";const Mc=Mi(wc,wc.VERTEX),Bc=Mi(wc,wc.INSTANCE),Uc=Mi(wc,wc.INVOCATION_LOCAL),Fc=Mi(wc,wc.DRAW);class Pc extends Lr{static get type(){return"InstanceNode"}constructor(e){super("void"),this.instanceMesh=e,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=wr.FRAME,this.buffer=null,this.bufferColor=null}setup(e){let t=this.instanceMatrixNode,s=this.instanceColorNode;const r=this.instanceMesh;if(null===t){const e=r.instanceMatrix;if(r.count<=1e3)t=Ql(e.array,"mat4",Math.max(r.count,1)).element(Bc);else{const s=new M(e.array,16,1);this.buffer=s;const r=e.usage===f?_u:Tu,i=[r(s,"vec4",16,0),r(s,"vec4",16,4),r(s,"vec4",16,8),r(s,"vec4",16,12)];t=rn(...i)}this.instanceMatrixNode=t}const i=r.instanceColor;if(i&&null===s){const e=new B(i.array,3),t=i.usage===f?_u:Tu;this.bufferColor=e,s=ji(t(e,"vec3",3,0)),this.instanceColorNode=s}const n=t.mul(Sl).xyz;if(Sl.assign(n),e.hasGeometryAttribute("normal")){const e=zl(Pl,t);Pl.assign(e)}null!==this.instanceColorNode&&Nn("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMesh.instanceMatrix.usage!==f&&null!=this.buffer&&this.instanceMesh.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMesh.instanceMatrix.version),this.instanceMesh.instanceColor&&this.instanceMesh.instanceColor.usage!==f&&null!=this.bufferColor&&this.instanceMesh.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceMesh.instanceColor.version)}}const Ic=wi(Pc);class Lc extends Lr{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){null===this.batchingIdNode&&(null===e.getDrawIndex()?this.batchingIdNode=Bc:this.batchingIdNode=Fc);const t=Bi((([e])=>{const t=ku(qu(this.batchMesh._indirectTexture),0),s=Oi(e).modInt(Oi(t)),r=Oi(e).div(Oi(t));return qu(this.batchMesh._indirectTexture,$i(s,r)).x})).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]}),s=t(Oi(this.batchingIdNode)),r=this.batchMesh._matricesTexture,i=ku(qu(r),0),n=Di(s).mul(4).toInt().toVar(),a=n.modInt(i),o=n.div(Oi(i)),u=rn(qu(r,$i(a,o)),qu(r,$i(a.add(1),o)),qu(r,$i(a.add(2),o)),qu(r,$i(a.add(3),o))),l=this.batchMesh._colorsTexture;if(null!==l){const e=Bi((([e])=>{const t=ku(qu(l),0).x,s=e,r=s.modInt(t),i=s.div(t);return qu(l,$i(r,i)).rgb})).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]}),t=e(s);Nn("vec3","vBatchColor").assign(t)}const d=sn(u);Sl.assign(u.mul(Sl));const c=Pl.div(ji(d[0].dot(d[0]),d[1].dot(d[1]),d[2].dot(d[2]))),h=d.mul(c).xyz;Pl.assign(h),e.hasGeometryAttribute("tangent")&&pd.mulAssign(d)}}const Vc=wi(Lc),Dc=new WeakMap;class Oc extends Lr{static get type(){return"SkinningNode"}constructor(e,t=!1){let s,r,i;super("void"),this.skinnedMesh=e,this.useReference=t,this.updateType=wr.OBJECT,this.skinIndexNode=Ou("skinIndex","uvec4"),this.skinWeightNode=Ou("skinWeight","vec4"),t?(s=nd("bindMatrix","mat4"),r=nd("bindMatrixInverse","mat4"),i=od("skeleton.boneMatrices","mat4",e.skeleton.bones.length)):(s=bn(e.bindMatrix,"mat4"),r=bn(e.bindMatrixInverse,"mat4"),i=Ql(e.skeleton.boneMatrices,"mat4",e.skeleton.bones.length)),this.bindMatrixNode=s,this.bindMatrixInverseNode=r,this.boneMatricesNode=i,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=Sl){const{skinIndexNode:s,skinWeightNode:r,bindMatrixNode:i,bindMatrixInverseNode:n}=this,a=e.element(s.x),o=e.element(s.y),u=e.element(s.z),l=e.element(s.w),d=i.mul(t),c=ra(a.mul(r.x).mul(d),o.mul(r.y).mul(d),u.mul(r.z).mul(d),l.mul(r.w).mul(d));return n.mul(c).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=Pl){const{skinIndexNode:s,skinWeightNode:r,bindMatrixNode:i,bindMatrixInverseNode:n}=this,a=e.element(s.x),o=e.element(s.y),u=e.element(s.z),l=e.element(s.w);let d=ra(r.x.mul(a),r.y.mul(o),r.z.mul(u),r.w.mul(l));return d=n.mul(d).mul(i),d.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return null===this.previousBoneMatricesNode&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=od("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Al)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")}setup(e){this.needsPreviousBoneMatrices(e)&&Al.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(Sl.assign(t),e.hasGeometryAttribute("normal")){const t=this.getSkinnedNormal();Pl.assign(t),e.hasGeometryAttribute("tangent")&&pd.assign(t)}}generate(e,t){if("void"!==t)return Sl.build(e,t)}update(e){const t=(this.useReference?e.object:this.skinnedMesh).skeleton;Dc.get(t)!==e.frameId&&(Dc.set(t,e.frameId),null!==this.previousBoneMatricesNode&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const Gc=e=>Ri(new Oc(e)),zc=e=>Ri(new Oc(e,!0));class kc extends Lr{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode("i".charCodeAt()+e)}getProperties(e){const t=e.getNodeProperties(this);if(void 0!==t.stackNode)return t;const s={};for(let e=0,t=this.params.length-1;e<t;e++){const t=this.params[e],r=!0!==t.isNode&&t.name||this.getVarName(e),i=!0!==t.isNode&&t.type||"int";s[r]=Uu(r,i)}const r=e.addStack();return t.returnsNode=this.params[this.params.length-1](s,r,e),t.stackNode=r,e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),s=this.params,r=t.stackNode;for(let t=0,r=s.length-1;t<r;t++){const r=s[t];let i=null,n=null,a=null,o=null,u=null,l=null;r.isNode?(o="int",a=this.getVarName(t),i="0",n=r.build(e,o),u="<"):(o=r.type||"int",a=r.name||this.getVarName(t),i=r.start,n=r.end,u=r.condition,l=r.update,"number"==typeof i?i=i.toString():i&&i.isNode&&(i=i.build(e,o)),"number"==typeof n?n=n.toString():n&&n.isNode&&(n=n.build(e,o)),void 0!==i&&void 0===n?(i+=" - 1",n="0",u=">="):void 0!==n&&void 0===i&&(i="0",u="<"),void 0===u&&(u=Number(i)>Number(n)?">=":"<"));const d={start:i,end:n,condition:u},c=d.start,h=d.end;let p="",g="",m="";l||(l="int"===o||"uint"===o?u.includes("<")?"++":"--":u.includes("<")?"+= 1.":"-= 1."),p+=e.getVar(o,a)+" = "+c,g+=a+" "+u+" "+h,m+=a+" "+l;const f=`for ( ${p}; ${g}; ${m} )`;e.addFlowCode((0===t?"\n":"")+e.tab+f+" {\n\n").addFlowTab()}const i=r.build(e,"void"),n=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode("\n"+e.tab+i);for(let t=0,s=this.params.length-1;t<s;t++)e.addFlowCode((0===t?"":e.tab)+"}\n\n").removeFlowTab();return e.addFlowTab(),n}}const $c=(...e)=>Ri(new kc(Ei(e,"int"))).append(),Hc=()=>Uu("continue").append(),Wc=()=>Uu("break").append(),jc=(...e)=>(console.warn("TSL.LoopNode: loop() has been renamed to Loop()."),$c(...e)),qc=new WeakMap,Xc=new r,Kc=Bi((({bufferMap:e,influence:t,stride:s,width:r,depth:i,offset:n})=>{const a=Oi(Mc).mul(s).add(n),o=a.div(r),u=a.sub(o.mul(r));return qu(e,$i(u,o)).depth(i).mul(t)}));class Yc extends Lr{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=bn(1),this.updateType=wr.OBJECT}setup(e){const{geometry:s}=e,r=void 0!==s.morphAttributes.position,i=s.hasAttribute("normal")&&void 0!==s.morphAttributes.normal,n=s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color,a=void 0!==n?n.length:0,{texture:o,stride:u,size:l}=function(e){const s=void 0!==e.morphAttributes.position,r=void 0!==e.morphAttributes.normal,i=void 0!==e.morphAttributes.color,n=e.morphAttributes.position||e.morphAttributes.normal||e.morphAttributes.color,a=void 0!==n?n.length:0;let o=qc.get(e);if(void 0===o||o.count!==a){void 0!==o&&o.texture.dispose();const u=e.morphAttributes.position||[],l=e.morphAttributes.normal||[],d=e.morphAttributes.color||[];let c=0;!0===s&&(c=1),!0===r&&(c=2),!0===i&&(c=3);let h=e.attributes.position.count*c,p=1;const g=4096;h>g&&(p=Math.ceil(h/g),h=g);const m=new Float32Array(h*p*4*a),f=new U(m,h,p,a);f.type=F,f.needsUpdate=!0;const x=4*c;for(let b=0;b<a;b++){const T=u[b],_=l[b],N=d[b],v=h*p*4*b;for(let S=0;S<T.count;S++){const A=S*x;!0===s&&(Xc.fromBufferAttribute(T,S),m[v+A+0]=Xc.x,m[v+A+1]=Xc.y,m[v+A+2]=Xc.z,m[v+A+3]=0),!0===r&&(Xc.fromBufferAttribute(_,S),m[v+A+4]=Xc.x,m[v+A+5]=Xc.y,m[v+A+6]=Xc.z,m[v+A+7]=0),!0===i&&(Xc.fromBufferAttribute(N,S),m[v+A+8]=Xc.x,m[v+A+9]=Xc.y,m[v+A+10]=Xc.z,m[v+A+11]=4===N.itemSize?Xc.w:1)}}function y(){f.dispose(),qc.delete(e),e.removeEventListener("dispose",y)}o={count:a,texture:f,stride:c,size:new t(h,p)},qc.set(e,o),e.addEventListener("dispose",y)}return o}(s);!0===r&&Sl.mulAssign(this.morphBaseInfluence),!0===i&&Pl.mulAssign(this.morphBaseInfluence);const d=Oi(l.width);$c(a,(({i:e})=>{const t=Di(0).toVar();this.mesh.count>1&&null!==this.mesh.morphTexture&&void 0!==this.mesh.morphTexture?t.assign(qu(this.mesh.morphTexture,$i(Oi(e).add(1),Oi(Bc))).r):t.assign(nd("morphTargetInfluences","float").element(e).toVar()),!0===r&&Sl.addAssign(Kc({bufferMap:o,influence:t,stride:u,width:d,depth:e,offset:Oi(0)})),!0===i&&Pl.addAssign(Kc({bufferMap:o,influence:t,stride:u,width:d,depth:e,offset:Oi(1)}))}))}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce(((e,t)=>e+t),0)}}const Qc=wi(Yc),Zc=(e,t)=>{for(const s of t)if(s.isAnalyticLightNode&&s.light.id===e)return s;return null};class Jc extends Lr{static get type(){return"LightsNode"}constructor(e=[]){super("vec3"),this.totalDiffuseNode=ji().toVar("totalDiffuse"),this.totalSpecularNode=ji().toVar("totalSpecular"),this.outgoingLightNode=ji().toVar("outgoingLight"),this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this.global=!0}getHash(e){if(null===this._lightNodesHash){null===this._lightNodes&&this.setupLightsNode(e);const t=[];for(const e of this._lightNodes)t.push(e.getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getDataFromNode(this);for(const s of t.nodes)s.build(e)}setupLightsNode(e){const t=[],s=this._lightNodes,r=(e=>e.sort(((e,t)=>e.id-t.id)))(this._lights),i=e.renderer.nodes.library;for(const e of r)if(e.isNode)t.push(Ri(e));else{let r=null;if(null!==s&&(r=Zc(e.id,s)),null===r){const s=i.getLightNodeClass(e.constructor);if(null===s){console.warn(`LightsNode.setupNodeLights: Light node not found for ${e.constructor.name}`);continue}t.push(Ri(new s(e)))}}this._lightNodes=t}setup(e){null===this._lightNodes&&this.setupLightsNode(e);const t=e.context,s=t.lightingModel;let r=this.outgoingLightNode;if(s){const{_lightNodes:i,totalDiffuseNode:n,totalSpecularNode:a}=this;t.outgoingLight=r;const o=e.addStack();e.getDataFromNode(this).nodes=o.nodes,s.start(t,o,e);for(const t of i)t.build(e);s.indirect(t,o,e);const{backdrop:u,backdropAlpha:l}=t,{directDiffuse:d,directSpecular:c,indirectDiffuse:h,indirectSpecular:p}=t.reflectedLight;let g=d.add(h);null!==u&&(g=ji(null!==l?l.mix(g,u):u),t.material.transparent=!0),n.assign(g),a.assign(c.add(p)),r.assign(n.add(a)),s.finish(t,o,e),r=r.bypass(e.removeStack())}return r}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}}const th=wi(Jc);class sh extends Lr{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}generate(){console.warn("Abstract function.")}}class rh extends sh{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class ih extends jo{static get type(){return"LightingContextNode"}constructor(e,t=null,s=null,r=null){super(e),this.lightingModel=t,this.backdropNode=s,this.backdropAlphaNode=r,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,s={directDiffuse:ji().toVar("directDiffuse"),directSpecular:ji().toVar("directSpecular"),indirectDiffuse:ji().toVar("indirectDiffuse"),indirectSpecular:ji().toVar("indirectSpecular")};return{radiance:ji().toVar("radiance"),irradiance:ji().toVar("irradiance"),iblIrradiance:ji().toVar("iblIrradiance"),ambientOcclusion:Di(1).toVar("ambientOcclusion"),reflectedLight:s,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const nh=wi(ih);class ah extends sh{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}let oh,uh;class lh extends Lr{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===lh.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=wr.NONE;return this.scope!==lh.SIZE&&this.scope!==lh.VIEWPORT||(e=wr.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===lh.VIEWPORT?null!==t?uh.copy(t.viewport):(e.getViewport(uh),uh.multiplyScalar(e.getPixelRatio())):null!==t?(oh.width=t.width,oh.height=t.height):e.getDrawingBufferSize(oh)}setup(){const e=this.scope;let s=null;return s=e===lh.SIZE?bn(oh||(oh=new t)):e===lh.VIEWPORT?bn(uh||(uh=new r)):ki(ph.div(hh)),s}generate(e){if(this.scope===lh.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const s=e.getNodeProperties(hh).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${s}.y - ${t}.y )`}return t}return super.generate(e)}}lh.COORDINATE="coordinate",lh.VIEWPORT="viewport",lh.SIZE="size",lh.UV="uv";const dh=Mi(lh,lh.UV),hh=Mi(lh,lh.SIZE),ph=Mi(lh,lh.COORDINATE),gh=Mi(lh,lh.VIEWPORT),mh=gh.zw,xh=ph.sub(gh.xy),yh=xh.div(mh),bh=Bi((()=>(console.warn('TSL.ViewportNode: "viewportResolution" is deprecated. Use "screenSize" instead.'),hh)),"vec2").once()(),Th=Bi((()=>(console.warn('TSL.ViewportNode: "viewportTopLeft" is deprecated. Use "screenUV" instead.'),dh)),"vec2").once()(),_h=Bi((()=>(console.warn('TSL.ViewportNode: "viewportBottomLeft" is deprecated. Use "screenUV.flipY()" instead.'),dh.flipY())),"vec2").once()(),Nh=new t;class vh extends Wu{static get type(){return"ViewportTextureNode"}constructor(e=dh,t=null,s=null){null===s&&((s=new I).minFilter=L),super(s,e,t),this.generateMipmaps=!1,this.isOutputTextureNode=!0,this.updateBeforeType=wr.FRAME}updateBefore(e){const t=e.renderer;t.getDrawingBufferSize(Nh);const s=this.value;s.image.width===Nh.width&&s.image.height===Nh.height||(s.image.width=Nh.width,s.image.height=Nh.height,s.needsUpdate=!0);const r=s.generateMipmaps;s.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(s),s.generateMipmaps=r}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}const Sh=wi(vh),Ah=wi(vh,null,null,{generateMipmaps:!0});let Rh=null;class Ch extends vh{static get type(){return"ViewportDepthTextureNode"}constructor(e=dh,t=null){null===Rh&&(Rh=new V),super(e,t,Rh)}}const Eh=wi(Ch);class wh extends Lr{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===wh.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,s=this.valueNode;let r=null;if(t===wh.DEPTH_BASE)null!==s&&(r=Ph().assign(s));else if(t===wh.DEPTH)r=e.isPerspectiveCamera?Uh(El.z,Ku,Yu):Mh(El.z,Ku,Yu);else if(t===wh.LINEAR_DEPTH)if(null!==s)if(e.isPerspectiveCamera){const e=Fh(s,Ku,Yu);r=Mh(e,Ku,Yu)}else r=s;else r=Mh(El.z,Ku,Yu);return r}}wh.DEPTH_BASE="depthBase",wh.DEPTH="depth",wh.LINEAR_DEPTH="linearDepth";const Mh=(e,t,s)=>e.add(t).div(t.sub(s)),Bh=(e,t,s)=>t.sub(s).mul(e).sub(t),Uh=(e,t,s)=>t.add(e).mul(s).div(s.sub(t).mul(e)),Fh=(e,t,s)=>t.mul(s).div(s.sub(t).mul(e).sub(s)),Ph=wi(wh,wh.DEPTH_BASE),Ih=Mi(wh,wh.DEPTH),Lh=wi(wh,wh.LINEAR_DEPTH),Vh=Lh(Eh());Ih.assign=e=>Ph(e);class Dh extends Lr{static get type(){return"ClippingNode"}constructor(e=Dh.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{localClipIntersection:s,localClippingCount:r,globalClippingCount:i}=t,n=i+r,a=s?n-r:n;return this.scope===Dh.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(t.planes,n,a):this.setupDefault(t.planes,n,a)}setupAlphaToCoverage(e,t,s){return Bi((()=>{const r=td(e),i=_n("float","distanceToPlane"),n=_n("float","distanceToGradient"),a=_n("float","clipOpacity");let o;if(a.assign(1),$c(s,(({i:e})=>{o=r.element(e),i.assign(El.dot(o.xyz).negate().add(o.w)),n.assign(i.fwidth().div(2)),a.mulAssign(Do(n.negate(),n,i)),a.equal(0).discard()})),s<t){const e=_n("float","unionclipOpacity");e.assign(1),$c({start:s,end:t},(({i:t})=>{o=r.element(t),i.assign(El.dot(o.xyz).negate().add(o.w)),n.assign(i.fwidth().div(2)),e.mulAssign(Do(n.negate(),n,i).oneMinus())})),a.mulAssign(e.oneMinus())}vn.a.mulAssign(a),vn.a.equal(0).discard()}))()}setupDefault(e,t,s){return Bi((()=>{const r=td(e);let i;if($c(s,(({i:e})=>{i=r.element(e),El.dot(i.xyz).greaterThan(i.w).discard()})),s<t){const e=_n("bool","clipped");e.assign(!0),$c({start:s,end:t},(({i:t})=>{i=r.element(t),e.assign(El.dot(i.xyz).greaterThan(i.w).and(e))})),e.discard()}}))()}}Dh.ALPHA_TO_COVERAGE="alphaToCoverage",Dh.DEFAULT="default";class Oh extends D{static get type(){return"NodeMaterial"}constructor(){super(),this.isNodeMaterial=!0,this.type=this.constructor.type,this.forceSinglePass=!1,this.fog=!0,this.lights=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.positionNode=null,this.depthNode=null,this.shadowNode=null,this.shadowPositionNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null}customProgramCacheKey(){return this.type+_r(this)}build(e){this.setup(e)}setupObserver(e){return new Tr(e)}setup(e){let t;e.context.setupNormal=()=>this.setupNormal(e),e.addStack(),e.stack.outputNode=this.vertexNode||this.setupPosition(e),e.addFlow("vertex",e.removeStack()),e.addStack();const s=this.setupClipping(e);if(!0===this.depthWrite&&this.setupDepth(e),null===this.fragmentNode){this.setupDiffuseColor(e),this.setupVariants(e);const r=this.setupLighting(e);null!==s&&e.stack.add(s);const i=Yi(r,vn.a).max(0);t=this.setupOutput(e,i),zn.assign(t),null!==this.outputNode&&(t=this.outputNode);if(null!==e.renderer.getRenderTarget()){const s=e.renderer.getMRT(),r=this.mrtNode;null!==s?(t=s,null!==r&&(t=s.merge(r))):null!==r&&(t=r)}}else{let s=this.fragmentNode;!0!==s.isOutputStructNode&&(s=Yi(s)),t=this.setupOutput(e,s)}e.stack.outputNode=t,e.addFlow("fragment",e.removeStack()),e.monitor=this.setupObserver(e)}setupClipping(e){if(null===e.clippingContext)return null;const{globalClippingCount:t,localClippingCount:s}=e.clippingContext;let r=null;return(t||s)&&(this.alphaToCoverage?r=Ri(new Dh(Dh.ALPHA_TO_COVERAGE)):e.stack.add(Ri(new Dh))),r}setupDepth(e){const{renderer:t}=e;let s=this.depthNode;if(null===s){const e=t.getMRT();if(e&&e.has("depth"))s=e.get("depth");else if(!0===t.logarithmicDepthBuffer){s=Ec().w.add(1).log2().mul(Qu).mul(.5)}}null!==s&&Ih.assign(s).append()}setupPosition(e){const{object:t}=e,s=t.geometry;if(e.addStack(),(s.morphAttributes.position||s.morphAttributes.normal||s.morphAttributes.color)&&Qc(t).append(),!0===t.isSkinnedMesh&&zc(t).append(),this.displacementMap){const e=ld("displacementMap","texture"),t=ld("displacementScale","float"),s=ld("displacementBias","float");Sl.addAssign(Pl.normalize().mul(e.x.mul(t).add(s)))}t.isBatchedMesh&&Vc(t).append(),t.instanceMatrix&&!0===t.instanceMatrix.isInstancedBufferAttribute&&Ic(t).append(),null!==this.positionNode&&Sl.assign(this.positionNode);const r=Ec();return e.context.vertex=e.removeStack(),e.context.mvp=r,r}setupDiffuseColor({object:e,geometry:t}){let s=this.colorNode?Yi(this.colorNode):Gd;if(!0===this.vertexColors&&t.hasAttribute("color")&&(s=Yi(s.xyz.mul(Ou("color","vec3")),s.a)),e.instanceColor){s=Nn("vec3","vInstanceColor").mul(s)}if(e.isBatchedMesh&&e._colorsTexture){s=Nn("vec3","vBatchColor").mul(s)}vn.assign(s);const r=this.opacityNode?Di(this.opacityNode):$d;if(vn.a.assign(vn.a.mul(r)),null!==this.alphaTestNode||this.alphaTest>0){const e=null!==this.alphaTestNode?Di(this.alphaTestNode):Od;vn.a.lessThanEqual(e).discard()}!1===this.transparent&&this.blending===O&&!1===this.alphaToCoverage&&vn.a.assign(1)}setupVariants(){}setupOutgoingLight(){return!0===this.lights?ji(0):vn.rgb}setupNormal(){return this.normalNode?ji(this.normalNode):Qd}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?ld("envMap","cubeTexture"):ld("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new ah(Sc)),t}setupLights(e){const t=[],s=this.setupEnvironment(e);s&&s.isLightingNode&&t.push(s);const r=this.setupLightMap(e);if(r&&r.isLightingNode&&t.push(r),null!==this.aoNode||e.material.aoMap){const e=null!==this.aoNode?this.aoNode:Ac;t.push(new rh(e))}let i=this.lightsNode||e.lightsNode;return t.length>0&&(i=th([...i.getLights(),...t])),i}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:s,backdropAlphaNode:r,emissiveNode:i}=this,n=!0===this.lights||null!==this.lightsNode?this.setupLights(e):null;let a=this.setupOutgoingLight(e);if(n&&n.getScope().getLights().length>0){const t=this.setupLightingModel(e);a=nh(n,t,s,r)}else null!==s&&(a=ji(null!==r?Po(a,s,r):s));return(i&&!0===i.isNode||t.emissive&&!0===t.emissive.isColor)&&(Sn.assign(ji(i||kd)),a=a.add(Sn)),a}setupOutput(e,t){if(!0===this.fog){const s=e.fogNode;s&&(t=Yi(s.mix(t.rgb,s.colorNode),t.a))}return t}setDefaultValues(e){for(const t in e){const s=e[t];void 0===this[t]&&(this[t]=s,s&&s.clone&&(this[t]=s.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const e in t)void 0===Object.getOwnPropertyDescriptor(this.constructor.prototype,e)&&void 0!==t[e].get&&Object.defineProperty(this.constructor.prototype,e,t[e])}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{},nodes:{}});const s=D.prototype.toJSON.call(this,e),r=Nr(this);s.inputNodes={};for(const{property:t,childNode:i}of r)s.inputNodes[t]=i.toJSON(e).uuid;function i(e){const t=[];for(const s in e){const r=e[s];delete r.metadata,t.push(r)}return t}if(t){const t=i(e.textures),r=i(e.images),n=i(e.nodes);t.length>0&&(s.textures=t),r.length>0&&(s.images=r),n.length>0&&(s.nodes=n)}return s}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.positionNode=e.positionNode,this.depthNode=e.depthNode,this.shadowNode=e.shadowNode,this.shadowPositionNode=e.shadowPositionNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const Gh=new G;class zh extends Oh{static get type(){return"InstancedPointsNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.pointWidth=1,this.pointColorNode=null,this.pointWidthNode=null,this.setDefaultValues(Gh),this.setupShaders(),this.setValues(e)}setup(e){this.setupShaders(),super.setup(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor;this.vertexNode=Bi((()=>{const e=Ou("instancePosition").xyz,t=Yi(Tl.mul(Yi(e,1))),s=gh.z.div(gh.w),r=Zu.mul(t),i=vl.xy.toVar();return i.mulAssign(this.pointWidthNode?this.pointWidthNode:Nc),i.assign(i.div(gh.z)),i.y.assign(i.y.mul(s)),i.assign(i.mul(r.w)),r.addAssign(Yi(i,0,0)),r}))(),this.fragmentNode=Bi((()=>{const s=Di(1).toVar(),r=Fo(Gu().mul(2).sub(1));if(e){const e=Di(r.fwidth()).toVar();s.assign(Do(e.oneMinus(),e.add(1),r).oneMinus())}else r.greaterThan(1).discard();let i;if(this.pointColorNode)i=this.pointColorNode;else if(t){i=Ou("instanceColor").mul(Gd)}else i=Gd;return s.mulAssign($d),Yi(i,s)}))()}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.needsUpdate=!0)}}const kh=new z;class $h extends Oh{static get type(){return"LineBasicNodeMaterial"}constructor(e){super(),this.isLineBasicNodeMaterial=!0,this.lights=!1,this.setDefaultValues(kh),this.setValues(e)}}const Hh=new k;class Wh extends Oh{static get type(){return"LineDashedNodeMaterial"}constructor(e){super(),this.isLineDashedNodeMaterial=!0,this.lights=!1,this.setDefaultValues(Hh),this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setupVariants(){const e=this.offsetNode,t=this.dashScaleNode?Di(this.dashScaleNode):xc,s=this.dashSizeNode?Di(this.dashSizeNode):yc,r=this.dashSizeNode?Di(this.dashGapNode):bc;kn.assign(s),$n.assign(r);const i=Zo(Ou("lineDistance").mul(t));(e?i.add(e):i).mod(kn.add($n)).greaterThan(kn).discard()}}const jh=new k;class qh extends Oh{static get type(){return"Line2NodeMaterial"}constructor(e={}){super(),this.lights=!1,this.setDefaultValues(jh),this.useAlphaToCoverage=!0,this.useColor=e.vertexColors,this.useDash=e.dashed,this.useWorldUnits=!1,this.dashOffset=0,this.lineWidth=1,this.lineColorNode=null,this.offsetNode=null,this.dashScaleNode=null,this.dashSizeNode=null,this.gapSizeNode=null,this.setValues(e)}setup(e){this.setupShaders(),super.setup(e)}setupShaders(){const e=this.alphaToCoverage,t=this.useColor,s=this.dashed,r=this.worldUnits,i=Bi((({start:e,end:t})=>{const s=Zu.element(2).element(2),r=Zu.element(3).element(2).mul(-.5).div(s).sub(e.z).div(t.z.sub(e.z));return Yi(Po(e.xyz,t.xyz,r),t.w)})).setLayout({name:"trimSegment",type:"vec4",inputs:[{name:"start",type:"vec4"},{name:"end",type:"vec4"}]});this.vertexNode=Bi((()=>{const e=Ou("instanceStart"),t=Ou("instanceEnd"),n=Yi(Tl.mul(Yi(e,1))).toVar("start"),a=Yi(Tl.mul(Yi(t,1))).toVar("end");r&&(Nn("vec3","worldStart").assign(n.xyz),Nn("vec3","worldEnd").assign(a.xyz));const o=gh.z.div(gh.w),u=Zu.element(2).element(3).equal(-1);Ii(u,(()=>{Ii(n.z.lessThan(0).and(a.z.greaterThan(0)),(()=>{a.assign(i({start:n,end:a}))})).ElseIf(a.z.lessThan(0).and(n.z.greaterThanEqual(0)),(()=>{n.assign(i({start:a,end:n}))}))}));const l=Zu.mul(n),d=Zu.mul(a),c=l.xyz.div(l.w),h=d.xyz.div(d.w),p=h.xy.sub(c.xy).toVar();p.x.assign(p.x.mul(o)),p.assign(p.normalize());const g=Yi().toVar();if(r){const e=a.xyz.sub(n.xyz).normalize(),t=Po(n.xyz,a.xyz,.5).normalize(),r=e.cross(t).normalize(),i=e.cross(r),o=Nn("vec4","worldPos");o.assign(vl.y.lessThan(.5).select(n,a));const u=Tc.mul(.5);o.addAssign(Yi(vl.x.lessThan(0).select(r.mul(u),r.mul(u).negate()),0)),s||(o.addAssign(Yi(vl.y.lessThan(.5).select(e.mul(u).negate(),e.mul(u)),0)),o.addAssign(Yi(i.mul(u),0)),Ii(vl.y.greaterThan(1).or(vl.y.lessThan(0)),(()=>{o.subAssign(Yi(i.mul(2).mul(u),0))}))),g.assign(Zu.mul(o));const l=ji().toVar();l.assign(vl.y.lessThan(.5).select(c,h)),g.z.assign(l.z.mul(g.w))}else{const e=ki(p.y,p.x.negate()).toVar("offset");p.x.assign(p.x.div(o)),e.x.assign(e.x.div(o)),e.assign(vl.x.lessThan(0).select(e.negate(),e)),Ii(vl.y.lessThan(0),(()=>{e.assign(e.sub(p))})).ElseIf(vl.y.greaterThan(1),(()=>{e.assign(e.add(p))})),e.assign(e.mul(Tc)),e.assign(e.div(gh.w)),g.assign(vl.y.lessThan(.5).select(l,d)),e.assign(e.mul(g.w)),g.assign(g.add(Yi(e,0,0)))}return g}))();const n=Bi((({p1:e,p2:t,p3:s,p4:r})=>{const i=e.sub(s),n=r.sub(s),a=t.sub(e),o=i.dot(n),u=n.dot(a),l=i.dot(a),d=n.dot(n),c=a.dot(a).mul(d).sub(u.mul(u)),h=o.mul(u).sub(l.mul(d)).div(c).clamp(),p=o.add(u.mul(h)).div(d).clamp();return ki(h,p)}));this.fragmentNode=Bi((()=>{const i=Gu();if(s){const e=this.offsetNode?Di(this.offsetNodeNode):_c,t=this.dashScaleNode?Di(this.dashScaleNode):xc,s=this.dashSizeNode?Di(this.dashSizeNode):yc,r=this.dashSizeNode?Di(this.dashGapNode):bc;kn.assign(s),$n.assign(r);const n=Ou("instanceDistanceStart"),a=Ou("instanceDistanceEnd"),o=vl.y.lessThan(.5).select(t.mul(n),xc.mul(a)),u=Zo(o.add(_c)),l=e?u.add(e):u;i.y.lessThan(-1).or(i.y.greaterThan(1)).discard(),l.mod(kn.add($n)).greaterThan(kn).discard()}const a=Di(1).toVar("alpha");if(r){const t=Nn("vec3","worldStart"),r=Nn("vec3","worldEnd"),i=Nn("vec4","worldPos").xyz.normalize().mul(1e5),o=r.sub(t),u=n({p1:t,p2:r,p3:ji(0,0,0),p4:i}),l=t.add(o.mul(u.x)),d=i.mul(u.y),c=l.sub(d).length().div(Tc);if(!s)if(e){const e=c.fwidth();a.assign(Do(e.negate().add(.5),e.add(.5),c).oneMinus())}else c.greaterThan(.5).discard()}else if(e){const e=i.x,t=i.y.greaterThan(0).select(i.y.sub(1),i.y.add(1)),s=e.mul(e).add(t.mul(t)),r=Di(s.fwidth()).toVar("dlen");Ii(i.y.abs().greaterThan(1),(()=>{a.assign(Do(r.oneMinus(),r.add(1),s).oneMinus())}))}else Ii(i.y.abs().greaterThan(1),(()=>{const e=i.x,t=i.y.greaterThan(0).select(i.y.sub(1),i.y.add(1));e.mul(e).add(t.mul(t)).greaterThan(1).discard()}));let o;if(this.lineColorNode)o=this.lineColorNode;else if(t){const e=Ou("instanceColorStart"),t=Ou("instanceColorEnd");o=vl.y.lessThan(.5).select(e,t).mul(Gd)}else o=Gd;return Yi(o,a)}))()}get worldUnits(){return this.useWorldUnits}set worldUnits(e){this.useWorldUnits!==e&&(this.useWorldUnits=e,this.needsUpdate=!0)}get dashed(){return this.useDash}set dashed(e){this.useDash!==e&&(this.useDash=e,this.needsUpdate=!0)}get alphaToCoverage(){return this.useAlphaToCoverage}set alphaToCoverage(e){this.useAlphaToCoverage!==e&&(this.useAlphaToCoverage=e,this.needsUpdate=!0)}}const Xh=e=>Ri(e).mul(.5).add(.5),Kh=e=>Ri(e).mul(2).sub(1),Yh=new $;class Qh extends Oh{static get type(){return"MeshNormalNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshNormalNodeMaterial=!0,this.setDefaultValues(Yh),this.setValues(e)}setupDiffuseColor(){const e=this.opacityNode?Di(this.opacityNode):$d;vn.assign(Yi(Xh(Dl),e))}}class Zh extends Or{static get type(){return"EquirectUVNode"}constructor(e=Cl){super("vec2"),this.dirNode=e}setup(){const e=this.dirNode,t=e.z.atan2(e.x).mul(1/(2*Math.PI)).add(.5),s=e.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return ki(t,s)}}const Jh=wi(Zh);class ep extends H{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const s=t.minFilter,r=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i=new W(5,5,5),n=Jh(Cl),a=new Oh;a.colorNode=ju(t,n,0),a.side=N,a.blending=j;const o=new q(i,a),u=new X;u.add(o),t.minFilter===L&&(t.minFilter=K);const l=new J(1,10,this),d=e.getMRT();return e.setMRT(null),l.update(e,u),e.setMRT(d),t.minFilter=s,t.currentGenerateMipmaps=r,o.geometry.dispose(),o.material.dispose(),this}}const tp=new WeakMap;class sp extends Or{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=Kl();const t=new te;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=wr.RENDER}updateBefore(e){const{renderer:t,material:s}=e,r=this.envNode;if(r.isTextureNode||r.isMaterialReferenceNode){const e=r.isTextureNode?r.value:s[r.property];if(e&&e.isTexture){const s=e.mapping;if(s===se||s===re){if(tp.has(e)){const t=tp.get(e);ip(t,e.mapping),this._cubeTexture=t}else{const s=e.image;if(function(e){return null!=e&&e.height>0}(s)){const r=new ep(s.height);r.fromEquirectangularTexture(t,e),ip(r.texture,e.mapping),this._cubeTexture=r.texture,tp.set(e,r.texture),e.addEventListener("dispose",rp)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function rp(e){const t=e.target;t.removeEventListener("dispose",rp);const s=tp.get(t);void 0!==s&&(tp.delete(t),s.dispose())}function ip(e,t){t===se?e.mapping=v:t===re&&(e.mapping=A)}const np=wi(sp);class ap extends sh{static get type(){return"BasicEnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){e.context.environment=np(this.envNode)}}class op extends sh{static get type(){return"BasicLightMapNode"}constructor(e=null){super(),this.lightMapNode=e}setup(e){const t=Di(1/Math.PI);e.context.irradianceLightMap=this.lightMapNode.mul(t)}}class up{start(){}finish(){}direct(){}directRectArea(){}indirect(){}ambientOcclusion(){}}class lp extends up{constructor(){super()}indirect(e,t,s){const r=e.ambientOcclusion,i=e.reflectedLight,n=s.context.irradianceLightMap;i.indirectDiffuse.assign(Yi(0)),n?i.indirectDiffuse.addAssign(n):i.indirectDiffuse.addAssign(Yi(1,1,1,0)),i.indirectDiffuse.mulAssign(r),i.indirectDiffuse.mulAssign(vn.rgb)}finish(e,t,s){const r=s.material,i=e.outgoingLight,n=s.context.environment;if(n)switch(r.combine){case oe:i.rgb.assign(Po(i.rgb,i.rgb.mul(n.rgb),qd.mul(Xd)));break;case ne:i.rgb.assign(Po(i.rgb,n.rgb,qd.mul(Xd)));break;case ie:i.rgb.addAssign(n.rgb.mul(qd.mul(Xd)));break;default:console.warn("THREE.BasicLightingModel: Unsupported .combine value:",r.combine)}}}const dp=new ue;class hp extends Oh{static get type(){return"MeshBasicNodeMaterial"}constructor(e){super(),this.isMeshBasicNodeMaterial=!0,this.lights=!0,this.setDefaultValues(dp),this.setValues(e)}setupNormal(){return Ll}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ap(t):null}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new op(Sc)),t}setupOutgoingLight(){return vn.rgb}setupLightingModel(){return new lp}}const pp=Bi((({f0:e,f90:t,dotVH:s})=>{const r=s.mul(-5.55473).sub(6.98316).mul(s).exp2();return e.mul(r.oneMinus()).add(t.mul(r))})),gp=Bi((e=>e.diffuseColor.mul(1/Math.PI))),mp=Bi((({dotNH:e})=>Gn.mul(Di(.5)).add(1).mul(Di(1/Math.PI)).mul(e.pow(Gn)))),fp=Bi((({lightDirection:e})=>{const t=e.add(wl).normalize(),s=Dl.dot(t).clamp(),r=wl.dot(t).clamp(),i=pp({f0:Dn,f90:1,dotVH:r}),n=Di(.25),a=mp({dotNH:s});return i.mul(n).mul(a)}));class xp extends lp{constructor(e=!0){super(),this.specular=e}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=Dl.dot(e).clamp().mul(t);s.directDiffuse.addAssign(r.mul(gp({diffuseColor:vn.rgb}))),!0===this.specular&&s.directSpecular.addAssign(r.mul(fp({lightDirection:e})).mul(qd))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(gp({diffuseColor:vn}))),s.indirectDiffuse.mulAssign(e)}}const yp=new le;class bp extends Oh{static get type(){return"MeshLambertNodeMaterial"}constructor(e){super(),this.isMeshLambertNodeMaterial=!0,this.lights=!0,this.setDefaultValues(yp),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ap(t):null}setupLightingModel(){return new xp(!1)}}const Tp=new ce;class _p extends Oh{static get type(){return"MeshPhongNodeMaterial"}constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(Tp),this.setValues(e)}setupEnvironment(e){const t=super.setupEnvironment(e);return t?new ap(t):null}setupLightingModel(){return new xp}setupVariants(){const e=(this.shininessNode?Di(this.shininessNode):zd).max(1e-4);Gn.assign(e);const t=this.specularNode||Hd;Dn.assign(t)}copy(e){return this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,super.copy(e)}}const Np=Bi((()=>{const e=Ll.dFdx().abs().max(Ll.dFdy().abs());return e.x.max(e.y).max(e.z)})),vp=Bi((e=>{const{roughness:t}=e,s=Np();let r=t.max(.0525);return r=r.add(s),r=r.min(1),r})),Sp=Bi((({alpha:e,dotNL:t,dotNV:s})=>{const r=e.pow2(),i=t.mul(r.add(r.oneMinus().mul(s.pow2())).sqrt()),n=s.mul(r.add(r.oneMinus().mul(t.pow2())).sqrt());return aa(.5,i.add(n).max(wa))})).setLayout({name:"V_GGX_SmithCorrelated",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNL",type:"float"},{name:"dotNV",type:"float"}]}),Ap=Bi((({alphaT:e,alphaB:t,dotTV:s,dotBV:r,dotTL:i,dotBL:n,dotNV:a,dotNL:o})=>{const u=o.mul(ji(e.mul(s),t.mul(r),a).length()),l=a.mul(ji(e.mul(i),t.mul(n),o).length());return aa(.5,u.add(l)).saturate()})).setLayout({name:"V_GGX_SmithCorrelated_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotTV",type:"float",qualifier:"in"},{name:"dotBV",type:"float",qualifier:"in"},{name:"dotTL",type:"float",qualifier:"in"},{name:"dotBL",type:"float",qualifier:"in"},{name:"dotNV",type:"float",qualifier:"in"},{name:"dotNL",type:"float",qualifier:"in"}]}),Rp=Bi((({alpha:e,dotNH:t})=>{const s=e.pow2(),r=t.pow2().mul(s.oneMinus()).oneMinus();return s.div(r.pow2()).mul(1/Math.PI)})).setLayout({name:"D_GGX",type:"float",inputs:[{name:"alpha",type:"float"},{name:"dotNH",type:"float"}]}),Cp=Di(1/Math.PI),Ep=Bi((({alphaT:e,alphaB:t,dotNH:s,dotTH:r,dotBH:i})=>{const n=e.mul(t),a=ji(t.mul(r),e.mul(i),n.mul(s)),o=a.dot(a),u=n.div(o);return Cp.mul(n.mul(u.pow2()))})).setLayout({name:"D_GGX_Anisotropic",type:"float",inputs:[{name:"alphaT",type:"float",qualifier:"in"},{name:"alphaB",type:"float",qualifier:"in"},{name:"dotNH",type:"float",qualifier:"in"},{name:"dotTH",type:"float",qualifier:"in"},{name:"dotBH",type:"float",qualifier:"in"}]}),wp=Bi((e=>{const{lightDirection:t,f0:s,f90:r,roughness:i,f:n,USE_IRIDESCENCE:a,USE_ANISOTROPY:o}=e,u=e.normalView||Dl,l=i.pow2(),d=t.add(wl).normalize(),c=u.dot(t).clamp(),h=u.dot(wl).clamp(),p=u.dot(d).clamp(),g=wl.dot(d).clamp();let m,f,x=pp({f0:s,f90:r,dotVH:g});if(vi(a)&&(x=Bn.mix(x,n)),vi(o)){const e=Ln.dot(t),s=Ln.dot(wl),r=Ln.dot(d),i=Vn.dot(t),n=Vn.dot(wl),a=Vn.dot(d);m=Ap({alphaT:Pn,alphaB:l,dotTV:s,dotBV:n,dotTL:e,dotBL:i,dotNV:h,dotNL:c}),f=Ep({alphaT:Pn,alphaB:l,dotNH:p,dotTH:r,dotBH:a})}else m=Sp({alpha:l,dotNL:c,dotNV:h}),f=Rp({alpha:l,dotNH:p});return x.mul(m).mul(f)})),Mp=Bi((({roughness:e,dotNV:t})=>{const s=Yi(-1,-.0275,-.572,.022),r=Yi(1,.0425,1.04,-.04),i=e.mul(s).add(r),n=i.x.mul(i.x).min(t.mul(-9.28).exp2()).mul(i.x).add(i.y);return ki(-1.04,1.04).mul(n).add(i.zw)})).setLayout({name:"DFGApprox",type:"vec2",inputs:[{name:"roughness",type:"float"},{name:"dotNV",type:"vec3"}]}),Bp=Bi((e=>{const{dotNV:t,specularColor:s,specularF90:r,roughness:i}=e,n=Mp({dotNV:t,roughness:i});return s.mul(n.x).add(r.mul(n.y))})),Up=Bi((({f:e,f90:t,dotVH:s})=>{const r=s.oneMinus().saturate(),i=r.mul(r),n=r.mul(i,i).clamp(0,.9999);return e.sub(ji(t).mul(n)).div(n.oneMinus())})).setLayout({name:"Schlick_to_F0",type:"vec3",inputs:[{name:"f",type:"vec3"},{name:"f90",type:"float"},{name:"dotVH",type:"float"}]}),Fp=Bi((({roughness:e,dotNH:t})=>{const s=e.pow2(),r=Di(1).div(s),i=t.pow2().oneMinus().max(.0078125);return Di(2).add(r).mul(i.pow(r.mul(.5))).div(2*Math.PI)})).setLayout({name:"D_Charlie",type:"float",inputs:[{name:"roughness",type:"float"},{name:"dotNH",type:"float"}]}),Pp=Bi((({dotNV:e,dotNL:t})=>Di(1).div(Di(4).mul(t.add(e).sub(t.mul(e)))))).setLayout({name:"V_Neubelt",type:"float",inputs:[{name:"dotNV",type:"float"},{name:"dotNL",type:"float"}]}),Ip=Bi((({lightDirection:e})=>{const t=e.add(wl).normalize(),s=Dl.dot(e).clamp(),r=Dl.dot(wl).clamp(),i=Dl.dot(t).clamp(),n=Fp({roughness:Mn,dotNH:i}),a=Pp({dotNV:r,dotNL:s});return wn.mul(n).mul(a)})),Lp=Bi((({N:e,V:t,roughness:s})=>{const r=e.dot(t).saturate(),i=ki(s,r.oneMinus().sqrt());return i.assign(i.mul(.984375).add(.0078125)),i})).setLayout({name:"LTC_Uv",type:"vec2",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"roughness",type:"float"}]}),Vp=Bi((({f:e})=>{const t=e.length();return bo(t.mul(t).add(e.z).div(t.add(1)),0)})).setLayout({name:"LTC_ClippedSphereFormFactor",type:"float",inputs:[{name:"f",type:"vec3"}]}),Dp=Bi((({v1:e,v2:t})=>{const s=e.dot(t),r=s.abs().toVar(),i=r.mul(.0145206).add(.4965155).mul(r).add(.8543985).toVar(),n=r.add(4.1616724).mul(r).add(3.417594).toVar(),a=i.div(n),o=s.greaterThan(0).select(a,bo(s.mul(s).oneMinus(),1e-7).inverseSqrt().mul(.5).sub(a));return e.cross(t).mul(o)})).setLayout({name:"LTC_EdgeVectorFormFactor",type:"vec3",inputs:[{name:"v1",type:"vec3"},{name:"v2",type:"vec3"}]}),Op=Bi((({N:e,V:t,P:s,mInv:r,p0:i,p1:n,p2:a,p3:o})=>{const u=n.sub(i).toVar(),l=o.sub(i).toVar(),d=u.cross(l),c=ji().toVar();return Ii(d.dot(s.sub(i)).greaterThanEqual(0),(()=>{const u=t.sub(e.mul(t.dot(e))).normalize(),l=e.cross(u).negate(),d=r.mul(sn(u,l,e).transpose()).toVar(),h=d.mul(i.sub(s)).normalize().toVar(),p=d.mul(n.sub(s)).normalize().toVar(),g=d.mul(a.sub(s)).normalize().toVar(),m=d.mul(o.sub(s)).normalize().toVar(),f=ji(0).toVar();f.addAssign(Dp({v1:h,v2:p})),f.addAssign(Dp({v1:p,v2:g})),f.addAssign(Dp({v1:g,v2:m})),f.addAssign(Dp({v1:m,v2:h})),c.assign(ji(Vp({f:f})))})),c})).setLayout({name:"LTC_Evaluate",type:"vec3",inputs:[{name:"N",type:"vec3"},{name:"V",type:"vec3"},{name:"P",type:"vec3"},{name:"mInv",type:"mat3"},{name:"p0",type:"vec3"},{name:"p1",type:"vec3"},{name:"p2",type:"vec3"},{name:"p3",type:"vec3"}]}),Gp=1/6,zp=e=>na(Gp,na(e,na(e,e.negate().add(3)).sub(3)).add(1)),kp=e=>na(Gp,na(e,na(e,na(3,e).sub(6))).add(4)),$p=e=>na(Gp,na(e,na(e,na(-3,e).add(3)).add(3)).add(1)),Hp=e=>na(Gp,Co(e,3)),Wp=e=>zp(e).add(kp(e)),jp=e=>$p(e).add(Hp(e)),qp=e=>ra(-1,kp(e).div(zp(e).add(kp(e)))),Xp=e=>ra(1,Hp(e).div($p(e).add(Hp(e)))),Kp=(e,t,s)=>{const r=e.uvNode,i=na(r,t.zw).add(.5),n=Ha(i),a=qa(i),o=Wp(a.x),u=jp(a.x),l=qp(a.x),d=Xp(a.x),c=qp(a.y),h=Xp(a.y),p=ki(n.x.add(l),n.y.add(c)).sub(.5).mul(t.xy),g=ki(n.x.add(d),n.y.add(c)).sub(.5).mul(t.xy),m=ki(n.x.add(l),n.y.add(h)).sub(.5).mul(t.xy),f=ki(n.x.add(d),n.y.add(h)).sub(.5).mul(t.xy),x=Wp(a.y).mul(ra(o.mul(e.uv(p).level(s)),u.mul(e.uv(g).level(s)))),y=jp(a.y).mul(ra(o.mul(e.uv(m).level(s)),u.mul(e.uv(f).level(s))));return x.add(y)},Yp=Bi((([e,t=Di(3)])=>{const s=ki(e.size(Oi(t))),r=ki(e.size(Oi(t.add(1)))),i=aa(1,s),n=aa(1,r),a=Kp(e,Yi(i,s),Ha(t)),o=Kp(e,Yi(n,r),Wa(t));return qa(t).mix(a,o)})),Qp=Bi((([e,t,s,r,i])=>{const n=ji(Vo(t.negate(),ja(e),aa(1,r))),a=ji(ro(i[0].xyz),ro(i[1].xyz),ro(i[2].xyz));return ja(n).mul(s.mul(a))})).setLayout({name:"getVolumeTransmissionRay",type:"vec3",inputs:[{name:"n",type:"vec3"},{name:"v",type:"vec3"},{name:"thickness",type:"float"},{name:"ior",type:"float"},{name:"modelMatrix",type:"mat4"}]}),Zp=Bi((([e,t])=>e.mul(Io(t.mul(2).sub(2),0,1)))).setLayout({name:"applyIorToRoughness",type:"float",inputs:[{name:"roughness",type:"float"},{name:"ior",type:"float"}]}),Jp=Ah(),tg=Bi((([e,t,s])=>{const r=Jp.uv(e),i=za(Di(hh.x)).mul(Zp(t,s));return Yp(r,i)})),sg=Bi((([e,t,s])=>(Ii(s.notEqual(0),(()=>{const r=Ga(t).negate().div(s);return Da(r.negate().mul(e))})),ji(1)))).setLayout({name:"volumeAttenuation",type:"vec3",inputs:[{name:"transmissionDistance",type:"float"},{name:"attenuationColor",type:"vec3"},{name:"attenuationDistance",type:"float"}]}),rg=Bi((([e,t,s,r,i,n,a,o,u,l,d,c,h,p,g])=>{let m,f;if(g){m=Yi().toVar(),f=ji().toVar();const i=d.sub(1).mul(g.mul(.025)),n=ji(d.sub(i),d,d.add(i));$c({start:0,end:3},(({i:i})=>{const d=n.element(i),g=Qp(e,t,c,d,o),x=a.add(g),y=l.mul(u.mul(Yi(x,1))),b=ki(y.xy.div(y.w)).toVar();b.addAssign(1),b.divAssign(2),b.assign(ki(b.x,b.y.oneMinus()));const T=tg(b,s,d);m.element(i).assign(T.element(i)),m.a.addAssign(T.a),f.element(i).assign(r.element(i).mul(sg(ro(g),h,p).element(i)))})),m.a.divAssign(3)}else{const i=Qp(e,t,c,d,o),n=a.add(i),g=l.mul(u.mul(Yi(n,1))),x=ki(g.xy.div(g.w)).toVar();x.addAssign(1),x.divAssign(2),x.assign(ki(x.x,x.y.oneMinus())),m=tg(x,s,d),f=r.mul(sg(ro(i),h,p))}const x=f.rgb.mul(m.rgb),y=e.dot(t).clamp(),b=ji(Bp({dotNV:y,specularColor:i,specularF90:n,roughness:s})),T=f.r.add(f.g,f.b).div(3);return Yi(b.oneMinus().mul(x),m.a.oneMinus().mul(T).oneMinus())})),ig=sn(3.2404542,-.969266,.0556434,-1.5371385,1.8760108,-.2040259,-.4985314,.041556,1.0572252),ng=(e,t)=>e.sub(t).div(e.add(t)).pow2(),ag=(e,t)=>{const s=e.mul(2*Math.PI*1e-9),r=ji(54856e-17,44201e-17,52481e-17),i=ji(1681e3,1795300,2208400),n=ji(43278e5,93046e5,66121e5),a=Di(9747e-17*Math.sqrt(2*Math.PI*45282e5)).mul(s.mul(2239900).add(t.x).cos()).mul(s.pow2().mul(-45282e5).exp());let o=r.mul(n.mul(2*Math.PI).sqrt()).mul(i.mul(s).add(t).cos()).mul(s.pow2().negate().mul(n).exp());o=ji(o.x.add(a),o.y,o.z).div(1.0685e-7);return ig.mul(o)},og=Bi((({outsideIOR:e,eta2:t,cosTheta1:s,thinFilmThickness:r,baseF0:i})=>{const n=Po(e,t,Do(0,.03,r)),a=e.div(n).pow2().mul(Di(1).sub(s.pow2())),o=Di(1).sub(a).sqrt(),u=ng(n,e),l=pp({f0:u,f90:1,dotVH:s}),d=l.oneMinus(),c=n.lessThan(e).select(Math.PI,0),h=Di(Math.PI).sub(c),p=(e=>{const t=e.sqrt();return ji(1).add(t).div(ji(1).sub(t))})(i.clamp(0,.9999)),g=ng(p,n.toVec3()),m=pp({f0:g,f90:1,dotVH:o}),f=ji(p.x.lessThan(n).select(Math.PI,0),p.y.lessThan(n).select(Math.PI,0),p.z.lessThan(n).select(Math.PI,0)),x=n.mul(r,o,2),y=ji(h).add(f),b=l.mul(m).clamp(1e-5,.9999),T=b.sqrt(),_=d.pow2().mul(m).div(ji(1).sub(b));let N=l.add(_),v=_.sub(d);for(let e=1;e<=2;++e){v=v.mul(T);const t=ag(Di(e).mul(x),Di(e).mul(y)).mul(2);N=N.add(v.mul(t))}return N.max(ji(0))})).setLayout({name:"evalIridescence",type:"vec3",inputs:[{name:"outsideIOR",type:"float"},{name:"eta2",type:"float"},{name:"cosTheta1",type:"float"},{name:"thinFilmThickness",type:"float"},{name:"baseF0",type:"vec3"}]}),ug=Bi((({normal:e,viewDir:t,roughness:s})=>{const r=e.dot(t).saturate(),i=s.pow2(),n=Ho(s.lessThan(.25),Di(-339.2).mul(i).add(Di(161.4).mul(s)).sub(25.9),Di(-8.48).mul(i).add(Di(14.3).mul(s)).sub(9.95)),a=Ho(s.lessThan(.25),Di(44).mul(i).sub(Di(23.7).mul(s)).add(3.26),Di(1.97).mul(i).sub(Di(3.27).mul(s)).add(.72));return Ho(s.lessThan(.25),0,Di(.1).mul(s).sub(.025)).add(n.mul(r).add(a).exp()).mul(1/Math.PI).saturate()})),lg=ji(.04),hg=Di(1);class pg extends up{constructor(e=!1,t=!1,s=!1,r=!1,i=!1,n=!1){super(),this.clearcoat=e,this.sheen=t,this.iridescence=s,this.anisotropy=r,this.transmission=i,this.dispersion=n,this.clearcoatRadiance=null,this.clearcoatSpecularDirect=null,this.clearcoatSpecularIndirect=null,this.sheenSpecularDirect=null,this.sheenSpecularIndirect=null,this.iridescenceFresnel=null,this.iridescenceF0=null}start(e){if(!0===this.clearcoat&&(this.clearcoatRadiance=ji().toVar("clearcoatRadiance"),this.clearcoatSpecularDirect=ji().toVar("clearcoatSpecularDirect"),this.clearcoatSpecularIndirect=ji().toVar("clearcoatSpecularIndirect")),!0===this.sheen&&(this.sheenSpecularDirect=ji().toVar("sheenSpecularDirect"),this.sheenSpecularIndirect=ji().toVar("sheenSpecularIndirect")),!0===this.iridescence){const e=Dl.dot(wl).clamp();this.iridescenceFresnel=og({outsideIOR:Di(1),eta2:Un,cosTheta1:e,thinFilmThickness:Fn,baseF0:Dn}),this.iridescenceF0=Up({f:this.iridescenceFresnel,f90:1,dotVH:e})}if(!0===this.transmission){const t=Rl,s=il.sub(Rl).normalize(),r=Ol;e.backdrop=rg(r,s,An,vn,Dn,On,t,gl,tl,Zu,Wn,qn,Kn,Xn,this.dispersion?Yn:null),e.backdropAlpha=jn,vn.a.mulAssign(Po(1,e.backdrop.a,jn))}}computeMultiscattering(e,t,s){const r=Dl.dot(wl).clamp(),i=Mp({roughness:An,dotNV:r}),n=(this.iridescenceF0?Bn.mix(Dn,this.iridescenceF0):Dn).mul(i.x).add(s.mul(i.y)),a=i.x.add(i.y).oneMinus(),o=Dn.add(Dn.oneMinus().mul(.047619)),u=n.mul(o).div(a.mul(o).oneMinus());e.addAssign(n),t.addAssign(u.mul(a))}direct({lightDirection:e,lightColor:t,reflectedLight:s}){const r=Dl.dot(e).clamp().mul(t);if(!0===this.sheen&&this.sheenSpecularDirect.addAssign(r.mul(Ip({lightDirection:e}))),!0===this.clearcoat){const s=Gl.dot(e).clamp().mul(t);this.clearcoatSpecularDirect.addAssign(s.mul(wp({lightDirection:e,f0:lg,f90:hg,roughness:En,normalView:Gl})))}s.directDiffuse.addAssign(r.mul(gp({diffuseColor:vn.rgb}))),s.directSpecular.addAssign(r.mul(wp({lightDirection:e,f0:Dn,f90:1,roughness:An,iridescence:this.iridescence,f:this.iridescenceFresnel,USE_IRIDESCENCE:this.iridescence,USE_ANISOTROPY:this.anisotropy})))}directRectArea({lightColor:e,lightPosition:t,halfWidth:s,halfHeight:r,reflectedLight:i,ltc_1:n,ltc_2:a}){const o=t.add(s).sub(r),u=t.sub(s).sub(r),l=t.sub(s).add(r),d=t.add(s).add(r),c=Dl,h=wl,p=El.toVar(),g=Lp({N:c,V:h,roughness:An}),m=n.uv(g).toVar(),f=a.uv(g).toVar(),x=sn(ji(m.x,0,m.y),ji(0,1,0),ji(m.z,0,m.w)).toVar(),y=Dn.mul(f.x).add(Dn.oneMinus().mul(f.y)).toVar();i.directSpecular.addAssign(e.mul(y).mul(Op({N:c,V:h,P:p,mInv:x,p0:o,p1:u,p2:l,p3:d}))),i.directDiffuse.addAssign(e.mul(vn).mul(Op({N:c,V:h,P:p,mInv:sn(1,0,0,0,1,0,0,0,1),p0:o,p1:u,p2:l,p3:d})))}indirect(e,t,s){this.indirectDiffuse(e,t,s),this.indirectSpecular(e,t,s),this.ambientOcclusion(e,t,s)}indirectDiffuse({irradiance:e,reflectedLight:t}){t.indirectDiffuse.addAssign(e.mul(gp({diffuseColor:vn})))}indirectSpecular({radiance:e,iblIrradiance:t,reflectedLight:s}){if(!0===this.sheen&&this.sheenSpecularIndirect.addAssign(t.mul(wn,ug({normal:Dl,viewDir:wl,roughness:Mn}))),!0===this.clearcoat){const e=Gl.dot(wl).clamp(),t=Bp({dotNV:e,specularColor:lg,specularF90:hg,roughness:En});this.clearcoatSpecularIndirect.addAssign(this.clearcoatRadiance.mul(t))}const r=ji().toVar("singleScattering"),i=ji().toVar("multiScattering"),n=t.mul(1/Math.PI);this.computeMultiscattering(r,i,On);const a=r.add(i),o=vn.mul(a.r.max(a.g).max(a.b).oneMinus());s.indirectSpecular.addAssign(e.mul(r)),s.indirectSpecular.addAssign(i.mul(n)),s.indirectDiffuse.addAssign(o.mul(n))}ambientOcclusion({ambientOcclusion:e,reflectedLight:t}){const s=Dl.dot(wl).clamp().add(e),r=An.mul(-16).oneMinus().negate().exp2(),i=e.sub(s.pow(r).oneMinus()).clamp();!0===this.clearcoat&&this.clearcoatSpecularIndirect.mulAssign(e),!0===this.sheen&&this.sheenSpecularIndirect.mulAssign(e),t.indirectDiffuse.mulAssign(e),t.indirectSpecular.mulAssign(i)}finish(e){const{outgoingLight:t}=e;if(!0===this.clearcoat){const e=Gl.dot(wl).clamp(),s=pp({dotVH:e,f0:lg,f90:hg}),r=t.mul(Cn.mul(s).oneMinus()).add(this.clearcoatSpecularDirect.add(this.clearcoatSpecularIndirect).mul(Cn));t.assign(r)}if(!0===this.sheen){const e=wn.r.max(wn.g).max(wn.b).mul(.157).oneMinus(),s=t.mul(e).add(this.sheenSpecularDirect,this.sheenSpecularIndirect);t.assign(s)}}}const gg=Di(1),mg=Di(-2),xg=Di(.8),yg=Di(-1),bg=Di(.4),Tg=Di(2),_g=Di(.305),Ng=Di(3),vg=Di(.21),Sg=Di(4),Ag=Di(4),Rg=Di(16),Cg=Bi((([e])=>{const t=ji(to(e)).toVar(),s=Di(-1).toVar();return Ii(t.x.greaterThan(t.z),(()=>{Ii(t.x.greaterThan(t.y),(()=>{s.assign(Ho(e.x.greaterThan(0),0,3))})).Else((()=>{s.assign(Ho(e.y.greaterThan(0),1,4))}))})).Else((()=>{Ii(t.z.greaterThan(t.y),(()=>{s.assign(Ho(e.z.greaterThan(0),2,5))})).Else((()=>{s.assign(Ho(e.y.greaterThan(0),1,4))}))})),s})).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),Eg=Bi((([e,t])=>{const s=ki().toVar();return Ii(t.equal(0),(()=>{s.assign(ki(e.z,e.y).div(to(e.x)))})).ElseIf(t.equal(1),(()=>{s.assign(ki(e.x.negate(),e.z.negate()).div(to(e.y)))})).ElseIf(t.equal(2),(()=>{s.assign(ki(e.x.negate(),e.y).div(to(e.z)))})).ElseIf(t.equal(3),(()=>{s.assign(ki(e.z.negate(),e.y).div(to(e.x)))})).ElseIf(t.equal(4),(()=>{s.assign(ki(e.x.negate(),e.z).div(to(e.y)))})).Else((()=>{s.assign(ki(e.x,e.y).div(to(e.z)))})),na(.5,s.add(1))})).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),wg=Bi((([e])=>{const t=Di(0).toVar();return Ii(e.greaterThanEqual(xg),(()=>{t.assign(gg.sub(e).mul(yg.sub(mg)).div(gg.sub(xg)).add(mg))})).ElseIf(e.greaterThanEqual(bg),(()=>{t.assign(xg.sub(e).mul(Tg.sub(yg)).div(xg.sub(bg)).add(yg))})).ElseIf(e.greaterThanEqual(_g),(()=>{t.assign(bg.sub(e).mul(Ng.sub(Tg)).div(bg.sub(_g)).add(Tg))})).ElseIf(e.greaterThanEqual(vg),(()=>{t.assign(_g.sub(e).mul(Sg.sub(Ng)).div(_g.sub(vg)).add(Ng))})).Else((()=>{t.assign(Di(-2).mul(za(na(1.16,e))))})),t})).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),Mg=Bi((([e,t])=>{const s=e.toVar();s.assign(na(2,s).sub(1));const r=ji(s,1).toVar();return Ii(t.equal(0),(()=>{r.assign(r.zyx)})).ElseIf(t.equal(1),(()=>{r.assign(r.xzy),r.xz.mulAssign(-1)})).ElseIf(t.equal(2),(()=>{r.x.mulAssign(-1)})).ElseIf(t.equal(3),(()=>{r.assign(r.zyx),r.xz.mulAssign(-1)})).ElseIf(t.equal(4),(()=>{r.assign(r.xzy),r.xy.mulAssign(-1)})).ElseIf(t.equal(5),(()=>{r.z.mulAssign(-1)})),r})).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),Bg=Bi((([e,t,s,r,i,n])=>{const a=Di(s),o=ji(t),u=Io(wg(a),mg,n),l=qa(u),d=Ha(u),c=ji(Ug(e,o,d,r,i,n)).toVar();return Ii(l.notEqual(0),(()=>{const t=ji(Ug(e,o,d.add(1),r,i,n)).toVar();c.assign(Po(c,t,l))})),c})),Ug=Bi((([e,t,s,r,i,n])=>{const a=Di(s).toVar(),o=ji(t),u=Di(Cg(o)).toVar(),l=Di(bo(Ag.sub(a),0)).toVar();a.assign(bo(a,Ag));const d=Di(Oa(a)).toVar(),c=ki(Eg(o,u).mul(d.sub(2)).add(1)).toVar();return Ii(u.greaterThan(2),(()=>{c.y.addAssign(d),u.subAssign(3)})),c.x.addAssign(u.mul(d)),c.x.addAssign(l.mul(na(3,Rg))),c.y.addAssign(na(4,Oa(n).sub(d))),c.x.mulAssign(r),c.y.mulAssign(i),e.uv(c).grad(ki(),ki())})),Fg=Bi((({envMap:e,mipInt:t,outputDirection:s,theta:r,axis:i,CUBEUV_TEXEL_WIDTH:n,CUBEUV_TEXEL_HEIGHT:a,CUBEUV_MAX_MIP:o})=>{const u=Ka(r),l=s.mul(u).add(i.cross(s).mul(Xa(r))).add(i.mul(i.dot(s).mul(u.oneMinus())));return Ug(e,l,t,n,a,o)})),Pg=Bi((({n:e,latitudinal:t,poleAxis:s,outputDirection:r,weights:i,samples:n,dTheta:a,mipInt:o,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})=>{const h=ji(Ho(t,s,Ro(s,r))).toVar();Ii(Fa(h.equals(ji(0))),(()=>{h.assign(ji(r.z,0,r.x.negate()))})),h.assign(ja(h));const p=ji().toVar();return p.addAssign(i.element(Oi(0)).mul(Fg({theta:0,axis:h,outputDirection:r,mipInt:o,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),$c({start:Oi(1),end:e},(({i:e})=>{Ii(e.greaterThanEqual(n),(()=>{Wc()}));const t=Di(a.mul(Di(e))).toVar();p.addAssign(i.element(e).mul(Fg({theta:t.mul(-1),axis:h,outputDirection:r,mipInt:o,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c}))),p.addAssign(i.element(e).mul(Fg({theta:t,axis:h,outputDirection:r,mipInt:o,envMap:u,CUBEUV_TEXEL_WIDTH:l,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:c})))})),Yi(p,1)}));let Ig=null;const Lg=new WeakMap;function Vg(e){let t=Lg.get(e);if((void 0!==t?t.pmremVersion:-1)!==e.pmremVersion){const s=e.image;if(e.isCubeTexture){if(!function(e){if(null==e)return!1;let t=0;const s=6;for(let r=0;r<s;r++)void 0!==e[r]&&t++;return t===s}(s))return null;t=Ig.fromCubemap(e,t)}else{if(!function(e){return null!=e&&e.height>0}(s))return null;t=Ig.fromEquirectangular(e,t)}t.pmremVersion=e.pmremVersion,Lg.set(e,t)}return t.texture}class Dg extends Or{static get type(){return"PMREMNode"}constructor(e,t=null,s=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=s,this._generator=null;const r=new he;r.isRenderTargetTexture=!0,this._texture=ju(r),this._width=bn(0),this._height=bn(0),this._maxMip=bn(0),this.updateBeforeType=wr.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=function(e){const t=Math.log2(e)-2,s=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:s,maxMip:t}}(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(){let e=this._pmrem;const t=e?e.pmremVersion:-1,s=this._value;t!==s.pmremVersion&&(e=!0===s.isPMREMTexture?s:Vg(s),null!==e&&(this._pmrem=e,this.updateFromTexture(e)))}setup(e){null===Ig&&(Ig=e.createPMREMGenerator()),this.updateBefore(e);let t=this.uvNode;null===t&&e.context.getUV&&(t=e.context.getUV(this));const s=this.value;e.renderer.coordinateSystem===_&&!0!==s.isPMREMTexture&&!0===s.isRenderTargetTexture&&(t=ji(t.x.negate(),t.yz));let r=this.levelNode;return null===r&&e.context.getTextureLevel&&(r=e.context.getTextureLevel(this)),Bg(this._texture,t,r,this._width,this._height,this._maxMip)}}const Og=wi(Dg),Gg=new WeakMap;class zg extends sh{static get type(){return"EnvironmentNode"}constructor(e=null){super(),this.envNode=e}setup(e){const{material:t}=e;let s=this.envNode;if(s.isTextureNode||s.isMaterialReferenceNode){const e=s.isTextureNode?s.value:t[s.property];let r=Gg.get(e);void 0===r&&(r=Og(e),Gg.set(e,r)),s=r}const r=t.envMap?nd("envMapIntensity","float",e.material):nd("environmentIntensity","float",e.scene),i=!0===t.useAnisotropy||t.anisotropy>0?wd:Dl,n=s.context(kg(An,i)).mul(r),a=s.context($g(Ol)).mul(Math.PI).mul(r),o=Au(n),u=Au(a);e.context.radiance.addAssign(o),e.context.iblIrradiance.addAssign(u);const l=e.context.lightingModel.clearcoatRadiance;if(l){const e=s.context(kg(En,Gl)).mul(r),t=Au(e);l.addAssign(t)}}}const kg=(e,t)=>{let s=null;return{getUV:()=>(null===s&&(s=wl.negate().reflect(t),s=e.mul(e).mix(s,t).normalize(),s=s.transformDirection(tl)),s),getTextureLevel:()=>e}},$g=e=>({getUV:()=>e,getTextureLevel:()=>Di(1)}),Hg=new pe;class Wg extends Oh{static get type(){return"MeshStandardNodeMaterial"}constructor(e){super(),this.isMeshStandardNodeMaterial=!0,this.lights=!0,this.emissiveNode=null,this.metalnessNode=null,this.roughnessNode=null,this.setDefaultValues(Hg),this.setValues(e)}setupEnvironment(e){let t=super.setupEnvironment(e);return null===t&&e.environmentNode&&(t=e.environmentNode),t?new zg(t):null}setupLightingModel(){return new pg}setupSpecular(){const e=Po(ji(.04),vn.rgb,Rn);Dn.assign(e),On.assign(1)}setupVariants(){const e=this.metalnessNode?Di(this.metalnessNode):Yd;Rn.assign(e);let t=this.roughnessNode?Di(this.roughnessNode):Kd;t=vp({roughness:t}),An.assign(t),this.setupSpecular(),vn.assign(Yi(vn.rgb.mul(e.oneMinus()),vn.a))}copy(e){return this.emissiveNode=e.emissiveNode,this.metalnessNode=e.metalnessNode,this.roughnessNode=e.roughnessNode,super.copy(e)}}const jg=new ge;class qg extends Wg{static get type(){return"MeshPhysicalNodeMaterial"}constructor(e){super(),this.isMeshPhysicalNodeMaterial=!0,this.clearcoatNode=null,this.clearcoatRoughnessNode=null,this.clearcoatNormalNode=null,this.sheenNode=null,this.sheenRoughnessNode=null,this.iridescenceNode=null,this.iridescenceIORNode=null,this.iridescenceThicknessNode=null,this.specularIntensityNode=null,this.specularColorNode=null,this.iorNode=null,this.transmissionNode=null,this.thicknessNode=null,this.attenuationDistanceNode=null,this.attenuationColorNode=null,this.dispersionNode=null,this.anisotropyNode=null,this.setDefaultValues(jg),this.setValues(e)}get useClearcoat(){return this.clearcoat>0||null!==this.clearcoatNode}get useIridescence(){return this.iridescence>0||null!==this.iridescenceNode}get useSheen(){return this.sheen>0||null!==this.sheenNode}get useAnisotropy(){return this.anisotropy>0||null!==this.anisotropyNode}get useTransmission(){return this.transmission>0||null!==this.transmissionNode}get useDispersion(){return this.dispersion>0||null!==this.dispersionNode}setupSpecular(){const e=this.iorNode?Di(this.iorNode):pc;Wn.assign(e),Dn.assign(Po(yo(Eo(Wn.sub(1).div(Wn.add(1))).mul(jd),ji(1)).mul(Wd),vn.rgb,Rn)),On.assign(Po(Wd,1,Rn))}setupLightingModel(){return new pg(this.useClearcoat,this.useSheen,this.useIridescence,this.useAnisotropy,this.useTransmission,this.useDispersion)}setupVariants(e){if(super.setupVariants(e),this.useClearcoat){const e=this.clearcoatNode?Di(this.clearcoatNode):Zd,t=this.clearcoatRoughnessNode?Di(this.clearcoatRoughnessNode):Jd;Cn.assign(e),En.assign(vp({roughness:t}))}if(this.useSheen){const e=this.sheenNode?ji(this.sheenNode):rc,t=this.sheenRoughnessNode?Di(this.sheenRoughnessNode):ic;wn.assign(e),Mn.assign(t)}if(this.useIridescence){const e=this.iridescenceNode?Di(this.iridescenceNode):ac,t=this.iridescenceIORNode?Di(this.iridescenceIORNode):oc,s=this.iridescenceThicknessNode?Di(this.iridescenceThicknessNode):uc;Bn.assign(e),Un.assign(t),Fn.assign(s)}if(this.useAnisotropy){const e=(this.anisotropyNode?ki(this.anisotropyNode):nc).toVar();In.assign(e.length()),Ii(In.equal(0),(()=>{e.assign(ki(1,0))})).Else((()=>{e.divAssign(ki(In)),In.assign(In.saturate())})),Pn.assign(In.pow2().mix(An.pow2(),1)),Ln.assign(Rd[0].mul(e.x).add(Rd[1].mul(e.y))),Vn.assign(Rd[1].mul(e.x).sub(Rd[0].mul(e.y)))}if(this.useTransmission){const e=this.transmissionNode?Di(this.transmissionNode):lc,t=this.thicknessNode?Di(this.thicknessNode):hc,s=this.attenuationDistanceNode?Di(this.attenuationDistanceNode):gc,r=this.attenuationColorNode?ji(this.attenuationColorNode):mc;if(jn.assign(e),qn.assign(t),Xn.assign(s),Kn.assign(r),this.useDispersion){const e=this.dispersionNode?Di(this.dispersionNode):vc;Yn.assign(e)}}}setupClearcoatNormal(){return this.clearcoatNormalNode?ji(this.clearcoatNormalNode):tc}setup(e){e.context.setupClearcoatNormal=()=>this.setupClearcoatNormal(e),super.setup(e)}copy(e){return this.clearcoatNode=e.clearcoatNode,this.clearcoatRoughnessNode=e.clearcoatRoughnessNode,this.clearcoatNormalNode=e.clearcoatNormalNode,this.sheenNode=e.sheenNode,this.sheenRoughnessNode=e.sheenRoughnessNode,this.iridescenceNode=e.iridescenceNode,this.iridescenceIORNode=e.iridescenceIORNode,this.iridescenceThicknessNode=e.iridescenceThicknessNode,this.specularIntensityNode=e.specularIntensityNode,this.specularColorNode=e.specularColorNode,this.transmissionNode=e.transmissionNode,this.thicknessNode=e.thicknessNode,this.attenuationDistanceNode=e.attenuationDistanceNode,this.attenuationColorNode=e.attenuationColorNode,this.dispersionNode=e.dispersionNode,this.anisotropyNode=e.anisotropyNode,super.copy(e)}}class Xg extends pg{constructor(e,t,s,r){super(e,t,s),this.useSSS=r}direct({lightDirection:e,lightColor:t,reflectedLight:s},r,i){if(!0===this.useSSS){const r=i.material,{thicknessColorNode:n,thicknessDistortionNode:a,thicknessAmbientNode:o,thicknessAttenuationNode:u,thicknessPowerNode:l,thicknessScaleNode:d}=r,c=e.add(Dl.mul(a)).normalize(),h=Di(wl.dot(c.negate()).saturate().pow(l).mul(d)),p=ji(h.add(o).mul(n));s.directDiffuse.addAssign(p.mul(u.mul(t)))}super.direct({lightDirection:e,lightColor:t,reflectedLight:s},r,i)}}class Kg extends qg{static get type(){return"MeshSSSNodeMaterial"}constructor(e){super(e),this.thicknessColorNode=null,this.thicknessDistortionNode=Di(.1),this.thicknessAmbientNode=Di(0),this.thicknessAttenuationNode=Di(.1),this.thicknessPowerNode=Di(2),this.thicknessScaleNode=Di(10)}get useSSS(){return null!==this.thicknessColorNode}setupLightingModel(){return new Xg(this.useClearcoat,this.useSheen,this.useIridescence,this.useSSS)}copy(e){return this.thicknessColorNode=e.thicknessColorNode,this.thicknessDistortionNode=e.thicknessDistortionNode,this.thicknessAmbientNode=e.thicknessAmbientNode,this.thicknessAttenuationNode=e.thicknessAttenuationNode,this.thicknessPowerNode=e.thicknessPowerNode,this.thicknessScaleNode=e.thicknessScaleNode,super.copy(e)}}const Yg=Bi((({normal:e,lightDirection:t,builder:s})=>{const r=e.dot(t),i=ki(r.mul(.5).add(.5),0);if(s.material.gradientMap){const e=ld("gradientMap","texture").context({getUV:()=>i});return ji(e.r)}{const e=i.fwidth().mul(.5);return Po(ji(.7),ji(1),Do(Di(.7).sub(e.x),Di(.7).add(e.x),i.x))}}));class Qg extends up{direct({lightDirection:e,lightColor:t,reflectedLight:s},r,i){const n=Yg({normal:Fl,lightDirection:e,builder:i}).mul(t);s.directDiffuse.addAssign(n.mul(gp({diffuseColor:vn.rgb})))}indirect({ambientOcclusion:e,irradiance:t,reflectedLight:s}){s.indirectDiffuse.addAssign(t.mul(gp({diffuseColor:vn}))),s.indirectDiffuse.mulAssign(e)}}const Zg=new me;class Jg extends Oh{static get type(){return"MeshToonNodeMaterial"}constructor(e){super(),this.isMeshToonNodeMaterial=!0,this.lights=!0,this.setDefaultValues(Zg),this.setValues(e)}setupLightingModel(){return new Qg}}class tm extends Or{static get type(){return"MatcapUVNode"}constructor(){super("vec2")}setup(){const e=ji(wl.z,0,wl.x.negate()).normalize(),t=wl.cross(e);return ki(e.dot(Dl),t.dot(Dl)).mul(.495).add(.5)}}const sm=Mi(tm),rm=new xe;class im extends Oh{static get type(){return"MeshMatcapNodeMaterial"}constructor(e){super(),this.lights=!1,this.isMeshMatcapNodeMaterial=!0,this.setDefaultValues(rm),this.setValues(e)}setupVariants(e){const t=sm;let s;s=e.material.matcap?ld("matcap","texture").context({getUV:()=>t}):ji(Po(.2,.8,t.y)),vn.rgb.mulAssign(s.rgb)}}const nm=new G;class om extends Oh{static get type(){return"PointsNodeMaterial"}constructor(e){super(),this.isPointsNodeMaterial=!0,this.lights=!1,this.transparent=!0,this.sizeNode=null,this.setDefaultValues(nm),this.setValues(e)}copy(e){return this.sizeNode=e.sizeNode,super.copy(e)}}class um extends Or{static get type(){return"RotateNode"}constructor(e,t){super(),this.positionNode=e,this.rotationNode=t}getNodeType(e){return this.positionNode.getNodeType(e)}setup(e){const{rotationNode:t,positionNode:s}=this;if("vec2"===this.getNodeType(e)){const e=t.cos(),r=t.sin();return tn(e,r,r.negate(),e).mul(s)}{const e=t,r=rn(Yi(1,0,0,0),Yi(0,Ka(e.x),Xa(e.x).negate(),0),Yi(0,Xa(e.x),Ka(e.x),0),Yi(0,0,0,1)),i=rn(Yi(Ka(e.y),0,Xa(e.y),0),Yi(0,1,0,0),Yi(Xa(e.y).negate(),0,Ka(e.y),0),Yi(0,0,0,1)),n=rn(Yi(Ka(e.z),Xa(e.z).negate(),0,0),Yi(Xa(e.z),Ka(e.z),0,0),Yi(0,0,1,0),Yi(0,0,0,1));return r.mul(i).mul(n).mul(Yi(s,1)).xyz}}}const lm=wi(um),dm=new ye;class hm extends Oh{static get type(){return"SpriteNodeMaterial"}constructor(e){super(),this.isSpriteNodeMaterial=!0,this.lights=!1,this.positionNode=null,this.rotationNode=null,this.scaleNode=null,this.setDefaultValues(dm),this.setValues(e)}setupPosition({object:e,context:t}){const{positionNode:s,rotationNode:r,scaleNode:i}=this,n=Sl;let a=Tl.mul(ji(s||0)),o=ki(gl[0].xyz.length(),gl[1].xyz.length());null!==i&&(o=o.mul(i));let u=n.xy;e.center&&!0===e.center.isVector2&&(u=u.sub(bn(e.center).sub(.5))),u=u.mul(o);const l=Di(r||sc),d=lm(u,l);a=Yi(a.xy.add(d),a.zw);const c=Zu.mul(a);return t.vertex=n,c}copy(e){return this.positionNode=e.positionNode,this.rotationNode=e.rotationNode,this.scaleNode=e.scaleNode,super.copy(e)}}class pm extends up{constructor(){super(),this.shadowNode=Di(1).toVar("shadowMask")}direct({shadowMask:e}){this.shadowNode.mulAssign(e)}finish(e){vn.a.mulAssign(this.shadowNode.oneMinus()),e.outgoingLight.rgb.assign(vn.rgb)}}const gm=new Te;class mm extends Oh{static get type(){return"ShadowNodeMaterial"}constructor(e){super(),this.isShadowNodeMaterial=!0,this.lights=!0,this.setDefaultValues(gm),this.setValues(e)}setupLightingModel(){return new pm}}const fm=Bi((({texture:e,uv:t})=>{const s=1e-4,r=ji().temp();return Ii(t.x.lessThan(s),(()=>{r.assign(ji(1,0,0))})).ElseIf(t.y.lessThan(s),(()=>{r.assign(ji(0,1,0))})).ElseIf(t.z.lessThan(s),(()=>{r.assign(ji(0,0,1))})).ElseIf(t.x.greaterThan(.9999),(()=>{r.assign(ji(-1,0,0))})).ElseIf(t.y.greaterThan(.9999),(()=>{r.assign(ji(0,-1,0))})).ElseIf(t.z.greaterThan(.9999),(()=>{r.assign(ji(0,0,-1))})).Else((()=>{const s=.01,i=e.uv(t.add(ji(-.01,0,0))).r.sub(e.uv(t.add(ji(s,0,0))).r),n=e.uv(t.add(ji(0,-.01,0))).r.sub(e.uv(t.add(ji(0,s,0))).r),a=e.uv(t.add(ji(0,0,-.01))).r.sub(e.uv(t.add(ji(0,0,s))).r);r.assign(ji(i,n,a))})),r.normalize()}));class xm extends Wu{static get type(){return"Texture3DNode"}constructor(e,t=null,s=null){super(e,t,s),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return ji(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){return t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return fm({texture:this,uv:e})}}const ym=wi(xm);class bm extends Oh{static get type(){return"VolumeNodeMaterial"}constructor(e={}){super(),this.lights=!1,this.isVolumeNodeMaterial=!0,this.testNode=null,this.setValues(e)}setup(e){const t=ym(this.map,null,0),s=Bi((({orig:e,dir:t})=>{const s=ji(-.5),r=ji(.5),i=t.reciprocal(),n=s.sub(e).mul(i),a=r.sub(e).mul(i),o=yo(n,a),u=bo(n,a),l=bo(o.x,bo(o.y,o.z)),d=yo(u.x,yo(u.y,u.z));return ki(l,d)}));this.fragmentNode=Bi((()=>{const e=Zo(ji(bl.mul(Yi(il,1)))),r=Zo(vl.sub(e)).normalize(),i=_n("vec2","bounds").assign(s({orig:e,dir:r}));i.x.greaterThan(i.y).discard(),i.assign(ki(bo(i.x,0),i.y));const n=_n("vec3","p").assign(e.add(i.x.mul(r))),a=_n("vec3","inc").assign(ji(r.abs().reciprocal())),o=_n("float","delta").assign(yo(a.x,yo(a.y,a.z)));o.divAssign(ld("steps","float"));const u=_n("vec4","ac").assign(Yi(ld("base","color"),0));return $c({type:"float",start:i.x,end:i.y,update:"+= delta"},(()=>{const e=_n("float","d").assign(t.uv(n.add(.5)).r);null!==this.testNode?this.testNode({map:t,mapValue:e,probe:n,finalColor:u}).append():(u.a.assign(1),Wc()),n.addAssign(r.mul(o))})),u.a.equal(0).discard(),Yi(u)}))(),super.setup(e)}}class Tm{constructor(e,t){this.nodes=e,this.info=t,this.animationLoop=null,this.requestId=null,this._init()}_init(){const e=(t,s)=>{this.requestId=self.requestAnimationFrame(e),!0===this.info.autoReset&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,null!==this.animationLoop&&this.animationLoop(t,s)};e()}dispose(){self.cancelAnimationFrame(this.requestId),this.requestId=null}setAnimationLoop(e){this.animationLoop=e}}class _m{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return;return t.get(e[e.length-1])}set(e,t){let s=this.weakMap;for(let t=0;t<e.length;t++){const r=e[t];!1===s.has(r)&&s.set(r,new WeakMap),s=s.get(r)}return s.set(e[e.length-1],t)}delete(e){let t=this.weakMap;for(let s=0;s<e.length;s++)if(t=t.get(e[s]),void 0===t)return!1;return t.delete(e[e.length-1])}}const Nm=new _e;class vm{constructor(){this.version=0,this.globalClippingCount=0,this.localClippingCount=0,this.localClippingEnabled=!1,this.localClipIntersection=!1,this.planes=[],this.parentVersion=0,this.viewNormalMatrix=new i,this.cacheKey=""}projectPlanes(e,t){const s=e.length,r=this.planes;for(let i=0;i<s;i++){Nm.copy(e[i]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const s=r[t+i],n=Nm.normal;s.x=-n.x,s.y=-n.y,s.z=-n.z,s.w=Nm.constant}}updateGlobal(e,t){const s=e.clippingPlanes;this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix);let i=!1;if(Array.isArray(s)&&0!==s.length){const e=s.length;if(e!==this.globalClippingCount){const t=[];for(let s=0;s<e;s++)t.push(new r);this.globalClippingCount=e,this.planes=t,i=!0}this.projectPlanes(s,0)}else 0!==this.globalClippingCount&&(this.globalClippingCount=0,this.planes=[],i=!0);e.localClippingEnabled!==this.localClippingEnabled&&(this.localClippingEnabled=e.localClippingEnabled,i=!0),i&&(this.version++,this.cacheKey=`${this.globalClippingCount}:${void 0!==this.localClippingEnabled&&this.localClippingEnabled}:`)}update(e,t){let s=!1;if(this!==e&&e.version!==this.parentVersion&&(this.globalClippingCount=t.isShadowNodeMaterial?0:e.globalClippingCount,this.localClippingEnabled=e.localClippingEnabled,this.planes=Array.from(e.planes),this.parentVersion=e.version,this.viewMatrix=e.viewMatrix,this.viewNormalMatrix=e.viewNormalMatrix,s=!0),this.localClippingEnabled){const e=t.clippingPlanes;if(Array.isArray(e)&&0!==e.length){const t=e.length,i=this.planes,n=this.globalClippingCount;if(s||t!==this.localClippingCount){i.length=n+t;for(let e=0;e<t;e++)i[n+e]=new r;this.localClippingCount=t,s=!0}this.projectPlanes(e,n)}else 0!==this.localClippingCount&&(this.localClippingCount=0,s=!0);this.localClipIntersection!==t.clipIntersection&&(this.localClipIntersection=t.clipIntersection,s=!0)}s&&(this.version+=e.version,this.cacheKey=e.cacheKey+`:${this.localClippingCount}:${void 0!==this.localClipIntersection&&this.localClipIntersection}`)}}let Sm=0;class Am{constructor(e,t,s,r,i,n,a,o,u){this._nodes=e,this._geometries=t,this.id=Sm++,this.renderer=s,this.object=r,this.material=i,this.scene=n,this.camera=a,this.lightsNode=o,this.context=u,this.geometry=r.geometry,this.version=i.version,this.drawRange=null,this.attributes=null,this.pipeline=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.updateClipping(u.clippingContext),this.clippingContextVersion=this.clippingContext.version,this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.material.addEventListener("dispose",this.onMaterialDispose)}updateClipping(e){const t=this.material;let s=this.clippingContext;Array.isArray(t.clippingPlanes)?(s!==e&&s||(s=new vm,this.clippingContext=s),s.update(e,t)):this.clippingContext!==e&&(this.clippingContext=e)}get clippingNeedsUpdate(){return this.clippingContext.version!==this.clippingContextVersion&&(this.clippingContextVersion=this.clippingContext.version,!0)}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().monitor)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getIndex(){return this._geometries.getIndex(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}getAttributes(){if(null!==this.attributes)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,s=[],r=new Set;for(const i of e){const e=i.node&&i.node.attribute?i.node.attribute:t.getAttribute(i.name);if(void 0===e)continue;s.push(e);const n=e.isInterleavedBufferAttribute?e.data:e;r.add(n)}return this.attributes=s,this.vertexBuffers=Array.from(r.values()),s}getVertexBuffers(){return null===this.vertexBuffers&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:s,group:r,drawRange:i}=this,n=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),o=null!==a,u=s.isInstancedBufferGeometry?s.instanceCount:e.count>1?e.count:1;if(0===u)return null;if(n.instanceCount=u,!0===e.isBatchedMesh)return n;let l=1;!0!==t.wireframe||e.isPoints||e.isLineSegments||e.isLine||e.isLineLoop||(l=2);let d=i.start*l,c=(i.start+i.count)*l;null!==r&&(d=Math.max(d,r.start*l),c=Math.min(c,(r.start+r.count)*l));const h=!0===o?a.count:s.attributes.position.count;d=Math.max(d,0),c=Math.min(c,h);const p=c-d;return p<0||p===1/0?null:(n.vertexCount=p,n.firstVertex=d,n)}getMaterialCacheKey(){const{object:e,material:t}=this;let s=t.customProgramCacheKey();for(const e of function(e){const t=Object.keys(e);let s=Object.getPrototypeOf(e);for(;s;){const e=Object.getOwnPropertyDescriptors(s);for(const s in e)if(void 0!==e[s]){const r=e[s];r&&"function"==typeof r.get&&t.push(s)}s=Object.getPrototypeOf(s)}return t}(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(e))continue;const r=t[e];let i;if(null!==r){const e=typeof r;"number"===e?i=0!==r?"1":"0":"object"===e?(i="{",r.isTexture&&(i+=r.mapping),i+="}"):i=String(r)}else i=String(r);s+=i+","}return s+=this.clippingContext.cacheKey+",",e.skeleton&&(s+=e.skeleton.bones.length+","),e.morphTargetInfluences&&(s+=e.morphTargetInfluences.length+","),e.isBatchedMesh&&(s+=e._matricesTexture.uuid+",",null!==e._colorsTexture&&(s+=e._colorsTexture.uuid+",")),e.count>1&&(s+=e.count+","+e.uuid+","),s}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){return this.object.receiveShadow+","+this._nodes.getCacheKey(this.scene,this.lightsNode)}getCacheKey(){return this.getMaterialCacheKey()+","+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.onDispose()}}const Rm=[];class Cm{constructor(e,t,s,r,i,n){this.renderer=e,this.nodes=t,this.geometries=s,this.pipelines=r,this.bindings=i,this.info=n,this.chainMaps={}}get(e,t,s,r,i,n,a){const o=this.getChainMap(a);Rm[0]=e,Rm[1]=t,Rm[2]=n,Rm[3]=i;let u=o.get(Rm);return void 0===u?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,s,r,i,n,a),o.set(Rm,u)):(u.updateClipping(n.clippingContext),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,s,r,i,n,a)):u.version=t.version)),u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new _m)}dispose(){this.chainMaps={}}createRenderObject(e,t,s,r,i,n,a,o,u,l){const d=this.getChainMap(l),c=new Am(e,t,s,r,i,n,a,o,u);return c.onDispose=()=>{this.pipelines.delete(c),this.bindings.delete(c),this.nodes.delete(c),d.delete(c.getChainArray())},c}}class Em{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}delete(e){let t;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const wm=1,Mm=2,Bm=4,Um=16;class Fm extends Em{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return void 0!==t&&this.backend.destroyAttribute(e),t}update(e,t){const s=this.get(e);if(void 0===s.version)t===wm?this.backend.createAttribute(e):t===Mm?this.backend.createIndexAttribute(e):t===Bm&&this.backend.createStorageAttribute(e),s.version=this._getBufferAttribute(e).version;else{const t=this._getBufferAttribute(e);(s.version<t.version||t.usage===f)&&(this.backend.updateAttribute(e),s.version=t.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function Pm(e){return null!==e.index?e.index.version:e.attributes.position.version}function Im(e){const t=[],s=e.index,r=e.attributes.position;if(null!==s){const e=s.array;for(let s=0,r=e.length;s<r;s+=3){const r=e[s+0],i=e[s+1],n=e[s+2];t.push(r,i,i,n,n,r)}}else{for(let e=0,s=r.array.length/3-1;e<s;e+=3){const s=e+0,r=e+1,i=e+2;t.push(s,r,r,i,i,s)}}const i=new(function(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}(t)?Ne:ve)(t,1);return i.version=Pm(e),i}class Lm extends Em{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&!0===this.get(t).initialized}updateForRender(e){!1===this.has(e)&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry;this.get(t).initialized=!0,this.info.memory.geometries++;const s=()=>{this.info.memory.geometries--;const r=t.index,i=e.getAttributes();null!==r&&this.attributes.delete(r);for(const e of i)this.attributes.delete(e);const n=this.wireframes.get(t);void 0!==n&&this.attributes.delete(n),t.removeEventListener("dispose",s)};t.addEventListener("dispose",s)}updateAttributes(e){const t=e.getAttributes();for(const e of t)e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute?this.updateAttribute(e,Bm):this.updateAttribute(e,wm);const s=this.getIndex(e);null!==s&&this.updateAttribute(s,Mm)}updateAttribute(e,t){const s=this.info.render.calls;e.isInterleavedBufferAttribute?void 0===this.attributeCall.get(e)?(this.attributes.update(e,t),this.attributeCall.set(e,s)):this.attributeCall.get(e.data)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e.data,s),this.attributeCall.set(e,s)):this.attributeCall.get(e)!==s&&(this.attributes.update(e,t),this.attributeCall.set(e,s))}getIndex(e){const{geometry:t,material:s}=e;let r=t.index;if(!0===s.wireframe){const e=this.wireframes;let s=e.get(t);void 0===s?(s=Im(t),e.set(t,s)):s.version!==Pm(t)&&(this.attributes.delete(s),s=Im(t),e.set(t,s)),r=s}return r}}class Vm{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.compute={calls:0,frameCalls:0,timestamp:0,previousFrameCalls:0,timestampCalls:0},this.memory={geometries:0,textures:0}}update(e,t,s){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=s*(t/3):e.isPoints?this.render.points+=s*t:e.isLineSegments?this.render.lines+=s*(t/2):e.isLine?this.render.lines+=s*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}updateTimestamp(e,t){0===this[e].timestampCalls&&(this[e].timestamp=0),this[e].timestamp+=t,this[e].timestampCalls++,this[e].timestampCalls>=this[e].previousFrameCalls&&(this[e].timestampCalls=0)}reset(){const e=this.render.frameCalls;this.render.previousFrameCalls=e;const t=this.compute.frameCalls;this.compute.previousFrameCalls=t,this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class Dm{constructor(e){this.cacheKey=e,this.usedTimes=0}}class Om extends Dm{constructor(e,t,s){super(e),this.vertexProgram=t,this.fragmentProgram=s}}class Gm extends Dm{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let zm=0;class km{constructor(e,t,s=null,r=null){this.id=zm++,this.code=e,this.stage=t,this.transforms=s,this.attributes=r,this.usedTimes=0}}class $m extends Em{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:s}=this,r=this.get(e);if(this._needsComputeUpdate(e)){const i=r.pipeline;i&&(i.usedTimes--,i.computeProgram.usedTimes--);const n=this.nodes.getForCompute(e);let a=this.programs.compute.get(n.computeShader);void 0===a&&(i&&0===i.computeProgram.usedTimes&&this._releaseProgram(i.computeProgram),a=new km(n.computeShader,"compute",n.transforms,n.nodeAttributes),this.programs.compute.set(n.computeShader,a),s.createProgram(a));const o=this._getComputeCacheKey(e,a);let u=this.caches.get(o);void 0===u&&(i&&0===i.usedTimes&&this._releasePipeline(i),u=this._getComputePipeline(e,a,o,t)),u.usedTimes++,a.usedTimes++,r.version=e.version,r.pipeline=u}return r.pipeline}getForRender(e,t=null){const{backend:s}=this,r=this.get(e);if(this._needsRenderUpdate(e)){const i=r.pipeline;i&&(i.usedTimes--,i.vertexProgram.usedTimes--,i.fragmentProgram.usedTimes--);const n=e.getNodeBuilderState();let a=this.programs.vertex.get(n.vertexShader);void 0===a&&(i&&0===i.vertexProgram.usedTimes&&this._releaseProgram(i.vertexProgram),a=new km(n.vertexShader,"vertex"),this.programs.vertex.set(n.vertexShader,a),s.createProgram(a));let o=this.programs.fragment.get(n.fragmentShader);void 0===o&&(i&&0===i.fragmentProgram.usedTimes&&this._releaseProgram(i.fragmentProgram),o=new km(n.fragmentShader,"fragment"),this.programs.fragment.set(n.fragmentShader,o),s.createProgram(o));const u=this._getRenderCacheKey(e,a,o);let l=this.caches.get(u);void 0===l?(i&&0===i.usedTimes&&this._releasePipeline(i),l=this._getRenderPipeline(e,a,o,u,t)):e.pipeline=l,l.usedTimes++,a.usedTimes++,o.usedTimes++,r.pipeline=l}return r.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,0===t.usedTimes&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,0===t.computeProgram.usedTimes&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,0===t.vertexProgram.usedTimes&&this._releaseProgram(t.vertexProgram),0===t.fragmentProgram.usedTimes&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,s,r){s=s||this._getComputeCacheKey(e,t);let i=this.caches.get(s);return void 0===i&&(i=new Gm(s,t),this.caches.set(s,i),this.backend.createComputePipeline(i,r)),i}_getRenderPipeline(e,t,s,r,i){r=r||this._getRenderCacheKey(e,t,s);let n=this.caches.get(r);return void 0===n&&(n=new Om(r,t,s),this.caches.set(r,n),e.pipeline=n,this.backend.createRenderPipeline(e,i)),n}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,s){return t.id+","+s.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,s=e.stage;this.programs[s].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return void 0===t.pipeline||t.version!==e.version}_needsRenderUpdate(e){return void 0===this.get(e).pipeline||this.backend.needsRenderUpdate(e)}}class Hm extends Em{constructor(e,t,s,r,i,n){super(),this.backend=e,this.textures=s,this.pipelines=i,this.attributes=r,this.nodes=t,this.info=n,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const e of t){const s=this.get(e);void 0===s.bindGroup&&(this._init(e),this.backend.createBindings(e,t),s.bindGroup=e)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const e of t){const s=this.get(e);void 0===s.bindGroup&&(this._init(e),this.backend.createBindings(e,t),s.bindGroup=e)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const e=t.attribute;this.attributes.update(e,Bm)}}_update(e,t){const{backend:s}=this;let r=!1;for(const t of e.bindings){if(t.isNodeUniformsGroup){if(!this.nodes.updateGroup(t))continue}if(t.isUniformBuffer){t.update()&&s.updateBinding(t)}else if(t.isSampler)t.update();else if(t.isSampledTexture){t.needsBindingsUpdate(this.textures.get(t.texture).generation)&&(r=!0);const e=t.update(),i=t.texture;e&&this.textures.updateTexture(i);const n=s.get(i);if(!0===s.isWebGPUBackend&&void 0===n.texture&&void 0===n.externalTexture&&(console.error("Bindings._update: binding should be available:",t,e,i,t.textureNode.value,r),this.textures.updateTexture(i),r=!0),!0===i.isStorageTexture){const e=this.get(i);!0===t.store?e.needsMipmap=!0:!0===i.generateMipmaps&&this.textures.needsMipmaps(i)&&!0===e.needsMipmap&&(this.backend.generateMipmaps(i),e.needsMipmap=!1)}}}!0===r&&this.backend.updateBindings(e,t)}}class Wm{constructor(e,t,s=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=s}}class jm{constructor(e,t,s){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=s.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class qm{constructor(e,t){this.isNodeVar=!0,this.name=e,this.type=t}}class Xm extends qm{constructor(e,t){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0}}class Km{constructor(e,t,s=""){this.name=e,this.type=t,this.code=s,Object.defineProperty(this,"isNodeCode",{value:!0})}}let Ym=0;class Qm{constructor(e=null){this.id=Ym++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return void 0===t&&null!==this.parent&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class Zm extends Tn{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}const Jm=(e,t)=>Ri(new Zm(e,t));class tf extends Lr{static get type(){return"CodeNode"}constructor(e="",t=[],s=""){super("code"),this.isCodeNode=!0,this.code=e,this.language=s,this.includes=t}isGlobal(){return!0}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const s of t)s.build(e);const s=e.getCodeFromNode(this,this.getNodeType(e));return s.code=this.code,s.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}const sf=wi(tf),rf=(e,t)=>sf(e,t,"js"),nf=(e,t)=>sf(e,t,"wgsl"),af=(e,t)=>sf(e,t,"glsl");class of extends tf{static get type(){return"FunctionNode"}constructor(e="",t=[],s=""){super(e,t,s)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let s=t.nodeFunction;return void 0===s&&(s=e.parser.parseFunction(this.code),t.nodeFunction=s),s}generate(e,t){super.generate(e);const s=this.getNodeFunction(e),r=s.name,i=s.type,n=e.getCodeFromNode(this,i);""!==r&&(n.name=r);const a=e.getPropertyName(n),o=this.getNodeFunction(e).getCode(a);return n.code=o+"\n","property"===t?a:e.format(`${a}()`,i,t)}}const uf=(e,t=[],s="")=>{for(let e=0;e<t.length;e++){const s=t[e];"function"==typeof s&&(t[e]=s.functionNode)}const r=Ri(new of(e,t,s)),i=(...e)=>r.call(...e);return i.functionNode=r,i},lf=(e,t)=>uf(e,t,"glsl"),hf=(e,t)=>uf(e,t,"wgsl");class pf{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class gf extends pf{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class mf extends pf{constructor(e,s=new t){super(e,s),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class xf extends pf{constructor(e,t=new s){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class yf extends pf{constructor(e,t=new r){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class bf extends pf{constructor(t,s=new e){super(t,s),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class Tf extends pf{constructor(e,t=new i){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class _f extends pf{constructor(e,t=new n){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class Nf extends gf{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class vf extends mf{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Sf extends xf{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Af extends yf{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Rf extends bf{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Cf extends Tf{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class Ef extends _f{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}}class wf extends Lr{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}add(e){return this.nodes.push(e),this}If(e,t){const s=new Ai(t);return this._currentCond=Ho(e,s),this.add(this._currentCond)}ElseIf(e,t){const s=new Ai(t),r=Ho(e,s);return this._currentCond.elseNode=r,this._currentCond=r,this}Else(e){return this._currentCond.elseNode=new Ai(e),this}build(e,...t){const s=Pi();Fi(this);for(const t of this.nodes)t.build(e,"void");return Fi(s),this.outputNode?this.outputNode.build(e,...t):super.build(e,...t)}else(...e){return console.warn("TSL.StackNode: .else() has been renamed to .Else()."),this.Else(...e)}elseif(...e){return console.warn("TSL.StackNode: .elseif() has been renamed to .ElseIf()."),this.ElseIf(...e)}}const Mf=wi(wf),Bf=[.125,.215,.35,.446,.526,.582],Uf=20,Ff=new Ee(-1,1,1,-1,0,1),Pf=new we(90,1),If=new e;let Lf=null,Vf=0,Df=0;const Of=(1+Math.sqrt(5))/2,Gf=1/Of,zf=[new s(-Of,Gf,0),new s(Of,Gf,0),new s(-Gf,0,Of),new s(Gf,0,Of),new s(0,Of,-Gf),new s(0,Of,Gf),new s(-1,1,-1),new s(1,1,-1),new s(-1,1,1),new s(1,1,1)],kf=[3,1,5,0,4,2],$f=Mg(Gu(),Ou("faceIndex")).normalize(),Hf=ji($f.x,$f.y.negate(),$f.z);class Wf{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}fromScene(e,t=0,s=.1,r=100){Lf=this._renderer.getRenderTarget(),Vf=this._renderer.getActiveCubeFace(),Df=this._renderer.getActiveMipmapLevel(),this._setSize(256);const i=this._allocateTargets();return i.depthBuffer=!0,this._sceneToCubeUV(e,s,r,i),t>0&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}async compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Kf(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Yf(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose(),null!==this._backgroundBox&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Lf,Vf,Df),e.scissorTest=!1,qf(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===v||e.mapping===A?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Lf=this._renderer.getRenderTarget(),Vf=this._renderer.getActiveCubeFace(),Df=this._renderer.getActiveMipmapLevel();const s=t||this._allocateTargets();return this._textureToCubeUV(e,s),this._applyPMREM(s),this._cleanup(s),s}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,r={magFilter:K,minFilter:K,generateMipmaps:!1,type:Me,format:Be,colorSpace:d},i=jf(e,t,r);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=jf(e,t,r);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=function(e){const t=[],s=[],r=[],i=[];let n=e;const a=e-4+1+Bf.length;for(let o=0;o<a;o++){const a=Math.pow(2,n);s.push(a);let u=1/a;o>e-4?u=Bf[o-e+4-1]:0===o&&(u=0),r.push(u);const l=1/(a-2),d=-l,c=1+l,h=[d,d,c,d,c,c,d,d,c,c,d,c],p=6,g=6,m=3,f=2,x=1,y=new Float32Array(m*g*p),b=new Float32Array(f*g*p),T=new Float32Array(x*g*p);for(let e=0;e<p;e++){const t=e%3*2/3-1,s=e>2?0:-1,r=[t,s,0,t+2/3,s,0,t+2/3,s+1,0,t,s,0,t+2/3,s+1,0,t,s+1,0],i=kf[e];y.set(r,m*g*i),b.set(h,f*g*i);const n=[i,i,i,i,i,i];T.set(n,x*g*i)}const _=new Se;_.setAttribute("position",new Ae(y,m)),_.setAttribute("uv",new Ae(b,f)),_.setAttribute("faceIndex",new Ae(T,x)),t.push(_),i.push(new q(_,null)),n>4&&n--}return{lodPlanes:t,sizeLods:s,sigmas:r,lodMeshes:i}}(i)),this._blurMaterial=function(e,t,r){const i=td(new Array(Uf).fill(0)),n=bn(new s(0,1,0)),a=bn(0),o=Di(Uf),u=bn(0),l=bn(1),d=ju(null),c=bn(0),h=Di(1/t),p=Di(1/r),g=Di(e),m={n:o,latitudinal:u,weights:i,poleAxis:n,outputDirection:Hf,dTheta:a,samples:l,envMap:d,mipInt:c,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:p,CUBEUV_MAX_MIP:g},f=Xf("blur");return f.uniforms=m,f.fragmentNode=Pg({...m,latitudinal:u.equal(1)}),f}(i,e,t)}return i}async _compileMaterial(e){const t=new q(this._lodPlanes[0],e);await this._renderer.compile(t,Ff)}_sceneToCubeUV(e,t,s,r){const i=Pf;i.near=t,i.far=s;const n=[-1,1,-1,-1,-1,-1],a=[1,1,1,-1,-1,-1],o=this._renderer,u=o.autoClear;o.getClearColor(If),o.autoClear=!1;let l=this._backgroundBox;if(null===l){const e=new ue({name:"PMREM.Background",side:N,depthWrite:!1,depthTest:!1});l=new q(new W,e)}let d=!1;const c=e.background;c?c.isColor&&(l.material.color.copy(c),e.background=null,d=!0):(l.material.color.copy(If),d=!0),o.setRenderTarget(r),o.clear(),d&&o.render(l,i);for(let t=0;t<6;t++){const s=t%3;0===s?(i.up.set(0,n[t],0),i.lookAt(a[t],0,0)):1===s?(i.up.set(0,0,n[t]),i.lookAt(0,a[t],0)):(i.up.set(0,n[t],0),i.lookAt(0,0,a[t]));const u=this._cubeSize;qf(r,s*u,t>2?u:0,u,u),o.render(e,i)}o.autoClear=u,e.background=c}_textureToCubeUV(e,t){const s=this._renderer,r=e.mapping===v||e.mapping===A;r?null===this._cubemapMaterial&&(this._cubemapMaterial=Kf(e)):null===this._equirectMaterial&&(this._equirectMaterial=Yf(e));const i=r?this._cubemapMaterial:this._equirectMaterial;i.fragmentNode.value=e;const n=this._lodMeshes[0];n.material=i;const a=this._cubeSize;qf(t,0,0,3*a,2*a),s.setRenderTarget(t),s.render(n,Ff)}_applyPMREM(e){const t=this._renderer,s=t.autoClear;t.autoClear=!1;const r=this._lodPlanes.length;for(let t=1;t<r;t++){const s=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),i=zf[(r-t-1)%zf.length];this._blur(e,t-1,t,s,i)}t.autoClear=s}_blur(e,t,s,r,i){const n=this._pingPongRenderTarget;this._halfBlur(e,n,t,s,r,"latitudinal",i),this._halfBlur(n,e,s,s,r,"longitudinal",i)}_halfBlur(e,t,s,r,i,n,a){const o=this._renderer,u=this._blurMaterial;"latitudinal"!==n&&"longitudinal"!==n&&console.error("blur direction must be either latitudinal or longitudinal!");const l=this._lodMeshes[r];l.material=u;const d=u.uniforms,c=this._sizeLods[s]-1,h=isFinite(i)?Math.PI/(2*c):2*Math.PI/39,p=i/h,g=isFinite(i)?1+Math.floor(3*p):Uf;g>Uf&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${g} samples when the maximum is set to 20`);const m=[];let f=0;for(let e=0;e<Uf;++e){const t=e/p,s=Math.exp(-t*t/2);m.push(s),0===e?f+=s:e<g&&(f+=2*s)}for(let e=0;e<m.length;e++)m[e]=m[e]/f;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value="latitudinal"===n?1:0,a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=h,d.mipInt.value=x-s;const y=this._sizeLods[r];qf(t,3*y*(r>x-4?r-x+4:0),4*(this._cubeSize-y),3*y,2*y),o.setRenderTarget(t),o.render(l,Ff)}}function jf(e,t,s){const r=new Re(e,t,s);return r.texture.mapping=Ce,r.texture.name="PMREM.cubeUv",r.texture.isPMREMTexture=!0,r.scissorTest=!0,r}function qf(e,t,s,r,i){e.viewport.set(t,s,r,i),e.scissor.set(t,s,r,i)}function Xf(e){const t=new Oh;return t.depthTest=!1,t.depthWrite=!1,t.blending=j,t.name=`PMREM_${e}`,t}function Kf(e){const t=Xf("cubemap");return t.fragmentNode=Kl(e,Hf),t}function Yf(e){const t=Xf("equirect");return t.fragmentNode=ju(e,Jh(Hf),0),t}let Qf=0;class Zf{constructor(e="",t=[],s=0,r=[]){this.name=e,this.bindings=t,this.index=s,this.bindingsReference=r,this.id=Qf++}}const Jf=new WeakMap,ex=new Map([[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),tx=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),sx=e=>(e=Number(e))+(e%1?"":".0");class rx{constructor(e,t,s){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=s,this.scene=null,this.camera=null,this.nodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.monitor=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.flow={code:""},this.chaining=[],this.stack=Mf(),this.stacks=[],this.tab="\t",this.instanceBindGroups=!0,this.currentFunctionNode=null,this.context={material:this.material},this.cache=new Qm,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.useComparisonMethod=!1}getBindGroupsCache(){let e=Jf.get(this.renderer);return void 0===e&&(e=new _m,Jf.set(this.renderer,e)),e}createRenderTarget(e,t,s){return new Re(e,t,s)}createCubeRenderTarget(e,t){return new ep(e,t)}createPMREMGenerator(){return new Wf(this.renderer)}includes(e){return this.nodes.includes(e)}_getBindGroup(e,t){const s=this.getBindGroupsCache(),r=[];let i,n=!0;for(const e of t)r.push(e),n=n&&!0!==e.groupNode.shared;return n?(i=s.get(r),void 0===i&&(i=new Zf(e,r,this.bindingsIndexes[e].group,r),s.set(r,i))):i=new Zf(e,r,this.bindingsIndexes[e].group,r),i}getBindGroupArray(e,t){const s=this.bindings[t];let r=s[e];return void 0===r&&(void 0===this.bindingsIndexes[e]&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),s[e]=r=[]),r}getBindings(){let e=this.bindGroups;if(null===e){const t={},s=this.bindings;for(const e of Fr)for(const r in s[e]){const i=s[e][r];(t[r]||(t[r]=[])).push(...i)}e=[];for(const s in t){const r=t[s],i=this._getBindGroup(s,r);e.push(i)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort(((e,t)=>e.bindings[0].groupNode.order-t.bindings[0].groupNode.order));for(let t=0;t<e.length;t++){const s=e[t];this.bindingsIndexes[s.name].group=t,s.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){!1===this.nodes.includes(e)&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}buildUpdateNodes(){for(const e of this.nodes){const t=e.getUpdateType(),s=e.getUpdateBeforeType(),r=e.getUpdateAfterType();t!==wr.NONE&&this.updateNodes.push(e.getSelf()),s!==wr.NONE&&this.updateBeforeNodes.push(e.getSelf()),r!==wr.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===K||e.magFilter===Ue||e.magFilter===Fe||e.magFilter===L||e.minFilter===K||e.minFilter===Ue||e.minFilter===Fe||e.minFilter===L}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return this.context,this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const s=this.getDataFromNode(e);return void 0===s.cache&&(s.cache=new Qm(t?this.getCache():null)),s.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=void 0===t.usageCount?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateConst(i,n=null){if(null===n&&("float"===i||"int"===i||"uint"===i?n=0:"bool"===i?n=!1:"color"===i?n=new e:"vec2"===i?n=new t:"vec3"===i?n=new s:"vec4"===i&&(n=new r)),"float"===i)return sx(n);if("int"===i)return`${Math.round(n)}`;if("uint"===i)return n>=0?`${Math.round(n)}u`:"0u";if("bool"===i)return n?"true":"false";if("color"===i)return`${this.getType("vec3")}( ${sx(n.r)}, ${sx(n.g)}, ${sx(n.b)} )`;const a=this.getTypeLength(i),o=this.getComponentType(i),u=e=>this.generateConst(o,e);if(2===a)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)} )`;if(3===a)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)}, ${u(n.z)} )`;if(4===a)return`${this.getType(i)}( ${u(n.x)}, ${u(n.y)}, ${u(n.z)}, ${u(n.w)} )`;if(a>4&&n&&(n.isMatrix3||n.isMatrix4))return`${this.getType(i)}( ${n.elements.map(u).join(", ")} )`;if(a>4)return`${this.getType(i)}()`;throw new Error(`NodeBuilder: Type '${i}' not found in generate constant attempt.`)}getType(e){return"color"===e?"vec3":e}hasGeometryAttribute(e){return this.geometry&&void 0!==this.geometry.getAttribute(e)}getAttribute(e,t){const s=this.attributes;for(const t of s)if(t.name===e)return t;const r=new Wm(e,t);return s.push(r),r}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return"void"===e||"property"===e||"sampler"===e||"texture"===e||"cubeTexture"===e||"storageTexture"===e||"depthTexture"===e||"texture3D"===e}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===T)return"int";if(t===b)return"uint"}return"float"}getElementType(e){return"mat2"===e?"vec2":"mat3"===e?"vec3":"mat4"===e?"vec4":this.getComponentType(e)}getComponentType(e){if("float"===(e=this.getVectorType(e))||"bool"===e||"int"===e||"uint"===e)return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return null===t?null:"b"===t[1]?"bool":"i"===t[1]?"int":"u"===t[1]?"uint":"float"}getVectorType(e){return"color"===e?"vec3":"texture"===e||"cubeTexture"===e||"storageTexture"===e||"texture3D"===e?"vec4":e}getTypeFromLength(e,t="float"){if(1===e)return t;const s=ex.get(e);return("float"===t?"":t[0])+s}getTypeFromArray(e){return tx.get(e.constructor)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const s=t.array,r=e.itemSize,i=e.normalized;let n;return e instanceof Pe||!0===i||(n=this.getTypeFromArray(s)),this.getTypeFromLength(r,n)}getTypeLength(e){const t=this.getVectorType(e),s=/vec([2-4])/.exec(t);return null!==s?Number(s[1]):"float"===t||"bool"===t||"int"===t||"uint"===t?1:!0===/mat2/.test(e)?4:!0===/mat3/.test(e)?9:!0===/mat4/.test(e)?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return"int"===t||"uint"===t?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Mf(this.stack),this.stacks.push(Pi()||this.stack),Fi(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,Fi(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,s=null){let r=(s=null===s?e.isGlobal(this)?this.globalCache:this.cache:s).getData(e);return void 0===r&&(r={},s.setData(e,r)),void 0===r[t]&&(r[t]={}),r[t]}getNodeProperties(e,t="any"){const s=this.getDataFromNode(e,t);return s.properties||(s.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const s=this.getDataFromNode(e);let r=s.bufferAttribute;if(void 0===r){const i=this.uniforms.index++;r=new Wm("nodeAttribute"+i,t,e),this.bufferAttributes.push(r),s.bufferAttribute=r}return r}getStructTypeFromNode(e,t=this.shaderStage){const s=this.getDataFromNode(e,t);if(void 0===s.structType){const r=this.structs.index++;e.name=`StructType${r}`,this.structs[t].push(e),s.structType=e}return e}getUniformFromNode(e,t,s=this.shaderStage,r=null){const i=this.getDataFromNode(e,s,this.globalCache);let n=i.uniform;if(void 0===n){const a=this.uniforms.index++;n=new jm(r||"nodeUniform"+a,t,e),this.uniforms[s].push(n),i.uniform=n}return n}getVarFromNode(e,t=null,s=e.getNodeType(this),r=this.shaderStage){const i=this.getDataFromNode(e,r);let n=i.variable;if(void 0===n){const e=this.vars[r]||(this.vars[r]=[]);null===t&&(t="nodeVar"+e.length),n=new qm(t,s),e.push(n),i.variable=n}return n}getVaryingFromNode(e,t=null,s=e.getNodeType(this)){const r=this.getDataFromNode(e,"any");let i=r.varying;if(void 0===i){const e=this.varyings,n=e.length;null===t&&(t="nodeVarying"+n),i=new Xm(t,s),e.push(i),r.varying=i}return i}getCodeFromNode(e,t,s=this.shaderStage){const r=this.getDataFromNode(e);let i=r.code;if(void 0===i){const e=this.codes[s]||(this.codes[s]=[]),n=e.length;i=new Km("nodeCode"+n,t),e.push(i),r.code=i}return i}addLineFlowCode(e){return""===e||(e=this.tab+e,/;\s*$/.test(e)||(e+=";\n"),this.flow.code+=e),this}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="\t",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),s=this.flowChildNode(e,t);return this.flowsData.set(e,s),s}buildFunctionNode(e){const t=new of,s=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=s,t}flowShaderNode(e){const t=e.layout,s={[Symbol.iterator](){let e=0;const t=Object.values(this);return{next:()=>({value:t[e],done:e++>=t.length})}}};for(const e of t.inputs)s[e.name]=new Zm(e.type,e.name);e.layout=null;const r=e.call(s),i=this.flowStagesNode(r,t.type);return e.layout=t,i}flowStagesNode(e,t=null){const s=this.flow,r=this.vars,i=this.cache,n=this.buildStage,a=this.stack,o={code:""};this.flow=o,this.vars={},this.cache=new Qm,this.stack=Mf();for(const s of Ur)this.setBuildStage(s),o.result=e.build(this,t);return o.vars=this.getVars(this.shaderStage),this.flow=s,this.vars=r,this.cache=i,this.stack=a,this.setBuildStage(n),o}getFunctionOperator(){return null}flowChildNode(e,t=null){const s=this.flow,r={code:""};return this.flow=r,r.result=e.build(this,t),this.flow=s,r}flowNodeFromShaderStage(e,t,s=null,r=null){const i=this.shaderStage;this.setShaderStage(e);const n=this.flowChildNode(t,s);return null!==r&&(n.code+=`${this.tab+r} = ${n.result};\n`),this.flowCode[e]=this.flowCode[e]+n.code,this.setShaderStage(i),n}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t){return`${this.getType(e)} ${t}`}getVars(e){let t="";const s=this.vars[e];if(void 0!==s)for(const e of s)t+=`${this.getVar(e.type,e.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let s="";if(void 0!==t)for(const e of t)s+=e.code+"\n";return s}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}build(){const{object:e,material:t,renderer:s}=this;if(null!==t){let e=s.nodes.library.fromMaterial(t);null===e&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),e=new Oh),e.build(this)}else this.addFlow("compute",e);for(const e of Ur){this.setBuildStage(e),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const t of Fr){this.setShaderStage(t);const s=this.flowNodes[t];for(const t of s)"generate"===e?this.flowNode(t):t.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if("float"===t||"int"===t||"uint"===t)return new Nf(e);if("vec2"===t||"ivec2"===t||"uvec2"===t)return new vf(e);if("vec3"===t||"ivec3"===t||"uvec3"===t)return new Sf(e);if("vec4"===t||"ivec4"===t||"uvec4"===t)return new Af(e);if("color"===t)return new Rf(e);if("mat3"===t)return new Cf(e);if("mat4"===t)return new Ef(e);throw new Error(`Uniform "${t}" not declared.`)}createNodeMaterial(e="NodeMaterial"){throw new Error(`THREE.NodeBuilder: createNodeMaterial() was deprecated. Use new ${e}() instead.`)}format(e,t,s){if((t=this.getVectorType(t))===(s=this.getVectorType(s))||null===s||this.isReference(s))return e;const r=this.getTypeLength(t),i=this.getTypeLength(s);return 16===r&&9===i?`${this.getType(s)}(${e}[0].xyz, ${e}[1].xyz, ${e}[2].xyz)`:9===r&&4===i?`${this.getType(s)}(${e}[0].xy, ${e}[1].xy)`:r>4||i>4||0===i?e:r===i?`${this.getType(s)}( ${e} )`:r>i?this.format(`${e}.${"xyz".slice(0,i)}`,this.getTypeFromLength(i,this.getComponentType(t)),s):4===i&&r>1?`${this.getType(s)}( ${this.format(e,t,"vec3")}, 1.0 )`:2===r?`${this.getType(s)}( ${this.format(e,t,"vec2")}, 0.0 )`:(1===r&&i>1&&t!==this.getComponentType(s)&&(e=`${this.getType(this.getComponentType(s))}( ${e} )`),`${this.getType(s)}( ${e} )`)}getSignature(){return`// Three.js r${Ie} - Node System\n`}}class ix{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.startTime=null,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let s=e.get(t);return void 0===s&&(s={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,s)),s}updateBeforeNode(e){const t=e.getUpdateBeforeType(),s=e.updateReference(this);if(t===wr.FRAME){const{frameMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(s)!==this.frameId&&!1!==e.updateBefore(this)&&t.set(s,this.frameId)}else if(t===wr.RENDER){const{renderMap:t}=this._getMaps(this.updateBeforeMap,s);t.get(s)!==this.renderId&&!1!==e.updateBefore(this)&&t.set(s,this.renderId)}else t===wr.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),s=e.updateReference(this);if(t===wr.FRAME){const{frameMap:t}=this._getMaps(this.updateAfterMap,s);t.get(s)!==this.frameId&&!1!==e.updateAfter(this)&&t.set(s,this.frameId)}else if(t===wr.RENDER){const{renderMap:t}=this._getMaps(this.updateAfterMap,s);t.get(s)!==this.renderId&&!1!==e.updateAfter(this)&&t.set(s,this.renderId)}else t===wr.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),s=e.updateReference(this);if(t===wr.FRAME){const{frameMap:t}=this._getMaps(this.updateMap,s);t.get(s)!==this.frameId&&!1!==e.update(this)&&t.set(s,this.frameId)}else if(t===wr.RENDER){const{renderMap:t}=this._getMaps(this.updateMap,s);t.get(s)!==this.renderId&&!1!==e.update(this)&&t.set(s,this.renderId)}else t===wr.OBJECT&&e.update(this)}update(){this.frameId++,void 0===this.lastTime&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class nx{constructor(e,t,s=null,r="",i=!1){this.type=e,this.name=t,this.count=s,this.qualifier=r,this.isConst=i}}nx.isNodeFunctionInput=!0;class ax extends Lr{static get type(){return"StructTypeNode"}constructor(e){super(),this.types=e,this.isStructTypeNode=!0}getMemberTypes(){return this.types}}class ox extends Lr{static get type(){return"OutputStructNode"}constructor(...e){super(),this.members=e,this.isOutputStructNode=!0}setup(e){super.setup(e);const t=this.members,s=[];for(let r=0;r<t.length;r++)s.push(t[r].getNodeType(e));this.nodeType=e.getStructTypeFromNode(new ax(s)).name}generate(e,t){const s=e.getOutputStructName(),r=this.members,i=""!==s?s+".":"";for(let s=0;s<r.length;s++){const n=r[s].build(e,t);e.addLineFlowCode(`${i}m${s} = ${n}`)}return s}}const ux=wi(ox);function lx(e,t){for(let s=0;s<e.length;s++)if(e[s].name===t)return s;return-1}class hx extends ox{static get type(){return"MRTNode"}constructor(e){super(),this.outputNodes=e,this.isMRTNode=!0}has(e){return void 0!==this.outputNodes[e]}get(e){return this.outputNodes[e]}merge(e){const t={...this.outputNodes,...e.outputNodes};return px(t)}setup(e){const t=this.outputNodes,s=[],r=e.renderer.getRenderTarget().textures;for(const e in t){s[lx(r,e)]=Yi(t[e])}return this.members=s,super.setup(e)}}const px=wi(hx);class gx extends Lr{static get type(){return"FunctionOverloadingNode"}constructor(e=[],...t){super(),this.functionNodes=e,this.parametersNodes=t,this._candidateFnCall=null,this.global=!0}getNodeType(){return this.functionNodes[0].shaderNode.layout.type}setup(e){const t=this.parametersNodes;let s=this._candidateFnCall;if(null===s){let r=null,i=-1;for(const s of this.functionNodes){const n=s.shaderNode.layout;if(null===n)throw new Error("FunctionOverloadingNode: FunctionNode must be a layout.");const a=n.inputs;if(t.length===a.length){let n=0;for(let s=0;s<t.length;s++){const r=t[s],i=a[s];r.getNodeType(e)===i.type?n++:n=0}n>i&&(r=s,i=n)}}this._candidateFnCall=s=r(...t)}return s}}const mx=wi(gx),fx=e=>(...t)=>mx(e,...t);class xx extends yn{static get type(){return"TimerNode"}constructor(e=xx.LOCAL,t=1,s=0){super(s),this.scope=e,this.scale=t,this.updateType=wr.FRAME}update(e){const t=this.scope,s=this.scale;t===xx.LOCAL?this.value+=e.deltaTime*s:t===xx.DELTA?this.value=e.deltaTime*s:t===xx.FRAME?this.value=e.frameId:this.value=e.time*s}serialize(e){super.serialize(e),e.scope=this.scope,e.scale=this.scale}deserialize(e){super.deserialize(e),this.scope=e.scope,this.scale=e.scale}}xx.LOCAL="local",xx.GLOBAL="global",xx.DELTA="delta",xx.FRAME="frame";const yx=(e,t=0)=>Ri(new xx(xx.LOCAL,e,t)),bx=(e,t=0)=>Ri(new xx(xx.GLOBAL,e,t)),Tx=(e,t=0)=>Ri(new xx(xx.DELTA,e,t)),_x=Mi(xx,xx.FRAME).toUint();class Nx extends Lr{static get type(){return"OscNode"}constructor(e=Nx.SINE,t=yx()){super(),this.method=e,this.timeNode=t}getNodeType(e){return this.timeNode.getNodeType(e)}setup(){const e=this.method,t=Ri(this.timeNode);let s=null;return e===Nx.SINE?s=t.add(.75).mul(2*Math.PI).sin().mul(.5).add(.5):e===Nx.SQUARE?s=t.fract().round():e===Nx.TRIANGLE?s=t.add(.5).fract().mul(2).sub(1).abs():e===Nx.SAWTOOTH&&(s=t.fract()),s}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}Nx.SINE="sine",Nx.SQUARE="square",Nx.TRIANGLE="triangle",Nx.SAWTOOTH="sawtooth";const vx=wi(Nx,Nx.SINE),Sx=wi(Nx,Nx.SQUARE),Ax=wi(Nx,Nx.TRIANGLE),Rx=wi(Nx,Nx.SAWTOOTH);class Cx extends Lr{static get type(){return"SpriteSheetUVNode"}constructor(e,t=Gu(),s=Di(0)){super("vec2"),this.countNode=e,this.uvNode=t,this.frameNode=s}setup(){const{frameNode:e,uvNode:t,countNode:s}=this,{width:r,height:i}=s,n=e.mod(r.mul(i)).floor(),a=n.mod(r),o=i.sub(n.add(1).div(r).ceil()),u=s.reciprocal(),l=ki(a,o);return t.add(l).mul(u)}}const Ex=wi(Cx);class wx extends Vr{static get type(){return"StorageArrayElementNode"}constructor(e,t){super(e,t),this.isStorageArrayElementNode=!0}set storageBufferNode(e){this.node=e}get storageBufferNode(){return this.node}setup(e){return!1===e.isAvailable("storageBuffer")&&!0===this.node.bufferObject&&e.setupPBO(this.node),super.setup(e)}generate(e,t){let s;const r=e.context.assign;if(s=!1===e.isAvailable("storageBuffer")?!0===this.node.bufferObject&&!0!==r?e.generatePBO(this):this.node.build(e):super.generate(e),!0!==r){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}const Mx=wi(wx);class Bx extends Lr{static get type(){return"TriplanarTexturesNode"}constructor(e,t=null,s=null,r=Di(1),i=Sl,n=Pl){super("vec4"),this.textureXNode=e,this.textureYNode=t,this.textureZNode=s,this.scaleNode=r,this.positionNode=i,this.normalNode=n}setup(){const{textureXNode:e,textureYNode:t,textureZNode:s,scaleNode:r,positionNode:i,normalNode:n}=this;let a=n.abs().normalize();a=a.div(a.dot(ji(1)));const o=i.yz.mul(r),u=i.zx.mul(r),l=i.xy.mul(r),d=e.value,c=null!==t?t.value:d,h=null!==s?s.value:d,p=ju(d,o).mul(a.x),g=ju(c,u).mul(a.y),m=ju(h,l).mul(a.z);return ra(p,g,m)}}const Ux=wi(Bx),Fx=(...e)=>Ux(...e),Px=new _e,Ix=new s,Lx=new s,Vx=new s,Dx=new n,Ox=new s(0,0,-1),Gx=new r,zx=new s,kx=new s,$x=new r,Hx=new t,Wx=new Re,jx=dh.flipX();let qx=!1;class Xx extends Wu{static get type(){return"ReflectorNode"}constructor(e={}){super(Wx.texture,jx);const{target:t=new Le,resolution:s=1,generateMipmaps:r=!1,bounces:i=!0}=e;this.target=t,this.resolution=s,this.generateMipmaps=r,this.bounces=i,this.updateBeforeType=i?wr.RENDER:wr.FRAME,this.virtualCameras=new WeakMap,this.renderTargets=new WeakMap}_updateResolution(e,t){const s=this.resolution;t.getDrawingBufferSize(Hx),e.setSize(Math.round(Hx.width*s),Math.round(Hx.height*s))}setup(e){return this._updateResolution(Wx,e.renderer),super.setup(e)}getTextureNode(){return this.textureNode}getVirtualCamera(e){let t=this.virtualCameras.get(e);return void 0===t&&(t=e.clone(),this.virtualCameras.set(e,t)),t}getRenderTarget(e){let t=this.renderTargets.get(e);return void 0===t&&(t=new Re(0,0,{type:Me}),!0===this.generateMipmaps&&(t.texture.minFilter=Ve,t.texture.generateMipmaps=!0),this.renderTargets.set(e,t)),t}updateBefore(e){if(!1===this.bounces&&qx)return!1;qx=!0;const{scene:t,camera:s,renderer:r,material:i}=e,{target:n}=this,a=this.getVirtualCamera(s),o=this.getRenderTarget(a);if(r.getDrawingBufferSize(Hx),this._updateResolution(o,r),Lx.setFromMatrixPosition(n.matrixWorld),Vx.setFromMatrixPosition(s.matrixWorld),Dx.extractRotation(n.matrixWorld),Ix.set(0,0,1),Ix.applyMatrix4(Dx),zx.subVectors(Lx,Vx),zx.dot(Ix)>0)return;zx.reflect(Ix).negate(),zx.add(Lx),Dx.extractRotation(s.matrixWorld),Ox.set(0,0,-1),Ox.applyMatrix4(Dx),Ox.add(Vx),kx.subVectors(Lx,Ox),kx.reflect(Ix).negate(),kx.add(Lx),a.coordinateSystem=s.coordinateSystem,a.position.copy(zx),a.up.set(0,1,0),a.up.applyMatrix4(Dx),a.up.reflect(Ix),a.lookAt(kx),a.near=s.near,a.far=s.far,a.updateMatrixWorld(),a.projectionMatrix.copy(s.projectionMatrix),Px.setFromNormalAndCoplanarPoint(Ix,Lx),Px.applyMatrix4(a.matrixWorldInverse),Gx.set(Px.normal.x,Px.normal.y,Px.normal.z,Px.constant);const u=a.projectionMatrix;$x.x=(Math.sign(Gx.x)+u.elements[8])/u.elements[0],$x.y=(Math.sign(Gx.y)+u.elements[9])/u.elements[5],$x.z=-1,$x.w=(1+u.elements[10])/u.elements[14],Gx.multiplyScalar(1/Gx.dot($x));u.elements[2]=Gx.x,u.elements[6]=Gx.y,u.elements[10]=Gx.z-0,u.elements[14]=Gx.w,this.value=o.texture,i.visible=!1;const l=r.getRenderTarget(),d=r.getMRT();r.setMRT(null),r.setRenderTarget(o),r.render(t,a),r.setMRT(d),r.setRenderTarget(l),i.visible=!0,qx=!1}}const Kx=e=>Ri(new Xx(e)),Yx=new Ee(-1,1,1,-1,0,1);class Qx extends Se{constructor(e=!1){super();const t=!1===e?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new De([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new De(t,2))}}const Zx=new Qx;class Jx extends q{constructor(e=null){super(Zx,e),this.camera=Yx,this.isQuadMesh=!0}renderAsync(e){return e.renderAsync(this,Yx)}render(e){e.render(this,Yx)}}const ey=new t;class ty extends Wu{static get type(){return"RTTNode"}constructor(e,t=null,s=null,r={type:Me}){const i=new Re(t,s,r);super(i.texture,Gu()),this.node=e,this.width=t,this.height=s,this.renderTarget=i,this.textureNeedsUpdate=!0,this.autoUpdate=!0,this.updateMap=new WeakMap,this._rttNode=null,this._quadMesh=new Jx(new Oh),this.updateBeforeType=wr.RENDER}get autoSize(){return null===this.width}setup(e){return this._rttNode=this.node.context(e.getSharedContext()),this._quadMesh.material.name="RTT",this._quadMesh.material.needsUpdate=!0,super.setup(e)}setSize(e,t){this.width=e,this.height=t;const s=e*this.pixelRatio,r=t*this.pixelRatio;this.renderTarget.setSize(s,r),this.textureNeedsUpdate=!0}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}updateBefore({renderer:e}){if(!1===this.textureNeedsUpdate&&!1===this.autoUpdate)return;if(this.textureNeedsUpdate=!1,!0===this.autoSize){this.pixelRatio=e.getPixelRatio();const t=e.getSize(ey);this.setSize(t.width,t.height)}this._quadMesh.material.fragmentNode=this._rttNode;const t=e.getRenderTarget();e.setRenderTarget(this.renderTarget),this._quadMesh.render(e),e.setRenderTarget(t)}clone(){const e=new Wu(this.value,this.uvNode,this.levelNode);return e.sampler=this.sampler,e.referenceNode=this,e}}const sy=(e,...t)=>Ri(new ty(Ri(e),...t)),ry=(e,...t)=>e.isTextureNode?e:sy(e,...t);class iy extends Du{static get type(){return"VertexColorNode"}constructor(e=0){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e);let s;return s=!0===e.hasGeometryAttribute(t)?super.generate(e):e.generateConst(this.nodeType,new r(1,1,1,1)),s}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const ny=(...e)=>Ri(new iy(...e));class ay extends Lr{static get type(){return"PointUVNode"}constructor(){super("vec2"),this.isPointUVNode=!0}generate(){return"vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y )"}}const oy=Mi(ay);class uy extends Lr{static get type(){return"SceneNode"}constructor(e=uy.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,s=null!==this.scene?this.scene:e.scene;let r;return t===uy.BACKGROUND_BLURRINESS?r=nd("backgroundBlurriness","float",s):t===uy.BACKGROUND_INTENSITY?r=nd("backgroundIntensity","float",s):console.error("THREE.SceneNode: Unknown scope:",t),r}}uy.BACKGROUND_BLURRINESS="backgroundBlurriness",uy.BACKGROUND_INTENSITY="backgroundIntensity";const ly=Mi(uy,uy.BACKGROUND_BLURRINESS),hy=Mi(uy,uy.BACKGROUND_INTENSITY),py="point-list",gy="line-list",my="line-strip",fy="triangle-list",xy="triangle-strip",yy="never",by="less",Ty="equal",_y="less-equal",Ny="greater",vy="not-equal",Sy="greater-equal",Ay="always",Ry="store",Cy="load",Ey="clear",wy="ccw",My="none",By="front",Uy="back",Fy="uint16",Py="uint32",Iy={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10uFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Stencil8:"stencil8",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},Ly="clamp-to-edge",Vy="repeat",Dy="mirror-repeat",Oy="linear",Gy="nearest",zy="zero",ky="one",$y="src",Hy="one-minus-src",Wy="src-alpha",jy="one-minus-src-alpha",qy="dst",Xy="one-minus-dst",Ky="dst-alpha",Yy="one-minus-dst-alpha",Qy="src-alpha-saturated",Zy="constant",Jy="one-minus-constant",tb="add",sb="subtract",rb="reverse-subtract",ib="min",nb="max",ab=0,ob=15,ub="keep",lb="zero",hb="replace",pb="invert",gb="increment-clamp",mb="decrement-clamp",xb="increment-wrap",yb="decrement-wrap",bb="storage",Tb="read-only-storage",_b="write-only",Nb="read-only",vb="float",Sb="unfilterable-float",Ab="depth",Rb="sint",Cb="uint",Eb="2d",wb="3d",Mb="2d",Bb="2d-array",Ub="cube",Fb="3d",Pb="all",Ib="vertex",Lb="instance",Vb={DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups"};class Db extends Yl{static get type(){return"StorageBufferNode"}constructor(e,t,s=0){super(e,t,s),this.isStorageBufferNode=!0,this.access=bb,this.bufferObject=!1,this.bufferCount=s,this._attribute=null,this._varying=null,this.global=!0,!0!==e.isStorageBufferAttribute&&!0!==e.isStorageInstancedBufferAttribute&&(e.isInstancedBufferAttribute?e.isStorageInstancedBufferAttribute=!0:e.isStorageBufferAttribute=!0)}getHash(e){if(0===this.bufferCount){let t=e.globalCache.getData(this.value);return void 0===t&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getInputType(){return"storageBuffer"}element(e){return Mx(this,e)}setBufferObject(e){return this.bufferObject=e,this}setAccess(e){return this.access=e,this}toReadOnly(){return this.setAccess(Tb)}generate(e){if(e.isAvailable("storageBuffer"))return super.generate(e);const t=this.getNodeType(e);null===this._attribute&&(this._attribute=yu(this.value),this._varying=Zo(this._attribute));const s=this._varying.build(e,t);return e.registerTransform(s,this._attribute),s}}const Ob=(e,t,s)=>Ri(new Db(e,t,s)),Gb=(e,t,s)=>Ri(new Db(e,t,s).setBufferObject(!0));class zb extends Wu{static get type(){return"StorageTextureNode"}constructor(e,t,s=null){super(e,t),this.storeNode=s,this.isStorageTextureNode=!0,this.access=_b}getInputType(){return"storageTexture"}setup(e){super.setup(e);e.getNodeProperties(this).storeNode=this.storeNode}setAccess(e){return this.access=e,this}generate(e,t){let s;return s=null!==this.storeNode?this.generateStore(e):super.generate(e,t),s}toReadOnly(){return this.setAccess(Nb)}toWriteOnly(){return this.setAccess(_b)}generateStore(e){const t=e.getNodeProperties(this),{uvNode:s,storeNode:r}=t,i=super.generate(e,"property"),n=s.build(e,"uvec2"),a=r.build(e,"vec4"),o=e.generateTextureStore(e,i,n,a);e.addLineFlowCode(o)}}const kb=wi(zb),$b=(e,t,s)=>{const r=kb(e,t,s);return null!==s&&r.append(),r};class Hb extends id{static get type(){return"UserDataNode"}constructor(e,t,s=null){super(e,t,s),this.userData=s}update(e){this.reference=null!==this.userData?this.userData:e.object.userData,super.update(e)}}const Wb=(e,t,s)=>Ri(new Hb(e,t,s));class jb extends Or{static get type(){return"PosterizeNode"}constructor(e,t){super(),this.sourceNode=e,this.stepsNode=t}setup(){const{sourceNode:e,stepsNode:t}=this;return e.mul(t).floor().div(t)}}const qb=wi(jb);let Xb=null;class Kb extends vh{static get type(){return"ViewportSharedTextureNode"}constructor(e=dh,t=null){null===Xb&&(Xb=new I),super(e,t,Xb)}updateReference(){return this}}const Yb=wi(Kb),Qb=new t;class Zb extends Wu{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return e.object.isQuadMesh&&this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class Jb extends Zb{static get type(){return"PassMultipleTextureNode"}constructor(e,t,s=!1){super(e,null),this.textureName=t,this.previousTexture=s}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){return new this.constructor(this.passNode,this.textureName,this.previousTexture)}}class tT extends Or{static get type(){return"PassNode"}constructor(e,t,s,r={}){super("vec4"),this.scope=e,this.scene=t,this.camera=s,this.options=r,this._pixelRatio=1,this._width=1,this._height=1;const i=new V;i.isRenderTargetTexture=!0,i.name="depth";const n=new Re(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:Me,...r});n.texture.name="output",n.depthTexture=i,this.renderTarget=n,this.updateBeforeType=wr.FRAME,this._textures={output:n.texture,depth:i},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=bn(0),this._cameraFar=bn(0),this._mrt=null,this.isPassNode=!0}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}isGlobal(){return!0}getTexture(e){let t=this._textures[e];if(void 0===t){t=this.renderTarget.texture.clone(),t.isRenderTargetTexture=!0,t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)}return t}getPreviousTexture(e){let t=this._previousTextures[e];return void 0===t&&(t=this.getTexture(e).clone(),t.isRenderTargetTexture=!0,this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(void 0!==t){const s=this._textures[e],r=this.renderTarget.textures.indexOf(s);this.renderTarget.textures[r]=t,this._textures[e]=t,this._previousTextures[e]=s,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return void 0===t&&(this._textureNodes[e]=t=Ri(new Jb(this,e)),this._textureNodes[e].updateTexture()),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return void 0===t&&(void 0===this._textureNodes[e]&&this.getTextureNode(e),this._previousTextureNodes[e]=t=Ri(new Jb(this,e,!0)),this._previousTextureNodes[e].updateTexture()),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(void 0===t){const s=this._cameraNear,r=this._cameraFar;this._viewZNodes[e]=t=Fh(this.getTextureNode(e),s,r)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(void 0===t){const s=this._cameraNear,r=this._cameraFar,i=this.getViewZNode(e);this._linearDepthNodes[e]=t=Mh(i,s,r)}return t}setup({renderer:e}){return this.renderTarget.samples=void 0===this.options.samples?e.samples:this.options.samples,!0===e.backend.isWebGLBackend&&(this.renderTarget.samples=0),this.renderTarget.depthTexture.isMultisampleRenderTargetTexture=this.renderTarget.samples>1,this.scope===tT.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r}=this;this._pixelRatio=t.getPixelRatio();const i=t.getSize(Qb);this.setSize(i.width,i.height);const n=t.getRenderTarget(),a=t.getMRT();this._cameraNear.value=r.near,this._cameraFar.value=r.far;for(const e in this._previousTextures)this.toggleTexture(e);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(s,r),t.setRenderTarget(n),t.setMRT(a)}setSize(e,t){this._width=e,this._height=t;const s=this._width*this._pixelRatio,r=this._height*this._pixelRatio;this.renderTarget.setSize(s,r)}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}tT.COLOR="color",tT.DEPTH="depth";const sT=(e,t,s)=>Ri(new tT(tT.COLOR,e,t,s)),rT=(e,t)=>Ri(new Zb(e,t)),iT=(e,t)=>Ri(new tT(tT.DEPTH,e,t)),nT=new Jx,aT=new Jx;class oT extends Or{static get type(){return"GaussianBlurNode"}constructor(e,s=null,r=2){super("vec4"),this.textureNode=e,this.directionNode=s,this.sigma=r,this._invSize=bn(new t),this._passDirection=bn(new t),this._horizontalRT=new Re,this._horizontalRT.texture.name="GaussianBlurNode.horizontal",this._verticalRT=new Re,this._verticalRT.texture.name="GaussianBlurNode.vertical",this._textureNode=rT(this,this._verticalRT.texture),this.updateBeforeType=wr.RENDER,this.resolution=new t(1,1)}setSize(e,t){e=Math.max(Math.round(e*this.resolution.x),1),t=Math.max(Math.round(t*this.resolution.y),1),this._invSize.value.set(1/e,1/t),this._horizontalRT.setSize(e,t),this._verticalRT.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=this.textureNode,r=s.value,i=t.getRenderTarget(),n=t.getMRT(),a=s.value;nT.material=this._material,aT.material=this._material,this.setSize(r.image.width,r.image.height);const o=r.type;this._horizontalRT.texture.type=o,this._verticalRT.texture.type=o,t.setMRT(null),t.setRenderTarget(this._horizontalRT),this._passDirection.value.set(1,0),nT.render(t),s.value=this._horizontalRT.texture,t.setRenderTarget(this._verticalRT),this._passDirection.value.set(0,1),aT.render(t),t.setRenderTarget(i),t.setMRT(n),s.value=a}getTextureNode(){return this._textureNode}setup(e){const t=this.textureNode;if(!0!==t.isTextureNode)return console.error("GaussianBlurNode requires a TextureNode."),Yi();const s=t.uvNode||Gu(),r=ki(this.directionNode||1),i=e=>t.uv(e),n=Bi((()=>{const e=3+2*this.sigma,t=this._getCoefficients(e),n=this._invSize,a=r.mul(this._passDirection),o=Di(t[0]).toVar(),u=Yi(i(s).mul(o)).toVar();for(let r=1;r<e;r++){const e=Di(r),l=Di(t[r]),d=ki(a.mul(n.mul(e))).toVar(),c=Yi(i(s.add(d))),h=Yi(i(s.sub(d)));u.addAssign(c.add(h).mul(l)),o.addAssign(na(2,l))}return u.div(o)})),a=this._material||(this._material=new Oh);a.fragmentNode=n().context(e.getSharedContext()),a.name="Gaussian_blur",a.needsUpdate=!0;return e.getNodeProperties(this).textureNode=t,this._textureNode}dispose(){this._horizontalRT.dispose(),this._verticalRT.dispose()}_getCoefficients(e){const t=[];for(let s=0;s<e;s++)t.push(.39894*Math.exp(-.5*s*s/(e*e))/e);return t}}const uT=(e,t,s)=>Ri(new oT(ry(e),t,s)),lT=new t,cT=new Jx;class hT extends Or{static get type(){return"AfterImageNode"}constructor(e,t=.96){super(e),this.textureNode=e,this.textureNodeOld=ju(),this.damp=bn(t),this._compRT=new Re,this._compRT.texture.name="AfterImageNode.comp",this._oldRT=new Re,this._oldRT.texture.name="AfterImageNode.old",this._textureNode=rT(this,this._compRT.texture),this.updateBeforeType=wr.RENDER}getTextureNode(){return this._textureNode}setSize(e,t){this._compRT.setSize(e,t),this._oldRT.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=this.textureNode,r=s.value.type;this._compRT.texture.type=r,this._oldRT.texture.type=r,t.getDrawingBufferSize(lT),this.setSize(lT.x,lT.y);const i=t.getRenderTarget(),n=s.value;this.textureNodeOld.value=this._oldRT.texture,t.setRenderTarget(this._compRT),cT.render(t);const a=this._oldRT;this._oldRT=this._compRT,this._compRT=a,t.setRenderTarget(i),s.value=n}setup(e){const t=this.textureNode,s=this.textureNodeOld,r=t.uvNode||Gu();s.uvNode=r;const i=Bi((([e,t])=>{const s=Di(t).toVar(),r=Yi(e).toVar();return bo(so(r.sub(s)),0)})),n=Bi((()=>{const e=Yi(s),n=Yi((e=>t.uv(e))(r));return e.mulAssign(this.damp.mul(i(e,.1))),bo(n,e)})),a=this._materialComposed||(this._materialComposed=new Oh);a.name="AfterImage",a.fragmentNode=n(),cT.material=a;return e.getNodeProperties(this).textureNode=t,this._textureNode}dispose(){this._compRT.dispose(),this._oldRT.dispose()}}const pT=(e,t)=>Ri(new hT(ry(e),t)),gT=Bi((([e])=>bT(e.rgb))),mT=Bi((([e,t=Di(1)])=>t.mix(bT(e.rgb),e.rgb))),fT=Bi((([e,t=Di(1)])=>{const s=ra(e.r,e.g,e.b).div(3),r=e.r.max(e.g.max(e.b)),i=r.sub(s).mul(t).mul(-3);return Po(e.rgb,r,i)})),xT=Bi((([e,t=Di(1)])=>{const s=ji(.57735,.57735,.57735),r=t.cos();return ji(e.rgb.mul(r).add(s.cross(e.rgb).mul(t.sin()).add(s.mul(Ao(s,e.rgb).mul(r.oneMinus())))))})),yT=new s,bT=(e,t=ji(...l.getLuminanceCoefficients(yT)))=>Ao(e,t),TT=(e,t)=>Po(ji(0),e,bT(e).sub(t).max(0)),_T=new Jx;class NT extends Or{static get type(){return"AnamorphicNode"}constructor(e,s,r,i){super("vec4"),this.textureNode=e,this.tresholdNode=s,this.scaleNode=r,this.colorNode=ji(.1,0,1),this.samples=i,this.resolution=new t(1,1),this._renderTarget=new Re,this._renderTarget.texture.name="anamorphic",this._invSize=bn(new t),this._textureNode=rT(this,this._renderTarget.texture),this.updateBeforeType=wr.RENDER}getTextureNode(){return this._textureNode}setSize(e,t){this._invSize.value.set(1/e,1/t),e=Math.max(Math.round(e*this.resolution.x),1),t=Math.max(Math.round(t*this.resolution.y),1),this._renderTarget.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=this.textureNode,r=s.value;this._renderTarget.texture.type=r.type;const i=t.getRenderTarget(),n=s.value;_T.material=this._material,this.setSize(r.image.width,r.image.height),t.setRenderTarget(this._renderTarget),_T.render(t),t.setRenderTarget(i),s.value=n}setup(e){const t=this.textureNode,s=t.uvNode||Gu(),r=Bi((()=>{const e=this.samples,r=Math.floor(e/2),i=ji(0).toVar();return $c({start:-r,end:r},(({i:e})=>{const n=Di(e).abs().div(r).oneMinus(),a=(e=>t.uv(e))(ki(s.x.add(this._invSize.x.mul(e).mul(this.scaleNode)),s.y)),o=TT(a,this.tresholdNode).mul(n);i.addAssign(o)})),i.mul(this.colorNode)})),i=this._material||(this._material=new Oh);i.name="Anamorphic",i.fragmentNode=r();return e.getNodeProperties(this).textureNode=t,this._textureNode}dispose(){this._renderTarget.dispose()}}const vT=(e,t=.9,s=3,r=32)=>Ri(new NT(ry(e),Ri(t),Ri(s),r));class ST extends Or{static get type(){return"SobelOperatorNode"}constructor(e){super(),this.textureNode=e,this.updateBeforeType=wr.RENDER,this._invSize=bn(new t)}updateBefore(){const e=this.textureNode.value;this._invSize.value.set(1/e.image.width,1/e.image.height)}setup(){const{textureNode:e}=this,t=e.uvNode||Gu(),s=t=>e.uv(t);return Bi((()=>{const e=this._invSize,r=sn(-1,-2,-1,0,0,0,1,2,1),i=sn(-1,0,1,-2,0,2,-1,0,1),n=bT(s(t.add(e.mul(ki(-1,-1)))).xyz),a=bT(s(t.add(e.mul(ki(-1,0)))).xyz),o=bT(s(t.add(e.mul(ki(-1,1)))).xyz),u=bT(s(t.add(e.mul(ki(0,-1)))).xyz),l=bT(s(t.add(e.mul(ki(0,0)))).xyz),d=bT(s(t.add(e.mul(ki(0,1)))).xyz),c=bT(s(t.add(e.mul(ki(1,-1)))).xyz),h=bT(s(t.add(e.mul(ki(1,0)))).xyz),p=bT(s(t.add(e.mul(ki(1,1)))).xyz),g=ra(r[0][0].mul(n),r[1][0].mul(u),r[2][0].mul(c),r[0][1].mul(a),r[1][1].mul(l),r[2][1].mul(h),r[0][2].mul(o),r[1][2].mul(d),r[2][2].mul(p)),m=ra(i[0][0].mul(n),i[1][0].mul(u),i[2][0].mul(c),i[0][1].mul(a),i[1][1].mul(l),i[2][1].mul(h),i[0][2].mul(o),i[1][2].mul(d),i[2][2].mul(p)),f=g.mul(g).add(m.mul(m)).sqrt();return Yi(ji(f),1)}))()}}const AT=e=>Ri(new ST(ry(e)));class RT extends Or{static get type(){return"DepthOfFieldNode"}constructor(e,t,s,r,i){super(),this.textureNode=e,this.viewZNode=t,this.focusNode=s,this.apertureNode=r,this.maxblurNode=i,this._aspect=bn(0),this.updateBeforeType=wr.RENDER}updateBefore(){const e=this.textureNode.value;this._aspect.value=e.image.width/e.image.height}setup(){const e=this.textureNode,t=e.uvNode||Gu(),s=t=>e.uv(t);return Bi((()=>{const e=ki(1,this._aspect),r=this.focusNode.add(this.viewZNode),i=ki(Io(r.mul(this.apertureNode),this.maxblurNode.negate(),this.maxblurNode)),n=i.mul(.9),a=i.mul(.7),o=i.mul(.4);let u=Yi(0);return u=u.add(s(t)),u=u.add(s(t.add(ki(0,.4).mul(e).mul(i)))),u=u.add(s(t.add(ki(.15,.37).mul(e).mul(i)))),u=u.add(s(t.add(ki(.29,.29).mul(e).mul(i)))),u=u.add(s(t.add(ki(-.37,.15).mul(e).mul(i)))),u=u.add(s(t.add(ki(.4,0).mul(e).mul(i)))),u=u.add(s(t.add(ki(.37,-.15).mul(e).mul(i)))),u=u.add(s(t.add(ki(.29,-.29).mul(e).mul(i)))),u=u.add(s(t.add(ki(-.15,-.37).mul(e).mul(i)))),u=u.add(s(t.add(ki(0,-.4).mul(e).mul(i)))),u=u.add(s(t.add(ki(-.15,.37).mul(e).mul(i)))),u=u.add(s(t.add(ki(-.29,.29).mul(e).mul(i)))),u=u.add(s(t.add(ki(.37,.15).mul(e).mul(i)))),u=u.add(s(t.add(ki(-.4,0).mul(e).mul(i)))),u=u.add(s(t.add(ki(-.37,-.15).mul(e).mul(i)))),u=u.add(s(t.add(ki(-.29,-.29).mul(e).mul(i)))),u=u.add(s(t.add(ki(.15,-.37).mul(e).mul(i)))),u=u.add(s(t.add(ki(.15,.37).mul(e).mul(n)))),u=u.add(s(t.add(ki(-.37,.15).mul(e).mul(n)))),u=u.add(s(t.add(ki(.37,-.15).mul(e).mul(n)))),u=u.add(s(t.add(ki(-.15,-.37).mul(e).mul(n)))),u=u.add(s(t.add(ki(-.15,.37).mul(e).mul(n)))),u=u.add(s(t.add(ki(.37,.15).mul(e).mul(n)))),u=u.add(s(t.add(ki(-.37,-.15).mul(e).mul(n)))),u=u.add(s(t.add(ki(.15,-.37).mul(e).mul(n)))),u=u.add(s(t.add(ki(.29,.29).mul(e).mul(a)))),u=u.add(s(t.add(ki(.4,0).mul(e).mul(a)))),u=u.add(s(t.add(ki(.29,-.29).mul(e).mul(a)))),u=u.add(s(t.add(ki(0,-.4).mul(e).mul(a)))),u=u.add(s(t.add(ki(-.29,.29).mul(e).mul(a)))),u=u.add(s(t.add(ki(-.4,0).mul(e).mul(a)))),u=u.add(s(t.add(ki(-.29,-.29).mul(e).mul(a)))),u=u.add(s(t.add(ki(0,.4).mul(e).mul(a)))),u=u.add(s(t.add(ki(.29,.29).mul(e).mul(o)))),u=u.add(s(t.add(ki(.4,0).mul(e).mul(o)))),u=u.add(s(t.add(ki(.29,-.29).mul(e).mul(o)))),u=u.add(s(t.add(ki(0,-.4).mul(e).mul(o)))),u=u.add(s(t.add(ki(-.29,.29).mul(e).mul(o)))),u=u.add(s(t.add(ki(-.4,0).mul(e).mul(o)))),u=u.add(s(t.add(ki(-.29,-.29).mul(e).mul(o)))),u=u.add(s(t.add(ki(0,.4).mul(e).mul(o)))),u=u.div(41),u.a=1,Yi(u)}))()}}const CT=(e,t,s=1,r=.025,i=1)=>Ri(new RT(ry(e),Ri(t),Ri(s),Ri(r),Ri(i)));class ET extends Or{static get type(){return"DotScreenNode"}constructor(e,s=new t(.5,.5),r=1.57,i=1){super("vec4"),this.inputNode=e,this.center=bn(s),this.angle=bn(r),this.scale=bn(i)}setup(){const e=this.inputNode,t=Bi((()=>{const e=Xa(this.angle),t=Ka(this.angle),s=Gu().mul(hh).sub(this.center),r=ki(t.mul(s.x).sub(e.mul(s.y)),e.mul(s.x).add(t.mul(s.y))).mul(this.scale);return Xa(r.x).mul(Xa(r.y)).mul(4)})),s=Bi((()=>{const s=e,r=ra(s.r,s.g,s.b).div(3);return Yi(ji(r.mul(10).sub(5).add(t())),s.a)}));return s()}}const wT=(e,t,s,r)=>Ri(new ET(Ri(e),t,s,r));class MT extends Or{static get type(){return"RGBShiftNode"}constructor(e,t=.005,s=0){super("vec4"),this.textureNode=e,this.amount=bn(t),this.angle=bn(s)}setup(){const{textureNode:e}=this,t=e.uvNode||Gu(),s=t=>e.uv(t);return Bi((()=>{const e=ki(Ka(this.angle),Xa(this.angle)).mul(this.amount),r=s(t.add(e)),i=s(t),n=s(t.sub(e));return Yi(r.r,i.g,n.b,i.a)}))()}}const BT=(e,t,s)=>Ri(new MT(ry(e),t,s));class UT extends Or{static get type(){return"FilmNode"}constructor(e,t=null,s=null){super(),this.inputNode=e,this.intensityNode=t,this.uvNode=s}setup(){const e=this.uvNode||Gu(),t=Bi((()=>{const t=this.inputNode.rgb,s=Go(qa(e.add(yx())));let r=t.add(t.mul(Io(s.add(.1),0,1)));return null!==this.intensityNode&&(r=Po(t,r,this.intensityNode)),Yi(r,this.inputNode.a)}));return t()}}const FT=wi(UT);class PT extends Or{static get type(){return"Lut3DNode"}constructor(e,t,s,r){super(),this.inputNode=e,this.lutNode=t,this.size=bn(s),this.intensityNode=r}setup(){const{inputNode:e,lutNode:t}=this,s=Bi((()=>{const s=e,r=Di(1).div(this.size),i=Di(.5).div(this.size),n=ji(i).add(s.rgb.mul(Di(1).sub(r))),a=Yi((e=>t.uv(e))(n).rgb,s.a);return Yi(Po(s,a,this.intensityNode))}));return s()}}const IT=(e,t,s,r)=>Ri(new PT(Ri(e),Ri(t),s,Ri(r))),LT=new Jx,VT=new e,DT=new t;class OT extends Or{static get type(){return"GTAONode"}constructor(e,r,i){super(),this.depthNode=e,this.normalNode=r,this.radius=bn(.25),this.resolution=bn(new t),this.thickness=bn(1),this.distanceExponent=bn(1),this.distanceFallOff=bn(1),this.scale=bn(1),this.noiseNode=ju(function(e=5){const t=Math.floor(e)%2==0?Math.floor(e)+1:Math.floor(e),r=function(e){const t=Math.floor(e)%2==0?Math.floor(e)+1:Math.floor(e),s=t*t,r=Array(s).fill(0);let i=Math.floor(t/2),n=t-1;for(let e=1;e<=s;)-1===i&&n===t?(n=t-2,i=0):(n===t&&(n=0),i<0&&(i=t-1)),0===r[i*t+n]?(r[i*t+n]=e++,n++,i--):(n-=2,i++);return r}(t),i=r.length,n=new Uint8Array(4*i);for(let e=0;e<i;++e){const t=r[e],a=2*Math.PI*t/i,o=new s(Math.cos(a),Math.sin(a),0).normalize();n[4*e]=255*(.5*o.x+.5),n[4*e+1]=255*(.5*o.y+.5),n[4*e+2]=127,n[4*e+3]=255}const a=new Oe(n,t,t);return a.wrapS=Ge,a.wrapT=Ge,a.needsUpdate=!0,a}()),this.cameraProjectionMatrix=bn(i.projectionMatrix),this.cameraProjectionMatrixInverse=bn(i.projectionMatrixInverse),this.SAMPLES=bn(16),this._aoRenderTarget=new Re,this._aoRenderTarget.texture.name="GTAONode.AO",this._material=null,this._textureNode=rT(this,this._aoRenderTarget.texture),this.updateBeforeType=wr.FRAME}getTextureNode(){return this._textureNode}setSize(e,t){this.resolution.value.set(e,t),this._aoRenderTarget.setSize(e,t)}updateBefore(e){const{renderer:t}=e,s=t.getDrawingBufferSize(DT),r=t.getRenderTarget(),i=t.getMRT();t.getClearColor(VT);const n=t.getClearAlpha();LT.material=this._material,this.setSize(s.width,s.height),t.setMRT(null),t.setClearColor(16777215,1),t.setRenderTarget(this._aoRenderTarget),LT.render(t),t.setRenderTarget(r),t.setMRT(i),t.setClearColor(VT,n)}setup(e){const t=Gu(),s=e=>this.depthNode.uv(e).x,r=e=>this.noiseNode.uv(e),i=Bi((([e])=>{const t=this.cameraProjectionMatrix.mul(Yi(e,1));let r=t.xy.div(t.w).mul(.5).add(.5).toVar();r=ki(r.x,r.y.oneMinus());const i=s(r);return ji(r,i)})),n=Bi((([e,t])=>{e=ki(e.x,e.y.oneMinus()).mul(2).sub(1);const s=Yi(ji(e,t),1),r=Yi(this.cameraProjectionMatrixInverse.mul(s));return r.xyz.div(r.w)})),a=Bi((()=>{const e=s(t);e.greaterThanEqual(1).discard();const a=n(t,e),o=this.normalNode.rgb.normalize(),u=this.radius,l=ku(this.noiseNode,0);let d=ki(t.x,t.y.oneMinus());d=d.mul(this.resolution.div(l));const c=r(d),h=c.xyz.mul(2).sub(1),p=ji(h.xy,0).normalize(),g=ji(p.y.mul(-1),p.x,0),m=sn(p,g,ji(0,0,1)),f=this.SAMPLES.lessThan(30).select(3,5),x=ra(this.SAMPLES,f.sub(1)).div(f),y=Di(0).toVar();return $c({start:Oi(0),end:f,type:"int",condition:"<"},(({i:e})=>{const t=Di(e).div(Di(f)).mul(Ba),s=Yi(Ka(t),Xa(t),0,ra(.5,na(.5,c.w)));s.xyz=ja(m.mul(s.xyz));const r=ja(a.xyz.negate()),l=ja(Ro(s.xyz,r)),d=Ro(l,r),h=ja(o.sub(l.mul(Ao(o,l)))),p=Ro(h,l),g=ki(Ao(r,p),Ao(r,p.negate())).toVar();$c({end:x,type:"int",name:"j",condition:"<"},(({j:e})=>{const t=s.xyz.mul(u).mul(s.w).mul(Co(aa(Di(e).add(1),Di(x)),this.distanceExponent)),o=i(a.add(t)),l=n(o.xy,o.z).sub(a);Ii(to(l.z).lessThan(this.thickness),(()=>{const t=Ao(r,ja(l));g.x.addAssign(bo(0,na(t.sub(g.x),Po(1,Di(2).div(Di(e).add(2)),this.distanceFallOff))))}));const d=i(a.sub(t)),c=n(d.xy,d.z).sub(a);Ii(to(c.z).lessThan(this.thickness),(()=>{const t=Ao(r,ja(c));g.y.addAssign(bo(0,na(t.sub(g.y),Po(1,Di(2).div(Di(e).add(2)),this.distanceFallOff))))}))}));const b=ka(ia(1,g.mul(g))),T=Ao(h,d),_=Ao(h,r),N=na(.5,Za(g.y).sub(Za(g.x)).add(b.x.mul(g.x).sub(b.y.mul(g.y)))),v=na(.5,ia(2,g.x.mul(g.x)).sub(g.y.mul(g.y))),S=T.mul(N).add(_.mul(v));y.addAssign(S)})),y.assign(Io(y.div(f),0,1)),y.assign(Co(y,this.scale)),Yi(ji(y),1)})),o=this._material||(this._material=new Oh);return o.fragmentNode=a().context(e.getSharedContext()),o.name="GTAO",o.needsUpdate=!0,this._textureNode}dispose(){this._aoRenderTarget.dispose()}}const GT=(e,t,s)=>Ri(new OT(Ri(e),Ri(t),s));class zT extends Or{static get type(){return"DenoiseNode"}constructor(e,r,i,n,a){super(),this.textureNode=e,this.depthNode=r,this.normalNode=i,this.noiseNode=n,this.cameraProjectionMatrixInverse=bn(a.projectionMatrixInverse),this.lumaPhi=bn(5),this.depthPhi=bn(5),this.normalPhi=bn(5),this.radius=bn(5),this.index=bn(0),this._resolution=bn(new t),this._sampleVectors=td(function(e,t,r){const i=function(e,t,r){const i=[];for(let n=0;n<e;n++){const a=2*Math.PI*t*n/e,o=Math.pow(n/(e-1),r);i.push(new s(Math.cos(a),Math.sin(a),o))}return i}(e,t,r),n=[];for(let t=0;t<e;t++){const e=i[t];n.push(e)}return n}(16,2,1)),this.updateBeforeType=wr.RENDER}updateBefore(){const e=this.textureNode.value;this._resolution.value.set(e.image.width,e.image.height)}setup(){const e=Gu(),t=e=>this.textureNode.uv(e),s=e=>this.depthNode.uv(e).x,r=e=>this.normalNode.uv(e),i=e=>this.noiseNode.uv(e),n=Bi((([e,t])=>{e=ki(e.x,e.y.oneMinus()).mul(2).sub(1);const s=Yi(ji(e,t),1),r=Yi(this.cameraProjectionMatrixInverse.mul(s));return r.xyz.div(r.w)})),a=Bi((([e,i,a,o])=>{const u=t(o),l=s(o),d=r(o).rgb.normalize(),c=u.rgb,h=n(o,l),p=Ao(i,d).toVar(),g=Co(bo(p,0),this.normalPhi).toVar(),m=to(bT(c).sub(bT(e))).toVar(),f=bo(Di(1).sub(m.div(this.lumaPhi)),0).toVar(),x=to(Ao(a.sub(h),i)).toVar(),y=bo(Di(1).sub(x.div(this.depthPhi)),0),b=f.mul(y).mul(g);return Yi(c.mul(b),b)})),o=Bi((([e])=>{const o=s(e),u=r(e).rgb.normalize(),l=t(e);Ii(o.greaterThanEqual(1).or(Ao(u,u).equal(0)),(()=>l));const d=ji(l.rgb),c=n(e,o),h=ku(this.noiseNode,0);let p=ki(e.x,e.y.oneMinus());p=p.mul(this._resolution.div(h));const g=i(p),m=Xa(g.element(this.index.mod(4).mul(2).mul(Ba))),f=Ka(g.element(this.index.mod(4).mul(2).mul(Ba))),x=ki(m,f),y=tn(x.x,x.y.negate(),x.x,x.y),b=Di(1).toVar(),T=ji(l.rgb).toVar();return $c({start:Oi(0),end:Oi(16),type:"int",condition:"<"},(({i:t})=>{const s=this._sampleVectors.element(t).toVar(),r=y.mul(s.xy.mul(Di(1).add(s.z.mul(this.radius.sub(1))))).div(this._resolution).toVar(),i=e.add(r).toVar(),n=a(d,u,c,i);T.addAssign(n.xyz),b.addAssign(n.w)})),Ii(b.greaterThan(Di(0)),(()=>{T.divAssign(b)})),Yi(T,l.a)})).setLayout({name:"denoise",type:"vec4",inputs:[{name:"uv",type:"vec2"}]});return Bi((()=>o(e)))()}}const kT=(e,t,s,r,i)=>Ri(new zT(ry(e),Ri(t),Ri(s),Ri(r),i));class $T extends Or{static get type(){return"FXAANode"}constructor(e){super(),this.textureNode=e,this.updateBeforeType=wr.RENDER,this._invSize=bn(new t)}updateBefore(){const e=this.textureNode.value;this._invSize.value.set(1/e.image.width,1/e.image.height)}setup(){const e=this.textureNode.bias(-100),t=e.uvNode||Gu(),s=t=>e.uv(t),r=(t,s,r)=>e.uv(t.add(s.mul(r))),i=Oi(5),n=Bi((([e,t])=>{const s=Yi(t).toVar(),r=Yi(e).toVar(),i=Yi(to(r.sub(s))).toVar();return bo(bo(bo(i.r,i.g),i.b),i.a)})),a=Bi((([e,t,a,o])=>{const u=s(e).toVar(),l=r(e,ki(0,-1),t.xy).toVar(),d=r(e,ki(1,0),t.xy).toVar(),c=r(e,ki(0,1),t.xy).toVar(),h=r(e,ki(-1,0),t.xy).toVar(),p=n(u,c).toVar(),g=n(u,l).toVar(),m=n(u,d).toVar(),f=n(u,h).toVar(),x=bo(p,bo(g,bo(m,f))).toVar();Ii(x.lessThan(a),(()=>u));const y=ia(p.add(g),m.add(f)).toVar();y.mulAssign(o),Ii(to(y).lessThan(.3),(()=>{const s=m.greaterThan(f).select(1,-1).toVar(),i=g.greaterThan(p).select(1,-1).toVar(),a=ki(s,i).toVar(),x=r(e,ki(a.x,a.y),t.xy),b=n(u,x).toVar(),T=r(e,ki(a.x.negate(),a.y.negate()),t.xy),_=n(u,T).toVar();y.assign(_.sub(b)),y.mulAssign(o),Ii(to(y).lessThan(.3),(()=>{const e=c.add(l).add(d).add(h);return Po(u,e.mul(.25),.4)}))}));const b=ki().toVar();Ii(y.lessThanEqual(0),(()=>{c.assign(h),l.assign(d),b.x.assign(0),b.y.assign(t.y)})).Else((()=>{b.x.assign(t.x),b.y.assign(0)}));const T=n(u,c).toVar(),_=n(u,l).toVar();Ii(T.lessThanEqual(_),(()=>{c.assign(l)}));const N=Oi(0).toVar(),v=Oi(0).toVar(),S=Di(0).toVar(),A=Di(0).toVar(),R=ki(e).toVar(),C=ki(e).toVar(),E=Oi(0).toVar(),w=Oi(0).toVar();$c(i,(({i:t})=>{const r=t.add(1).toVar();Ii(N.equal(0),(()=>{S.addAssign(r),R.assign(e.add(b.mul(S)));const i=s(R.xy),a=n(i,u).toVar(),o=n(i,c).toVar();Ii(a.greaterThan(o),(()=>{N.assign(1)})),E.assign(t)})),Ii(v.equal(0),(()=>{A.addAssign(r),C.assign(e.sub(b.mul(A)));const i=s(C.xy),a=n(i,u).toVar(),o=n(i,c).toVar();Ii(a.greaterThan(o),(()=>{v.assign(1)})),w.assign(t)})),Ii(N.equal(1).or(v.equal(1)),(()=>{Wc()}))})),Ii(N.equal(0).and(v.equal(0)),(()=>u));const M=Di(1).toVar(),B=Di(1).toVar();Ii(N.equal(1),(()=>{M.assign(Di(E).div(Di(i.sub(1))))})),Ii(v.equal(1),(()=>{B.assign(Di(w).div(Di(i.sub(1))))}));const U=yo(M,B);return U.assign(Co(U,.5)),U.assign(Di(1).sub(U)),Po(u,c,U.mul(.5))})).setLayout({name:"FxaaPixelShader",type:"vec4",inputs:[{name:"uv",type:"vec2"},{name:"fxaaQualityRcpFrame",type:"vec2"},{name:"fxaaQualityEdgeThreshold",type:"float"},{name:"fxaaQualityinvEdgeThreshold",type:"float"}]});return Bi((()=>{const e=Di(.2),s=Di(1).div(e);return a(t,this._invSize,e,s)}))()}}const HT=e=>Ri(new $T(ry(e))),WT=new Jx,jT=new e(0,0,0),qT=new e,XT=new t,KT=new t(1,0),YT=new t(0,1);class QT extends Or{static get type(){return"BloomNode"}constructor(e,t=1,s=0,r=0){super(),this.inputNode=e,this.strength=bn(t),this.radius=bn(s),this.threshold=bn(r),this.smoothWidth=bn(.01),this._renderTargetsHorizontal=[],this._renderTargetsVertical=[],this._nMips=5,this._renderTargetBright=new Re(1,1,{type:Me}),this._renderTargetBright.texture.name="UnrealBloomPass.bright",this._renderTargetBright.texture.generateMipmaps=!1;for(let e=0;e<this._nMips;e++){const t=new Re(1,1,{type:Me});t.texture.name="UnrealBloomPass.h"+e,t.texture.generateMipmaps=!1,this._renderTargetsHorizontal.push(t);const s=new Re(1,1,{type:Me});s.texture.name="UnrealBloomPass.v"+e,s.texture.generateMipmaps=!1,this._renderTargetsVertical.push(s)}this._compositeMaterial=null,this._highPassFilterMaterial=null,this._separableBlurMaterials=[],this._textureNodeBright=ju(this._renderTargetBright.texture),this._textureNodeBlur0=ju(this._renderTargetsVertical[0].texture),this._textureNodeBlur1=ju(this._renderTargetsVertical[1].texture),this._textureNodeBlur2=ju(this._renderTargetsVertical[2].texture),this._textureNodeBlur3=ju(this._renderTargetsVertical[3].texture),this._textureNodeBlur4=ju(this._renderTargetsVertical[4].texture),this._textureOutput=rT(this,this._renderTargetsHorizontal[0].texture),this.updateBeforeType=wr.FRAME}getTextureNode(){return this._textureOutput}setSize(e,t){let s=Math.round(e/2),r=Math.round(t/2);this._renderTargetBright.setSize(s,r);for(let e=0;e<this._nMips;e++)this._renderTargetsHorizontal[e].setSize(s,r),this._renderTargetsVertical[e].setSize(s,r),this._separableBlurMaterials[e].invSize.value.set(1/s,1/r),s=Math.round(s/2),r=Math.round(r/2)}updateBefore(e){const{renderer:t}=e,s=t.getDrawingBufferSize(XT);this.setSize(s.width,s.height);const r=t.getRenderTarget(),i=t.getMRT();t.getClearColor(qT);const n=t.getClearAlpha();this.setSize(s.width,s.height),t.setMRT(null),t.setClearColor(jT,0),t.setRenderTarget(this._renderTargetBright),WT.material=this._highPassFilterMaterial,WT.render(t);let a=this._renderTargetBright;for(let e=0;e<this._nMips;e++)WT.material=this._separableBlurMaterials[e],this._separableBlurMaterials[e].colorTexture.value=a.texture,this._separableBlurMaterials[e].direction.value=KT,t.setRenderTarget(this._renderTargetsHorizontal[e]),t.clear(),WT.render(t),this._separableBlurMaterials[e].colorTexture.value=this._renderTargetsHorizontal[e].texture,this._separableBlurMaterials[e].direction.value=YT,t.setRenderTarget(this._renderTargetsVertical[e]),t.clear(),WT.render(t),a=this._renderTargetsVertical[e];t.setRenderTarget(this._renderTargetsHorizontal[0]),t.clear(),WT.material=this._compositeMaterial,WT.render(t),t.setRenderTarget(r),t.setMRT(i),t.setClearColor(qT,n)}setup(e){const t=Bi((()=>{const e=this.inputNode,t=bT(e.rgb),s=Do(this.threshold,this.threshold.add(this.smoothWidth),t);return Po(Yi(0),e,s)}));this._highPassFilterMaterial=this._highPassFilterMaterial||new Oh,this._highPassFilterMaterial.fragmentNode=t().context(e.getSharedContext()),this._highPassFilterMaterial.name="Bloom_highPass",this._highPassFilterMaterial.needsUpdate=!0;const r=[3,5,7,9,11];for(let t=0;t<this._nMips;t++)this._separableBlurMaterials.push(this._getSeperableBlurMaterial(e,r[t]));const i=td([1,.8,.6,.4,.2]),n=td([new s(1,1,1),new s(1,1,1),new s(1,1,1),new s(1,1,1),new s(1,1,1)]),a=Bi((([e,t])=>{const s=Di(1.2).sub(e);return Po(e,s,t)})).setLayout({name:"lerpBloomFactor",type:"float",inputs:[{name:"factor",type:"float"},{name:"radius",type:"float"}]}),o=Bi((()=>{const e=a(i.element(0),this.radius).mul(Yi(n.element(0),1)).mul(this._textureNodeBlur0),t=a(i.element(1),this.radius).mul(Yi(n.element(1),1)).mul(this._textureNodeBlur1),s=a(i.element(2),this.radius).mul(Yi(n.element(2),1)).mul(this._textureNodeBlur2),r=a(i.element(3),this.radius).mul(Yi(n.element(3),1)).mul(this._textureNodeBlur3),o=a(i.element(4),this.radius).mul(Yi(n.element(4),1)).mul(this._textureNodeBlur4);return e.add(t).add(s).add(r).add(o).mul(this.strength)}));return this._compositeMaterial=this._compositeMaterial||new Oh,this._compositeMaterial.fragmentNode=o().context(e.getSharedContext()),this._compositeMaterial.name="Bloom_comp",this._compositeMaterial.needsUpdate=!0,this._textureOutput}dispose(){for(let e=0;e<this._renderTargetsHorizontal.length;e++)this._renderTargetsHorizontal[e].dispose();for(let e=0;e<this._renderTargetsVertical.length;e++)this._renderTargetsVertical[e].dispose();this._renderTargetBright.dispose()}_getSeperableBlurMaterial(e,s){const r=[];for(let e=0;e<s;e++)r.push(.39894*Math.exp(-.5*e*e/(s*s))/s);const i=ju(),n=td(r),a=bn(new t),o=bn(new t(.5,.5)),u=Gu(),l=e=>i.uv(e),d=Bi((()=>{const e=n.element(0).toVar(),t=l(u).rgb.mul(e).toVar();return $c({start:Oi(1),end:Oi(s),type:"int",condition:"<"},(({i:s})=>{const r=Di(s),i=n.element(s),d=o.mul(a).mul(r),c=l(u.add(d)).rgb,h=l(u.sub(d)).rgb;t.addAssign(ra(c,h).mul(i)),e.addAssign(Di(2).mul(i))})),Yi(t.div(e),1)})),c=new Oh;return c.fragmentNode=d().context(e.getSharedContext()),c.name="Bloom_seperable",c.needsUpdate=!0,c.colorTexture=i,c.direction=o,c.invSize=a,c}}const ZT=(e,t,s,r)=>Ri(new QT(Ri(e),t,s,r));class JT extends Or{static get type(){return"TransitionNode"}constructor(e,t,s,r,i,n){super(),this.textureNodeA=e,this.textureNodeB=t,this.mixTextureNode=s,this.mixRatioNode=r,this.thresholdNode=i,this.useTextureNode=n}setup(){const{textureNodeA:e,textureNodeB:t,mixTextureNode:s,mixRatioNode:r,thresholdNode:i,useTextureNode:n}=this,a=e=>{const t=e.uvNode||Gu();return e.uv(t)},o=Bi((()=>{const o=a(e),u=a(t),l=Yi().toVar();return Ii(n.equal(Oi(1)),(()=>{const e=a(s),t=r.mul(i.mul(2).add(1)).sub(i),n=Io(ia(e.r,t).mul(Di(1).div(i)),0,1);l.assign(Po(o,u,n))})).Else((()=>{l.assign(Po(u,o,r))})),l}));return o()}}const t_=(e,t,s,r=0,i=.1,n=0)=>Ri(new JT(ry(e),ry(t),ry(s),Ri(r),Ri(i),Ri(n)));class s_ extends Or{static get type(){return"PixelationNode"}constructor(e,t,s,i,n,a){super(),this.textureNode=e,this.depthNode=t,this.normalNode=s,this.pixelSize=i,this.normalEdgeStrength=n,this.depthEdgeStrength=a,this._resolution=bn(new r),this.updateBeforeType=wr.RENDER}updateBefore(){const e=this.textureNode.value,t=e.image.width,s=e.image.height;this._resolution.value.set(t,s,1/t,1/s)}setup(){const{textureNode:e,depthNode:t,normalNode:s}=this,r=e.uvNode||Gu(),i=t.uvNode||Gu(),n=s.uvNode||Gu(),a=(e,s)=>t.uv(i.add(ki(e,s).mul(this._resolution.zw))).r,o=(e,t)=>s.uv(n.add(ki(e,t).mul(this._resolution.zw))).rgb.normalize(),u=(e,t,s,r)=>{const i=a(e,t).sub(s),n=o(e,t),u=ji(1,1,1),l=Ao(r.sub(n),u),d=Io(Do(-.01,.01,l),0,1),c=Io(so(i.mul(.25).add(.0025)),0,1);return Di(1).sub(Ao(r,n)).mul(c).mul(d)},l=Bi((()=>{const t=e.uv(r),s=_n("float","depth"),i=_n("vec3","normal");Ii(this.depthEdgeStrength.greaterThan(0).or(this.normalEdgeStrength.greaterThan(0)),(()=>{s.assign(a(0,0)),i.assign(o(0,0))}));const n=_n("float","dei");Ii(this.depthEdgeStrength.greaterThan(0),(()=>{n.assign((e=>{const t=_n("float","diff");return t.addAssign(Io(a(1,0).sub(e))),t.addAssign(Io(a(-1,0).sub(e))),t.addAssign(Io(a(0,1).sub(e))),t.addAssign(Io(a(0,-1).sub(e))),Ha(Do(.01,.02,t).mul(2)).div(2)})(s))}));const l=_n("float","nei");Ii(this.normalEdgeStrength.greaterThan(0),(()=>{l.assign(((e,t)=>{const s=_n("float","indicator");return s.addAssign(u(0,-1,e,t)),s.addAssign(u(0,1,e,t)),s.addAssign(u(-1,0,e,t)),s.addAssign(u(1,0,e,t)),_o(.1,s)})(s,i))}));const d=n.greaterThan(0).select(Di(1).sub(n.mul(this.depthEdgeStrength)),l.mul(this.normalEdgeStrength).add(1));return t.mul(d)}));return l()}}class r_ extends tT{static get type(){return"PixelationPassNode"}constructor(e,t,s=6,r=.3,i=.4){super("color",e,t,{minFilter:ze,magFilter:ze}),this.pixelSize=s,this.normalEdgeStrength=r,this.depthEdgeStrength=i,this.isPixelationPassNode=!0,this._mrt=px({output:zn,normal:Ll})}setSize(e,t){const s=this.pixelSize.value?this.pixelSize.value:this.pixelSize,r=Math.floor(e/s),i=Math.floor(t/s);super.setSize(r,i)}setup(){return((e,t,s,r=6,i=.3,n=.4)=>Ri(new s_(ry(e),ry(t),ry(s),Ri(r),Ri(i),Ri(n))))(super.getTextureNode("output"),super.getTextureNode("depth"),super.getTextureNode("normal"),this.pixelSize,this.normalEdgeStrength,this.depthEdgeStrength)}}const i_=(e,t,s,r,i)=>Ri(new r_(e,t,s,r,i)),n_=new t;class a_ extends tT{static get type(){return"SSAAPassNode"}constructor(t,s){super(tT.COLOR,t,s),this.isSSAAPassNode=!0,this.sampleLevel=4,this.unbiased=!0,this.clearColor=new e(0),this.clearAlpha=0,this._currentClearColor=new e,this.sampleWeight=bn(1),this.sampleRenderTarget=null,this._quadMesh=new Jx}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r}=this;this._pixelRatio=t.getPixelRatio();const i=t.getSize(n_);this.setSize(i.width,i.height),this.sampleRenderTarget.setSize(this.renderTarget.width,this.renderTarget.height),t.getClearColor(this._currentClearColor);const n=t.getClearAlpha(),a=t.getRenderTarget(),o=t.getMRT(),u=t.autoClear;this._cameraNear.value=r.near,this._cameraFar.value=r.far,t.setMRT(this.getMRT()),t.autoClear=!1;const l=o_[Math.max(0,Math.min(this.sampleLevel,5))],d=1/l.length,c={fullWidth:this.renderTarget.width,fullHeight:this.renderTarget.height,offsetX:0,offsetY:0,width:this.renderTarget.width,height:this.renderTarget.height},h=Object.assign({},r.view);h.enabled&&Object.assign(c,h);for(let e=0;e<l.length;e++){const i=l[e];if(r.setViewOffset&&r.setViewOffset(c.fullWidth,c.fullHeight,c.offsetX+.0625*i[0],c.offsetY+.0625*i[1],c.width,c.height),this.sampleWeight.value=d,this.unbiased){const t=(e+.5)/l.length-.5;this.sampleWeight.value+=.03125*t}t.setClearColor(this.clearColor,this.clearAlpha),t.setRenderTarget(this.sampleRenderTarget),t.clear(),t.render(s,r),t.setRenderTarget(this.renderTarget),0===e&&(t.setClearColor(0,0),t.clear()),this._quadMesh.render(t)}t.copyTextureToTexture(this.sampleRenderTarget.depthTexture,this.renderTarget.depthTexture),r.setViewOffset&&h.enabled?r.setViewOffset(h.fullWidth,h.fullHeight,h.offsetX,h.offsetY,h.width,h.height):r.clearViewOffset&&r.clearViewOffset(),t.setRenderTarget(a),t.setMRT(o),t.autoClear=u,t.setClearColor(this._currentClearColor,n)}setup(e){let t;null===this.sampleRenderTarget&&(this.sampleRenderTarget=this.renderTarget.clone());const s=this.getMRT();if(null!==s){const e={};for(const t in s.outputNodes){const s=lx(this.sampleRenderTarget.textures,t);s>=0&&(e[t]=ju(this.sampleRenderTarget.textures[s]).mul(this.sampleWeight))}t=px(e)}else t=ju(this.sampleRenderTarget.texture).mul(this.sampleWeight);return this._quadMesh.material=new Oh,this._quadMesh.material.fragmentNode=t,this._quadMesh.material.transparent=!0,this._quadMesh.material.depthTest=!1,this._quadMesh.material.depthWrite=!1,this._quadMesh.material.premultipliedAlpha=!0,this._quadMesh.material.blending=ke,this._quadMesh.material.normals=!1,this._quadMesh.material.name="SSAA",super.setup(e)}dispose(){super.dispose(),null!==this.sampleRenderTarget&&this.sampleRenderTarget.dispose()}}const o_=[[[0,0]],[[4,4],[-4,-4]],[[-2,-6],[6,-2],[-6,2],[2,6]],[[1,-3],[-1,3],[5,1],[-3,-5],[-5,5],[-7,-1],[3,7],[7,-7]],[[1,1],[-1,-3],[-3,2],[4,-1],[-5,-2],[2,5],[5,3],[3,-5],[-2,6],[0,-7],[-4,-6],[-6,4],[-8,0],[7,-4],[6,7],[-7,-8]],[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]]],u_=(e,t)=>Ri(new a_(e,t)),l_=new t;class h_ extends tT{static get type(){return"StereoPassNode"}constructor(e,t){super(tT.COLOR,e,t),this.isStereoPassNode=!0,this.stereo=new $e,this.stereo.aspect=.5}updateBefore(e){const{renderer:t}=e,{scene:s,camera:r,stereo:i,renderTarget:n}=this;this._pixelRatio=t.getPixelRatio(),i.cameraL.coordinateSystem=t.coordinateSystem,i.cameraR.coordinateSystem=t.coordinateSystem,i.update(r);const a=t.getSize(l_);this.setSize(a.width,a.height);const o=t.autoClear;t.autoClear=!1;const u=t.getRenderTarget(),l=t.getMRT();this._cameraNear.value=r.near,this._cameraFar.value=r.far;for(const e in this._previousTextures)this.toggleTexture(e);t.setRenderTarget(n),t.setMRT(this._mrt),t.clear(),n.scissorTest=!0,n.scissor.set(0,0,n.width/2,n.height),n.viewport.set(0,0,n.width/2,n.height),t.render(s,i.cameraL),n.scissor.set(n.width/2,0,n.width/2,n.height),n.viewport.set(n.width/2,0,n.width/2,n.height),t.render(s,i.cameraR),n.scissorTest=!1,t.setRenderTarget(u),t.setMRT(l),t.autoClear=o}}const p_=(e,t)=>Ri(new h_(e,t)),g_=new t,m_=new Jx;class f_ extends tT{static get type(){return"StereoCompositePassNode"}constructor(e,t){super(tT.COLOR,e,t),this.isStereoCompositePassNode=!0,this.stereo=new $e;const s={minFilter:K,magFilter:ze,type:Me};this._renderTargetL=new Re(1,1,s),this._renderTargetR=new Re(1,1,s),this._mapLeft=ju(this._renderTargetL.texture),this._mapRight=ju(this._renderTargetR.texture),this._material=null}updateStereoCamera(e){this.stereo.cameraL.coordinateSystem=e,this.stereo.cameraR.coordinateSystem=e,this.stereo.update(this.camera)}setSize(e,t){super.setSize(e,t),this._renderTargetL.setSize(this.renderTarget.width,this.renderTarget.height),this._renderTargetR.setSize(this.renderTarget.width,this.renderTarget.height)}updateBefore(e){const{renderer:t}=e,{scene:s,stereo:r,renderTarget:i}=this;this._pixelRatio=t.getPixelRatio(),this.updateStereoCamera(t.coordinateSystem);const n=t.getSize(g_);this.setSize(n.width,n.height);const a=t.getRenderTarget();t.setRenderTarget(this._renderTargetL),t.render(s,r.cameraL),t.setRenderTarget(this._renderTargetR),t.render(s,r.cameraR),t.setRenderTarget(i),m_.material=this._material,m_.render(t),t.setRenderTarget(a)}dispose(){super.dispose(),this._renderTargetL.dispose(),this._renderTargetR.dispose(),null!==this._material&&this._material.dispose()}}class x_ extends f_{static get type(){return"AnaglyphPassNode"}constructor(e,t){super(e,t),this.isAnaglyphPassNode=!0,this._colorMatrixLeft=bn((new i).fromArray([.4561,-.0400822,-.0152161,.500484,-.0378246,-.0205971,.176381,-.0157589,-.00546856])),this._colorMatrixRight=bn((new i).fromArray([-.0434706,.378476,-.0721527,-.0879388,.73364,-.112961,-.00155529,-.0184503,1.2264]))}setup(e){const t=Gu(),s=Bi((()=>{const e=this._mapLeft.uv(t),s=this._mapRight.uv(t),r=Io(this._colorMatrixLeft.mul(e.rgb).add(this._colorMatrixRight.mul(s.rgb)));return Yi(r.rgb,bo(e.a,s.a))})),r=this._material||(this._material=new Oh);return r.fragmentNode=s().context(e.getSharedContext()),r.name="Anaglyph",r.needsUpdate=!0,super.setup(e)}}const y_=(e,t)=>Ri(new x_(e,t));class b_ extends f_{static get type(){return"ParallaxBarrierPassNode"}constructor(e,t){super(e,t),this.isParallaxBarrierPassNode=!0}setup(e){const t=Gu(),s=Bi((()=>{const e=Yi().toVar();return Ii(To(ph.y,2).greaterThan(1),(()=>{e.assign(this._mapLeft.uv(t))})).Else((()=>{e.assign(this._mapRight.uv(t))})),e})),r=this._material||(this._material=new Oh);return r.fragmentNode=s().context(e.getSharedContext()),r.needsUpdate=!0,super.setup(e)}}const T_=(e,t)=>Ri(new b_(e,t));class __ extends Lr{static get type(){return"ScriptableValueNode"}constructor(e=null){super(),this._value=e,this._cache=null,this.inputType=null,this.outpuType=null,this.events=new a,this.isScriptableValueNode=!0}get isScriptableOutputNode(){return null!==this.outputType}set value(e){this._value!==e&&(this._cache&&"URL"===this.inputType&&this.value.value instanceof ArrayBuffer&&(URL.revokeObjectURL(this._cache),this._cache=null),this._value=e,this.events.dispatchEvent({type:"change"}),this.refresh())}get value(){return this._value}refresh(){this.events.dispatchEvent({type:"refresh"})}getValue(){const e=this.value;if(e&&null===this._cache&&"URL"===this.inputType&&e.value instanceof ArrayBuffer)this._cache=URL.createObjectURL(new Blob([e.value]));else if(e&&null!==e.value&&void 0!==e.value&&(("URL"===this.inputType||"String"===this.inputType)&&"string"==typeof e.value||"Number"===this.inputType&&"number"==typeof e.value||"Vector2"===this.inputType&&e.value.isVector2||"Vector3"===this.inputType&&e.value.isVector3||"Vector4"===this.inputType&&e.value.isVector4||"Color"===this.inputType&&e.value.isColor||"Matrix3"===this.inputType&&e.value.isMatrix3||"Matrix4"===this.inputType&&e.value.isMatrix4))return e.value;return this._cache||e}getNodeType(e){return this.value&&this.value.isNode?this.value.getNodeType(e):"float"}setup(){return this.value&&this.value.isNode?this.value:Di()}serialize(e){super.serialize(e),null!==this.value?"ArrayBuffer"===this.inputType?e.value=Ar(this.value):e.value=this.value?this.value.toJSON(e.meta).uuid:null:e.value=null,e.inputType=this.inputType,e.outputType=this.outputType}deserialize(e){super.deserialize(e);let t=null;null!==e.value&&(t="ArrayBuffer"===e.inputType?Rr(e.value):"Texture"===e.inputType?e.meta.textures[e.value]:e.meta.nodes[e.value]||null),this.value=t,this.inputType=e.inputType,this.outputType=e.outputType}}const N_=wi(__);class v_ extends Map{get(e,t=null,...s){if(this.has(e))return super.get(e);if(null!==t){const r=t(...s);return this.set(e,r),r}}}class S_{constructor(e){this.scriptableNode=e}get parameters(){return this.scriptableNode.parameters}get layout(){return this.scriptableNode.getLayout()}getInputLayout(e){return this.scriptableNode.getInputLayout(e)}get(e){const t=this.parameters[e];return t?t.getValue():null}}const A_=new v_;class R_ extends Lr{static get type(){return"ScriptableNode"}constructor(e=null,t={}){super(),this.codeNode=e,this.parameters=t,this._local=new v_,this._output=N_(),this._outputs={},this._source=this.source,this._method=null,this._object=null,this._value=null,this._needsOutputUpdate=!0,this.onRefresh=this.onRefresh.bind(this),this.isScriptableNode=!0}get source(){return this.codeNode?this.codeNode.code:""}setLocal(e,t){return this._local.set(e,t)}getLocal(e){return this._local.get(e)}onRefresh(){this._refresh()}getInputLayout(e){for(const t of this.getLayout())if(t.inputType&&(t.id===e||t.name===e))return t}getOutputLayout(e){for(const t of this.getLayout())if(t.outputType&&(t.id===e||t.name===e))return t}setOutput(e,t){const s=this._outputs;return void 0===s[e]?s[e]=N_(t):s[e].value=t,this}getOutput(e){return this._outputs[e]}getParameter(e){return this.parameters[e]}setParameter(e,t){const s=this.parameters;return t&&t.isScriptableNode?(this.deleteParameter(e),s[e]=t,s[e].getDefaultOutput().events.addEventListener("refresh",this.onRefresh)):t&&t.isScriptableValueNode?(this.deleteParameter(e),s[e]=t,s[e].events.addEventListener("refresh",this.onRefresh)):void 0===s[e]?(s[e]=N_(t),s[e].events.addEventListener("refresh",this.onRefresh)):s[e].value=t,this}getValue(){return this.getDefaultOutput().getValue()}deleteParameter(e){let t=this.parameters[e];return t&&(t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.removeEventListener("refresh",this.onRefresh)),this}clearParameters(){for(const e of Object.keys(this.parameters))this.deleteParameter(e);return this.needsUpdate=!0,this}call(e,...t){const s=this.getObject()[e];if("function"==typeof s)return s(...t)}async callAsync(e,...t){const s=this.getObject()[e];if("function"==typeof s)return"AsyncFunction"===s.constructor.name?await s(...t):s(...t)}getNodeType(e){return this.getDefaultOutputNode().getNodeType(e)}refresh(e=null){null!==e?this.getOutput(e).refresh():this._refresh()}getObject(){if(this.needsUpdate&&this.dispose(),null!==this._object)return this._object;const e=new S_(this),t=A_.get("THREE"),s=A_.get("TSL"),r=this.getMethod(this.codeNode),i=[e,this._local,A_,()=>this.refresh(),(e,t)=>this.setOutput(e,t),t,s];this._object=r(...i);const n=this._object.layout;if(n&&(!1===n.cache&&this._local.clear(),this._output.outputType=n.outputType||null,Array.isArray(n.elements)))for(const e of n.elements){const t=e.id||e.name;e.inputType&&(void 0===this.getParameter(t)&&this.setParameter(t,null),this.getParameter(t).inputType=e.inputType),e.outputType&&(void 0===this.getOutput(t)&&this.setOutput(t,null),this.getOutput(t).outputType=e.outputType)}return this._object}deserialize(e){super.deserialize(e);for(const e in this.parameters){let t=this.parameters[e];t.isScriptableNode&&(t=t.getDefaultOutput()),t.events.addEventListener("refresh",this.onRefresh)}}getLayout(){return this.getObject().layout}getDefaultOutputNode(){const e=this.getDefaultOutput().value;return e&&e.isNode?e:Di()}getDefaultOutput(){return this._exec()._output}getMethod(){if(this.needsUpdate&&this.dispose(),null!==this._method)return this._method;const e=["layout","init","main","dispose"].join(", "),t="\nreturn { ...output, "+e+" };",s="var "+e+"; var output = {};\n"+this.codeNode.code+t;return this._method=new Function(...["parameters","local","global","refresh","setOutput","THREE","TSL"],s),this._method}dispose(){null!==this._method&&(this._object&&"function"==typeof this._object.dispose&&this._object.dispose(),this._method=null,this._object=null,this._source=null,this._value=null,this._needsOutputUpdate=!0,this._output.value=null,this._outputs={})}setup(){return this.getDefaultOutputNode()}getCacheKey(e){const t=[this.source,this.getDefaultOutputNode().getCacheKey(e)];for(const s in this.parameters)t.push(this.parameters[s].getCacheKey(e));return t.join(",")}set needsUpdate(e){!0===e&&this.dispose()}get needsUpdate(){return this.source!==this._source}_exec(){return null===this.codeNode||(!0===this._needsOutputUpdate&&(this._value=this.call("main"),this._needsOutputUpdate=!1),this._output.value=this._value),this}_refresh(){this.needsUpdate=!0,this._exec(),this._output.refresh()}}const C_=wi(R_);class E_ extends Lr{static get type(){return"FogNode"}constructor(e,t){super("float"),this.isFogNode=!0,this.colorNode=e,this.factorNode=t}getViewZNode(e){let t;const s=e.context.getViewZ;return void 0!==s&&(t=s(this)),(t||El.z).negate()}setup(){return this.factorNode}}const w_=wi(E_);class M_ extends E_{static get type(){return"FogRangeNode"}constructor(e,t,s){super(e),this.isFogRangeNode=!0,this.nearNode=t,this.farNode=s}setup(e){const t=this.getViewZNode(e);return Do(this.nearNode,this.farNode,t)}}const B_=wi(M_);class U_ extends E_{static get type(){return"FogExp2Node"}constructor(e,t){super(e),this.isFogExp2Node=!0,this.densityNode=t}setup(e){const t=this.getViewZNode(e),s=this.densityNode;return s.mul(s,t,t).negate().exp().oneMinus()}}const F_=wi(U_);let P_=null,I_=null;class L_ extends Lr{static get type(){return"RangeNode"}constructor(e=Di(),t=Di()){super(),this.minNode=e,this.maxNode=t}getVectorLength(e){const t=e.getTypeLength(vr(this.minNode.value)),s=e.getTypeLength(vr(this.maxNode.value));return t>s?t:s}getNodeType(e){return e.object.count>1?e.getTypeFromLength(this.getVectorLength(e)):"float"}setup(e){const t=e.object;let s=null;if(t.count>1){const i=this.minNode.value,n=this.maxNode.value,a=e.getTypeLength(vr(i)),u=e.getTypeLength(vr(n));P_=P_||new r,I_=I_||new r,P_.setScalar(0),I_.setScalar(0),1===a?P_.setScalar(i):i.isColor?P_.set(i.r,i.g,i.b):P_.set(i.x,i.y,i.z||0,i.w||0),1===u?I_.setScalar(n):n.isColor?I_.set(n.r,n.g,n.b):I_.set(n.x,n.y,n.z||0,n.w||0);const l=4,d=l*t.count,c=new Float32Array(d);for(let e=0;e<d;e++){const t=e%l,s=P_.getComponent(t),r=I_.getComponent(t);c[e]=o.lerp(s,r,Math.random())}const h=this.getNodeType(e);if(t.count<=4096)s=Ql(c,"vec4",t.count).element(Bc).convert(h);else{const t=new B(c,4);e.geometry.setAttribute("__range"+this.id,t),s=Tu(t).convert(h)}}else s=Di(0);return s}}const V_=wi(L_),D_=Bi((({depthTexture:e,shadowCoord:t})=>ju(e,t.xy).compare(t.z))),O_=Bi((({depthTexture:e,shadowCoord:t,shadow:s})=>{const r=(t,s)=>ju(e,t).compare(s),i=nd("mapSize","vec2",s).setGroup(fn),n=nd("radius","float",s).setGroup(fn),a=ki(1).div(i),o=a.x.negate().mul(n),u=a.y.negate().mul(n),l=a.x.mul(n),d=a.y.mul(n),c=o.div(2),h=u.div(2),p=l.div(2),g=d.div(2);return ra(r(t.xy.add(ki(o,u)),t.z),r(t.xy.add(ki(0,u)),t.z),r(t.xy.add(ki(l,u)),t.z),r(t.xy.add(ki(c,h)),t.z),r(t.xy.add(ki(0,h)),t.z),r(t.xy.add(ki(p,h)),t.z),r(t.xy.add(ki(o,0)),t.z),r(t.xy.add(ki(c,0)),t.z),r(t.xy,t.z),r(t.xy.add(ki(p,0)),t.z),r(t.xy.add(ki(l,0)),t.z),r(t.xy.add(ki(c,g)),t.z),r(t.xy.add(ki(0,g)),t.z),r(t.xy.add(ki(p,g)),t.z),r(t.xy.add(ki(o,d)),t.z),r(t.xy.add(ki(0,d)),t.z),r(t.xy.add(ki(l,d)),t.z)).mul(1/17)})),G_=Bi((({depthTexture:e,shadowCoord:t,shadow:s})=>{const r=(t,s)=>ju(e,t).compare(s),i=nd("mapSize","vec2",s).setGroup(fn),n=ki(1).div(i),a=n.x,o=n.y,u=t.xy,l=qa(u.mul(i).add(.5));return u.subAssign(l.mul(n)),ra(r(u,t.z),r(u.add(ki(a,0)),t.z),r(u.add(ki(0,o)),t.z),r(u.add(n),t.z),Po(r(u.add(ki(a.negate(),0)),t.z),r(u.add(ki(a.mul(2),0)),t.z),l.x),Po(r(u.add(ki(a.negate(),o)),t.z),r(u.add(ki(a.mul(2),o)),t.z),l.x),Po(r(u.add(ki(0,o.negate())),t.z),r(u.add(ki(0,o.mul(2))),t.z),l.y),Po(r(u.add(ki(a,o.negate())),t.z),r(u.add(ki(a,o.mul(2))),t.z),l.y),Po(Po(r(u.add(ki(a.negate(),o.negate())),t.z),r(u.add(ki(a.mul(2),o.negate())),t.z),l.x),Po(r(u.add(ki(a.negate(),o.mul(2))),t.z),r(u.add(ki(a.mul(2),o.mul(2))),t.z),l.x),l.y)).mul(1/9)})),z_=Bi((({depthTexture:e,shadowCoord:t})=>{const s=Di(1).toVar(),r=ju(e).uv(t.xy).rg,i=_o(t.z,r.x);return Ii(i.notEqual(Di(1)),(()=>{const e=t.z.sub(r.x),n=bo(0,r.y.mul(r.y));let a=n.div(n.add(e.mul(e)));a=Io(ia(a,.3).div(.95-.3)),s.assign(Io(bo(i,a)))})),s})),k_=Bi((({samples:e,radius:t,size:s,shadowPass:r})=>{const i=Di(0).toVar(),n=Di(0).toVar(),a=e.lessThanEqual(Di(1)).select(Di(0),Di(2).div(e.sub(1))),o=e.lessThanEqual(Di(1)).select(Di(0),Di(-1));$c({start:Oi(0),end:Oi(e),type:"int",condition:"<"},(({i:e})=>{const u=o.add(Di(e).mul(a)),l=r.uv(ra(ph.xy,ki(0,u).mul(t)).div(s)).x;i.addAssign(l),n.addAssign(l.mul(l))})),i.divAssign(e),n.divAssign(e);const u=ka(n.sub(i.mul(i)));return ki(i,u)})),$_=Bi((({samples:e,radius:t,size:s,shadowPass:r})=>{const i=Di(0).toVar(),n=Di(0).toVar(),a=e.lessThanEqual(Di(1)).select(Di(0),Di(2).div(e.sub(1))),o=e.lessThanEqual(Di(1)).select(Di(0),Di(-1));$c({start:Oi(0),end:Oi(e),type:"int",condition:"<"},(({i:e})=>{const u=o.add(Di(e).mul(a)),l=r.uv(ra(ph.xy,ki(u,0).mul(t)).div(s));i.addAssign(l.x),n.addAssign(ra(l.y.mul(l.y),l.x.mul(l.x)))})),i.divAssign(e),n.divAssign(e);const u=ka(n.sub(i.mul(i)));return ki(i,u)})),H_=[D_,O_,G_,z_];let W_=null;const j_=new Jx;class q_ extends sh{static get type(){return"AnalyticLightNode"}constructor(t=null){super(),this.updateType=wr.FRAME,this.light=t,this.color=new e,this.colorNode=bn(this.color).setGroup(fn),this.baseColorNode=null,this.shadowMap=null,this.shadowNode=null,this.shadowColorNode=null,this.vsmShadowMapVertical=null,this.vsmShadowMapHorizontal=null,this.vsmMaterialVertical=null,this.vsmMaterialHorizontal=null,this.isAnalyticLightNode=!0}getCacheKey(){return super.getCacheKey()+"-"+this.light.id+"-"+(this.light.castShadow?"1":"0")}getHash(){return this.light.uuid}setupShadow(e){const{object:t,renderer:s}=e;let r=this.shadowColorNode;if(null===r){null===W_&&(W_=new Oh,W_.fragmentNode=Yi(0,0,0,1),W_.isShadowNodeMaterial=!0,W_.name="ShadowMaterial");const i=s.shadowMap.type,n=this.light.shadow,a=new V;a.compareFunction=He;const o=e.createRenderTarget(n.mapSize.width,n.mapSize.height);if(o.depthTexture=a,n.camera.updateProjectionMatrix(),i===We){a.compareFunction=null,this.vsmShadowMapVertical=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:je,type:Me}),this.vsmShadowMapHorizontal=e.createRenderTarget(n.mapSize.width,n.mapSize.height,{format:je,type:Me});const t=ju(a),s=ju(this.vsmShadowMapVertical.texture),r=nd("blurSamples","float",n).setGroup(fn),i=nd("radius","float",n).setGroup(fn),o=nd("mapSize","vec2",n).setGroup(fn);let u=this.vsmMaterialVertical||(this.vsmMaterialVertical=new Oh);u.fragmentNode=k_({samples:r,radius:i,size:o,shadowPass:t}).context(e.getSharedContext()),u.name="VSMVertical",u=this.vsmMaterialHorizontal||(this.vsmMaterialHorizontal=new Oh),u.fragmentNode=$_({samples:r,radius:i,size:o,shadowPass:s}).context(e.getSharedContext()),u.name="VSMHorizontal"}const u=nd("intensity","float",n).setGroup(fn),l=nd("bias","float",n).setGroup(fn),d=nd("normalBias","float",n).setGroup(fn),c=t.material.shadowPositionNode||Rl;let h=bn(n.matrix).setGroup(fn).mul(c.add(Vl.mul(d)));h=h.xyz.div(h.w);let p=h.z.add(l);s.coordinateSystem===R&&(p=p.mul(2).sub(1)),h=ji(h.x,h.y.oneMinus(),p);const g=h.x.greaterThanEqual(0).and(h.x.lessThanEqual(1)).and(h.y.greaterThanEqual(0)).and(h.y.lessThanEqual(1)).and(h.z.lessThanEqual(1)),m=n.filterNode||H_[s.shadowMap.type]||null;if(null===m)throw new Error("THREE.WebGPURenderer: Shadow map type not supported yet.");const f=ju(o.texture,h),x=g.select(m({depthTexture:i===We?this.vsmShadowMapHorizontal.texture:a,shadowCoord:h,shadow:n}),Di(1));this.shadowMap=o,this.light.shadow.map=o,this.shadowNode=x,this.shadowColorNode=r=this.colorNode.mul(Po(1,x.rgb.mix(f,1),u.mul(f.a))),this.baseColorNode=this.colorNode}this.colorNode=r,this.updateBeforeType=wr.RENDER}setup(e){this.colorNode=this.baseColorNode||this.colorNode,this.light.castShadow?e.object.receiveShadow&&this.setupShadow(e):null!==this.shadowNode&&this.disposeShadow()}updateShadow(e){const{shadowMap:t,light:s}=this,{renderer:r,scene:i,camera:n}=e,a=r.shadowMap.type,o=t.depthTexture.version;this._depthVersionCached=o;const u=i.overrideMaterial;i.overrideMaterial=W_,t.setSize(s.shadow.mapSize.width,s.shadow.mapSize.height),s.shadow.updateMatrices(s),s.shadow.camera.layers.mask=n.layers.mask;const l=r.getRenderTarget(),d=r.getRenderObjectFunction();r.setRenderObjectFunction(((e,...t)=>{(!0===e.castShadow||e.receiveShadow&&a===We)&&r.renderObject(e,...t)})),r.setRenderTarget(t),r.render(i,s.shadow.camera),r.setRenderObjectFunction(d),!0!==s.isPointLight&&a===We&&this.vsmPass(e,s),r.setRenderTarget(l),i.overrideMaterial=u}vsmPass(e,t){const{renderer:s}=e;this.vsmShadowMapVertical.setSize(t.shadow.mapSize.width,t.shadow.mapSize.height),this.vsmShadowMapHorizontal.setSize(t.shadow.mapSize.width,t.shadow.mapSize.height),s.setRenderTarget(this.vsmShadowMapVertical),j_.material=this.vsmMaterialVertical,j_.render(s),s.setRenderTarget(this.vsmShadowMapHorizontal),j_.material=this.vsmMaterialHorizontal,j_.render(s)}disposeShadow(){this.shadowMap.dispose(),this.shadowMap=null,null!==this.vsmShadowMapVertical&&(this.vsmShadowMapVertical.dispose(),this.vsmShadowMapVertical=null,this.vsmMaterialVertical.dispose(),this.vsmMaterialVertical=null),null!==this.vsmShadowMapHorizontal&&(this.vsmShadowMapHorizontal.dispose(),this.vsmShadowMapHorizontal=null,this.vsmMaterialHorizontal.dispose(),this.vsmMaterialHorizontal=null),this.shadowNode=null,this.shadowColorNode=null,this.baseColorNode=null,this.updateBeforeType=wr.NONE}updateBefore(e){const t=this.light.shadow;(t.needsUpdate||t.autoUpdate)&&(this.updateShadow(e),this.shadowMap.depthTexture.version===this._depthVersionCached&&(t.needsUpdate=!1))}update(){const{light:e}=this;this.color.copy(e.color).multiplyScalar(e.intensity)}}const X_=Bi((e=>{const{lightDistance:t,cutoffDistance:s,decayExponent:r}=e,i=t.pow(r).max(.01).reciprocal();return s.greaterThan(0).select(i.mul(t.div(s).pow4().oneMinus().clamp().pow2()),i)}));let K_;function Y_(e){K_=K_||new WeakMap;let t=K_.get(e);return void 0===t&&K_.set(e,t={}),t}function Q_(e){const t=Y_(e);return t.position||(t.position=bn(new s).setGroup(fn).onRenderUpdate(((t,s)=>s.value.setFromMatrixPosition(e.matrixWorld))))}function Z_(e){const t=Y_(e);return t.targetPosition||(t.targetPosition=bn(new s).setGroup(fn).onRenderUpdate(((t,s)=>s.value.setFromMatrixPosition(e.target.matrixWorld))))}function J_(e){const t=Y_(e);return t.viewPosition||(t.viewPosition=bn(new s).setGroup(fn).onRenderUpdate((({camera:t},r)=>{r.value=r.value||new s,r.value.setFromMatrixPosition(e.matrixWorld),r.value.applyMatrix4(t.matrixWorldInverse)})))}const tN=e=>tl.transformDirection(Q_(e).sub(Z_(e))),sN=Bi((([e])=>{const t=e.toUint().mul(747796405).add(2891336453),s=t.shiftRight(t.shiftRight(28).add(4)).bitXor(t).mul(277803737);return s.shiftRight(22).bitXor(s).toFloat().mul(1/2**32)})),rN=(e,t)=>Co(na(4,e.mul(ia(1,e))),t),iN=(e,t)=>e.lessThan(.5)?rN(e.mul(2),t).div(2):ia(1,rN(na(ia(1,e),2),t).div(2)),nN=(e,t,s)=>Co(aa(Co(e,t),ra(Co(e,t),Co(ia(1,e),s))),1/t),aN=(e,t)=>Xa(Ba.mul(t.mul(e).sub(1))).div(Ba.mul(t.mul(e).sub(1))),oN=Bi((([e])=>e.fract().sub(.5).abs())).setLayout({name:"tri",type:"float",inputs:[{name:"x",type:"float"}]}),uN=Bi((([e])=>ji(oN(e.z.add(oN(e.y.mul(1)))),oN(e.z.add(oN(e.x.mul(1)))),oN(e.y.add(oN(e.x.mul(1))))))).setLayout({name:"tri3",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),lN=Bi((([e,t,s])=>{const r=ji(e).toVar(),i=Di(1.4).toVar(),n=Di(0).toVar(),a=ji(r).toVar();return $c({start:Di(0),end:Di(3),type:"float",condition:"<="},(()=>{const e=ji(uN(a.mul(2))).toVar();r.addAssign(e.add(s.mul(Di(.1).mul(t)))),a.mulAssign(1.8),i.mulAssign(1.5),r.mulAssign(1.2);const o=Di(oN(r.z.add(oN(r.x.add(oN(r.y)))))).toVar();n.addAssign(o.div(i)),a.addAssign(.14)})),n})).setLayout({name:"triNoise3D",type:"float",inputs:[{name:"p",type:"vec3"},{name:"spd",type:"float"},{name:"time",type:"float"}]}),hN=Bi((([e,t,s=ki(.5)])=>lm(e.sub(s),t).add(s))),pN=Bi((([e,t,s=ki(.5)])=>{const r=e.sub(s),i=r.dot(r),n=i.mul(i).mul(t);return e.add(r.mul(n))})),gN=Bi((({position:e=null,horizontal:t=!0,vertical:s=!1})=>{let r;null!==e?(r=gl.toVar(),r[3][0]=e.x,r[3][1]=e.y,r[3][2]=e.z):r=gl;const i=tl.mul(r);return vi(t)&&(i[0][0]=gl[0].length(),i[0][1]=0,i[0][2]=0),vi(s)&&(i[1][0]=0,i[1][1]=gl[1].length(),i[1][2]=0),i[2][0]=0,i[2][1]=0,i[2][2]=1,Zu.mul(i).mul(Sl)})),mN=Bi((([e=null])=>{const t=Lh();return Lh(Eh(e)).sub(t).lessThan(0).select(dh,e)})),fN=new WeakMap;class xN extends Or{static get type(){return"VelocityNode"}constructor(){super("vec2"),this.updateType=wr.OBJECT,this.updateAfterType=wr.OBJECT,this.previousModelWorldMatrix=bn(new n),this.previousProjectionMatrix=bn(new n).setGroup(fn),this.previousCameraViewMatrix=bn(new n)}update({frameId:e,camera:t,object:s}){const r=bN(s);this.previousModelWorldMatrix.value.copy(r);const i=yN(t);i.frameId!==e&&(i.frameId=e,void 0===i.previousProjectionMatrix?(i.previousProjectionMatrix=new n,i.previousCameraViewMatrix=new n,i.currentProjectionMatrix=new n,i.currentCameraViewMatrix=new n,i.previousProjectionMatrix.copy(t.projectionMatrix),i.previousCameraViewMatrix.copy(t.matrixWorldInverse)):(i.previousProjectionMatrix.copy(i.currentProjectionMatrix),i.previousCameraViewMatrix.copy(i.currentCameraViewMatrix)),i.currentProjectionMatrix.copy(t.projectionMatrix),i.currentCameraViewMatrix.copy(t.matrixWorldInverse),this.previousProjectionMatrix.value.copy(i.previousProjectionMatrix),this.previousCameraViewMatrix.value.copy(i.previousCameraViewMatrix))}updateAfter({object:e}){bN(e).copy(e.matrixWorld)}setup(){const e=this.previousCameraViewMatrix.mul(this.previousModelWorldMatrix),t=Zu.mul(Tl).mul(Sl),s=this.previousProjectionMatrix.mul(e).mul(Al),r=t.xy.div(t.w),i=s.xy.div(s.w);return ia(r,i)}}function yN(e){let t=fN.get(e);return void 0===t&&(t={},fN.set(e,t)),t}function bN(e,t=0){const s=yN(e);let r=s[t];return void 0===r&&(s[t]=r=new n),r}const TN=Mi(xN),_N=Bi((([e,t])=>yo(1,e.oneMinus().div(t)).oneMinus())).setLayout({name:"burnBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),NN=Bi((([e,t])=>yo(e.div(t.oneMinus()),1))).setLayout({name:"dodgeBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),vN=Bi((([e,t])=>e.oneMinus().mul(t.oneMinus()).oneMinus())).setLayout({name:"screenBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),SN=Bi((([e,t])=>Po(e.mul(2).mul(t),e.oneMinus().mul(2).mul(t.oneMinus()).oneMinus(),_o(.5,e)))).setLayout({name:"overlayBlend",type:"vec3",inputs:[{name:"base",type:"vec3"},{name:"blend",type:"vec3"}]}),AN=Bi((([e,t,s=Oi(16)])=>{const r=t=>e.uv(t),i=Gu(),n=r(i).toVar(),a=Di(s);return $c({start:Oi(1),end:s,type:"int",condition:"<="},(({i:e})=>{const s=t.mul(Di(e).div(a.sub(1)).sub(.5));n.addAssign(r(i.add(s)))})),n.divAssign(a),n})),RN=Bi((([e,t=1])=>{const s=e,r=bT(s.rgb),i=ji(r),n=yo(1,bo(0,Di(10).mul(r.sub(.45)))),a=i.mul(s.rgb).mul(2),o=Di(2).mul(i.oneMinus()).mul(s.rgb.oneMinus()).oneMinus(),u=Po(a,o,n),l=s.a.mul(t),d=l.mul(u.rgb);return d.addAssign(s.rgb.mul(l.oneMinus())),Yi(d,s.a)})),CN=Bi((([e])=>{const t=ji(e);return Yi(Ao(t,ji(.393,.769,.189)),Ao(t,ji(.349,.686,.168)),Ao(t,ji(.272,.534,.131)),e.a)})),EN=Bi((([e])=>{const t=e.mul(.9478672986).add(.0521327014).pow(2.4),s=e.mul(.0773993808),r=e.lessThanEqual(.04045);return Po(t,s,r)})).setLayout({name:"sRGBToLinearSRGB",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),wN=Bi((([e])=>{const t=e.pow(.41666).mul(1.055).sub(.055),s=e.mul(12.92),r=e.lessThanEqual(.0031308);return Po(t,s,r)})).setLayout({name:"linearSRGBTosRGB",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),MN=Bi((([e,t])=>e.mul(t).clamp())).setLayout({name:"linearToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),BN=Bi((([e,t])=>(e=e.mul(t)).div(e.add(1)).clamp())).setLayout({name:"reinhardToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),UN=Bi((([e,t])=>{const s=(e=(e=e.mul(t)).sub(.004).max(0)).mul(e.mul(6.2).add(.5)),r=e.mul(e.mul(6.2).add(1.7)).add(.06);return s.div(r).pow(2.2)})).setLayout({name:"cineonToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),FN=Bi((([e])=>{const t=e.mul(e.add(.0245786)).sub(90537e-9),s=e.mul(e.add(.432951).mul(.983729)).add(.238081);return t.div(s)})),PN=Bi((([e,t])=>{const s=sn(.59719,.35458,.04823,.076,.90834,.01566,.0284,.13383,.83777),r=sn(1.60475,-.53108,-.07367,-.10208,1.10813,-.00605,-.00327,-.07276,1.07602);return e=e.mul(t).div(.6),e=s.mul(e),e=FN(e),(e=r.mul(e)).clamp()})).setLayout({name:"acesFilmicToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),IN=sn(ji(1.6605,-.1246,-.0182),ji(-.5876,1.1329,-.1006),ji(-.0728,-.0083,1.1187)),LN=sn(ji(.6274,.0691,.0164),ji(.3293,.9195,.088),ji(.0433,.0113,.8956)),VN=Bi((([e])=>{const t=ji(e).toVar(),s=ji(t.mul(t)).toVar(),r=ji(s.mul(s)).toVar();return Di(15.5).mul(r.mul(s)).sub(na(40.14,r.mul(t))).add(na(31.96,r).sub(na(6.868,s.mul(t))).add(na(.4298,s).add(na(.1191,t).sub(.00232))))})),DN=Bi((([e,t])=>{const s=ji(e).toVar(),r=sn(ji(.856627153315983,.137318972929847,.11189821299995),ji(.0951212405381588,.761241990602591,.0767994186031903),ji(.0482516061458583,.101439036467562,.811302368396859)),i=sn(ji(1.1271005818144368,-.1413297634984383,-.14132976349843826),ji(-.11060664309660323,1.157823702216272,-.11060664309660294),ji(-.016493938717834573,-.016493938717834257,1.2519364065950405)),n=Di(-12.47393),a=Di(4.026069);return s.mulAssign(t),s.assign(LN.mul(s)),s.assign(r.mul(s)),s.assign(bo(s,1e-10)),s.assign(za(s)),s.assign(s.sub(n).div(a.sub(n))),s.assign(Io(s,0,1)),s.assign(VN(s)),s.assign(i.mul(s)),s.assign(Co(bo(ji(0),s),ji(2.2))),s.assign(IN.mul(s)),s.assign(Io(s,0,1)),s})).setLayout({name:"agxToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]}),ON=Bi((([e,t])=>{const s=Di(.76),r=Di(.15);e=e.mul(t);const i=yo(e.r,yo(e.g,e.b)),n=Ho(i.lessThan(.08),i.sub(na(6.25,i.mul(i))),.04);e.subAssign(n);const a=bo(e.r,bo(e.g,e.b));Ii(a.lessThan(s),(()=>e));const o=ia(1,s),u=ia(1,o.mul(o).div(a.add(o.sub(s))));e.mulAssign(u.div(a));const l=ia(1,aa(1,r.mul(a.sub(u)).add(1)));return Po(e,ji(u),l)})).setLayout({name:"neutralToneMapping",type:"vec3",inputs:[{name:"color",type:"vec3"},{name:"exposure",type:"float"}]});const GN=wi(class extends Lr{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:s}=e;!0===s.backend.isWebGLBackend?e.addFlowCode(`\t// ${t}Barrier \n`):e.addLineFlowCode(`${t}Barrier()`)}}),zN=()=>GN("workgroup").append(),kN=()=>GN("storage").append(),$N=()=>GN("texture").append();class HN extends Vr{constructor(e,t){super(e,t),this.isWorkgroupInfoElementNode=!0}generate(e,t){let s;const r=e.context.assign;if(s=super.generate(e),!0!==r){const r=this.getNodeType(e);s=e.format(s,r,t)}return s}}class WN extends Lr{constructor(e,t,s=0){super(t),this.bufferType=t,this.bufferCount=s,this.isWorkgroupInfoNode=!0,this.scope=e}label(e){return this.name=e,this}getHash(){return this.uuid}setScope(e){return this.scope=e,this}getInputType(){return`${this.scope}Array`}element(e){return Ri(new HN(this,e))}generate(e){return e.getScopedArray(this.name||`${this.scope}Array_${this.id}`,this.scope.toLowerCase(),this.bufferType,this.bufferCount)}}const jN=(e,t)=>Ri(new WN("Workgroup",e,t)),qN=Bi((([e=t()])=>{const t=e.mul(2),s=t.x.floor(),r=t.y.floor();return s.add(r).mod(2).sign()})),XN=Bi((([e,t,s])=>{const r=Di(s).toVar(),i=Di(t).toVar(),n=zi(e).toVar();return Ho(n,i,r)})).setLayout({name:"mx_select",type:"float",inputs:[{name:"b",type:"bool"},{name:"t",type:"float"},{name:"f",type:"float"}]}),KN=Bi((([e,t])=>{const s=zi(t).toVar(),r=Di(e).toVar();return Ho(s,r.negate(),r)})).setLayout({name:"mx_negate_if",type:"float",inputs:[{name:"val",type:"float"},{name:"b",type:"bool"}]}),YN=Bi((([e])=>{const t=Di(e).toVar();return Oi(Ha(t))})).setLayout({name:"mx_floor",type:"int",inputs:[{name:"x",type:"float"}]}),QN=Bi((([e,t])=>{const s=Di(e).toVar();return t.assign(YN(s)),s.sub(Di(t))})),ZN=fx([Bi((([e,t,s,r,i,n])=>{const a=Di(n).toVar(),o=Di(i).toVar(),u=Di(r).toVar(),l=Di(s).toVar(),d=Di(t).toVar(),c=Di(e).toVar(),h=Di(ia(1,o)).toVar();return ia(1,a).mul(c.mul(h).add(d.mul(o))).add(a.mul(l.mul(h).add(u.mul(o))))})).setLayout({name:"mx_bilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"}]}),Bi((([e,t,s,r,i,n])=>{const a=Di(n).toVar(),o=Di(i).toVar(),u=ji(r).toVar(),l=ji(s).toVar(),d=ji(t).toVar(),c=ji(e).toVar(),h=Di(ia(1,o)).toVar();return ia(1,a).mul(c.mul(h).add(d.mul(o))).add(a.mul(l.mul(h).add(u.mul(o))))})).setLayout({name:"mx_bilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"}]})]),JN=fx([Bi((([e,t,s,r,i,n,a,o,u,l,d])=>{const c=Di(d).toVar(),h=Di(l).toVar(),p=Di(u).toVar(),g=Di(o).toVar(),m=Di(a).toVar(),f=Di(n).toVar(),x=Di(i).toVar(),y=Di(r).toVar(),b=Di(s).toVar(),T=Di(t).toVar(),_=Di(e).toVar(),N=Di(ia(1,p)).toVar(),v=Di(ia(1,h)).toVar();return Di(ia(1,c)).toVar().mul(v.mul(_.mul(N).add(T.mul(p))).add(h.mul(b.mul(N).add(y.mul(p))))).add(c.mul(v.mul(x.mul(N).add(f.mul(p))).add(h.mul(m.mul(N).add(g.mul(p))))))})).setLayout({name:"mx_trilerp_0",type:"float",inputs:[{name:"v0",type:"float"},{name:"v1",type:"float"},{name:"v2",type:"float"},{name:"v3",type:"float"},{name:"v4",type:"float"},{name:"v5",type:"float"},{name:"v6",type:"float"},{name:"v7",type:"float"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]}),Bi((([e,t,s,r,i,n,a,o,u,l,d])=>{const c=Di(d).toVar(),h=Di(l).toVar(),p=Di(u).toVar(),g=ji(o).toVar(),m=ji(a).toVar(),f=ji(n).toVar(),x=ji(i).toVar(),y=ji(r).toVar(),b=ji(s).toVar(),T=ji(t).toVar(),_=ji(e).toVar(),N=Di(ia(1,p)).toVar(),v=Di(ia(1,h)).toVar();return Di(ia(1,c)).toVar().mul(v.mul(_.mul(N).add(T.mul(p))).add(h.mul(b.mul(N).add(y.mul(p))))).add(c.mul(v.mul(x.mul(N).add(f.mul(p))).add(h.mul(m.mul(N).add(g.mul(p))))))})).setLayout({name:"mx_trilerp_1",type:"vec3",inputs:[{name:"v0",type:"vec3"},{name:"v1",type:"vec3"},{name:"v2",type:"vec3"},{name:"v3",type:"vec3"},{name:"v4",type:"vec3"},{name:"v5",type:"vec3"},{name:"v6",type:"vec3"},{name:"v7",type:"vec3"},{name:"s",type:"float"},{name:"t",type:"float"},{name:"r",type:"float"}]})]),ev=Bi((([e,t,s])=>{const r=Di(s).toVar(),i=Di(t).toVar(),n=Gi(e).toVar(),a=Gi(n.bitAnd(Gi(7))).toVar(),o=Di(XN(a.lessThan(Gi(4)),i,r)).toVar(),u=Di(na(2,XN(a.lessThan(Gi(4)),r,i))).toVar();return KN(o,zi(a.bitAnd(Gi(1)))).add(KN(u,zi(a.bitAnd(Gi(2)))))})).setLayout({name:"mx_gradient_float_0",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"}]}),tv=Bi((([e,t,s,r])=>{const i=Di(r).toVar(),n=Di(s).toVar(),a=Di(t).toVar(),o=Gi(e).toVar(),u=Gi(o.bitAnd(Gi(15))).toVar(),l=Di(XN(u.lessThan(Gi(8)),a,n)).toVar(),d=Di(XN(u.lessThan(Gi(4)),n,XN(u.equal(Gi(12)).or(u.equal(Gi(14))),a,i))).toVar();return KN(l,zi(u.bitAnd(Gi(1)))).add(KN(d,zi(u.bitAnd(Gi(2)))))})).setLayout({name:"mx_gradient_float_1",type:"float",inputs:[{name:"hash",type:"uint"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),sv=fx([ev,tv]),rv=Bi((([e,t,s])=>{const r=Di(s).toVar(),i=Di(t).toVar(),n=Xi(e).toVar();return ji(sv(n.x,i,r),sv(n.y,i,r),sv(n.z,i,r))})).setLayout({name:"mx_gradient_vec3_0",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"}]}),iv=Bi((([e,t,s,r])=>{const i=Di(r).toVar(),n=Di(s).toVar(),a=Di(t).toVar(),o=Xi(e).toVar();return ji(sv(o.x,a,n,i),sv(o.y,a,n,i),sv(o.z,a,n,i))})).setLayout({name:"mx_gradient_vec3_1",type:"vec3",inputs:[{name:"hash",type:"uvec3"},{name:"x",type:"float"},{name:"y",type:"float"},{name:"z",type:"float"}]}),nv=fx([rv,iv]),av=Bi((([e])=>{const t=Di(e).toVar();return na(.6616,t)})).setLayout({name:"mx_gradient_scale2d_0",type:"float",inputs:[{name:"v",type:"float"}]}),ov=Bi((([e])=>{const t=Di(e).toVar();return na(.982,t)})).setLayout({name:"mx_gradient_scale3d_0",type:"float",inputs:[{name:"v",type:"float"}]}),uv=fx([av,Bi((([e])=>{const t=ji(e).toVar();return na(.6616,t)})).setLayout({name:"mx_gradient_scale2d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),lv=fx([ov,Bi((([e])=>{const t=ji(e).toVar();return na(.982,t)})).setLayout({name:"mx_gradient_scale3d_1",type:"vec3",inputs:[{name:"v",type:"vec3"}]})]),hv=Bi((([e,t])=>{const s=Oi(t).toVar(),r=Gi(e).toVar();return r.shiftLeft(s).bitOr(r.shiftRight(Oi(32).sub(s)))})).setLayout({name:"mx_rotl32",type:"uint",inputs:[{name:"x",type:"uint"},{name:"k",type:"int"}]}),pv=Bi((([e,t,s])=>{e.subAssign(s),e.bitXorAssign(hv(s,Oi(4))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(hv(e,Oi(6))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(hv(t,Oi(8))),t.addAssign(e),e.subAssign(s),e.bitXorAssign(hv(s,Oi(16))),s.addAssign(t),t.subAssign(e),t.bitXorAssign(hv(e,Oi(19))),e.addAssign(s),s.subAssign(t),s.bitXorAssign(hv(t,Oi(4))),t.addAssign(e)})),gv=Bi((([e,t,s])=>{const r=Gi(s).toVar(),i=Gi(t).toVar(),n=Gi(e).toVar();return r.bitXorAssign(i),r.subAssign(hv(i,Oi(14))),n.bitXorAssign(r),n.subAssign(hv(r,Oi(11))),i.bitXorAssign(n),i.subAssign(hv(n,Oi(25))),r.bitXorAssign(i),r.subAssign(hv(i,Oi(16))),n.bitXorAssign(r),n.subAssign(hv(r,Oi(4))),i.bitXorAssign(n),i.subAssign(hv(n,Oi(14))),r.bitXorAssign(i),r.subAssign(hv(i,Oi(24))),r})).setLayout({name:"mx_bjfinal",type:"uint",inputs:[{name:"a",type:"uint"},{name:"b",type:"uint"},{name:"c",type:"uint"}]}),mv=Bi((([e])=>{const t=Gi(e).toVar();return Di(t).div(Di(Gi(Oi(4294967295))))})).setLayout({name:"mx_bits_to_01",type:"float",inputs:[{name:"bits",type:"uint"}]}),fv=Bi((([e])=>{const t=Di(e).toVar();return t.mul(t).mul(t).mul(t.mul(t.mul(6).sub(15)).add(10))})).setLayout({name:"mx_fade",type:"float",inputs:[{name:"t",type:"float"}]}),xv=fx([Bi((([e])=>{const t=Oi(e).toVar(),s=Gi(Gi(1)).toVar(),r=Gi(Gi(Oi(3735928559)).add(s.shiftLeft(Gi(2))).add(Gi(13))).toVar();return gv(r.add(Gi(t)),r,r)})).setLayout({name:"mx_hash_int_0",type:"uint",inputs:[{name:"x",type:"int"}]}),Bi((([e,t])=>{const s=Oi(t).toVar(),r=Oi(e).toVar(),i=Gi(Gi(2)).toVar(),n=Gi().toVar(),a=Gi().toVar(),o=Gi().toVar();return n.assign(a.assign(o.assign(Gi(Oi(3735928559)).add(i.shiftLeft(Gi(2))).add(Gi(13))))),n.addAssign(Gi(r)),a.addAssign(Gi(s)),gv(n,a,o)})).setLayout({name:"mx_hash_int_1",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),Bi((([e,t,s])=>{const r=Oi(s).toVar(),i=Oi(t).toVar(),n=Oi(e).toVar(),a=Gi(Gi(3)).toVar(),o=Gi().toVar(),u=Gi().toVar(),l=Gi().toVar();return o.assign(u.assign(l.assign(Gi(Oi(3735928559)).add(a.shiftLeft(Gi(2))).add(Gi(13))))),o.addAssign(Gi(n)),u.addAssign(Gi(i)),l.addAssign(Gi(r)),gv(o,u,l)})).setLayout({name:"mx_hash_int_2",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]}),Bi((([e,t,s,r])=>{const i=Oi(r).toVar(),n=Oi(s).toVar(),a=Oi(t).toVar(),o=Oi(e).toVar(),u=Gi(Gi(4)).toVar(),l=Gi().toVar(),d=Gi().toVar(),c=Gi().toVar();return l.assign(d.assign(c.assign(Gi(Oi(3735928559)).add(u.shiftLeft(Gi(2))).add(Gi(13))))),l.addAssign(Gi(o)),d.addAssign(Gi(a)),c.addAssign(Gi(n)),pv(l,d,c),l.addAssign(Gi(i)),gv(l,d,c)})).setLayout({name:"mx_hash_int_3",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"}]}),Bi((([e,t,s,r,i])=>{const n=Oi(i).toVar(),a=Oi(r).toVar(),o=Oi(s).toVar(),u=Oi(t).toVar(),l=Oi(e).toVar(),d=Gi(Gi(5)).toVar(),c=Gi().toVar(),h=Gi().toVar(),p=Gi().toVar();return c.assign(h.assign(p.assign(Gi(Oi(3735928559)).add(d.shiftLeft(Gi(2))).add(Gi(13))))),c.addAssign(Gi(l)),h.addAssign(Gi(u)),p.addAssign(Gi(o)),pv(c,h,p),c.addAssign(Gi(a)),h.addAssign(Gi(n)),gv(c,h,p)})).setLayout({name:"mx_hash_int_4",type:"uint",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xx",type:"int"},{name:"yy",type:"int"}]})]),yv=fx([Bi((([e,t])=>{const s=Oi(t).toVar(),r=Oi(e).toVar(),i=Gi(xv(r,s)).toVar(),n=Xi().toVar();return n.x.assign(i.bitAnd(Oi(255))),n.y.assign(i.shiftRight(Oi(8)).bitAnd(Oi(255))),n.z.assign(i.shiftRight(Oi(16)).bitAnd(Oi(255))),n})).setLayout({name:"mx_hash_vec3_0",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"}]}),Bi((([e,t,s])=>{const r=Oi(s).toVar(),i=Oi(t).toVar(),n=Oi(e).toVar(),a=Gi(xv(n,i,r)).toVar(),o=Xi().toVar();return o.x.assign(a.bitAnd(Oi(255))),o.y.assign(a.shiftRight(Oi(8)).bitAnd(Oi(255))),o.z.assign(a.shiftRight(Oi(16)).bitAnd(Oi(255))),o})).setLayout({name:"mx_hash_vec3_1",type:"uvec3",inputs:[{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"}]})]),bv=fx([Bi((([e])=>{const t=ki(e).toVar(),s=Oi().toVar(),r=Oi().toVar(),i=Di(QN(t.x,s)).toVar(),n=Di(QN(t.y,r)).toVar(),a=Di(fv(i)).toVar(),o=Di(fv(n)).toVar(),u=Di(ZN(sv(xv(s,r),i,n),sv(xv(s.add(Oi(1)),r),i.sub(1),n),sv(xv(s,r.add(Oi(1))),i,n.sub(1)),sv(xv(s.add(Oi(1)),r.add(Oi(1))),i.sub(1),n.sub(1)),a,o)).toVar();return uv(u)})).setLayout({name:"mx_perlin_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"}]}),Bi((([e])=>{const t=ji(e).toVar(),s=Oi().toVar(),r=Oi().toVar(),i=Oi().toVar(),n=Di(QN(t.x,s)).toVar(),a=Di(QN(t.y,r)).toVar(),o=Di(QN(t.z,i)).toVar(),u=Di(fv(n)).toVar(),l=Di(fv(a)).toVar(),d=Di(fv(o)).toVar(),c=Di(JN(sv(xv(s,r,i),n,a,o),sv(xv(s.add(Oi(1)),r,i),n.sub(1),a,o),sv(xv(s,r.add(Oi(1)),i),n,a.sub(1),o),sv(xv(s.add(Oi(1)),r.add(Oi(1)),i),n.sub(1),a.sub(1),o),sv(xv(s,r,i.add(Oi(1))),n,a,o.sub(1)),sv(xv(s.add(Oi(1)),r,i.add(Oi(1))),n.sub(1),a,o.sub(1)),sv(xv(s,r.add(Oi(1)),i.add(Oi(1))),n,a.sub(1),o.sub(1)),sv(xv(s.add(Oi(1)),r.add(Oi(1)),i.add(Oi(1))),n.sub(1),a.sub(1),o.sub(1)),u,l,d)).toVar();return lv(c)})).setLayout({name:"mx_perlin_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"}]})]),Tv=fx([Bi((([e])=>{const t=ki(e).toVar(),s=Oi().toVar(),r=Oi().toVar(),i=Di(QN(t.x,s)).toVar(),n=Di(QN(t.y,r)).toVar(),a=Di(fv(i)).toVar(),o=Di(fv(n)).toVar(),u=ji(ZN(nv(yv(s,r),i,n),nv(yv(s.add(Oi(1)),r),i.sub(1),n),nv(yv(s,r.add(Oi(1))),i,n.sub(1)),nv(yv(s.add(Oi(1)),r.add(Oi(1))),i.sub(1),n.sub(1)),a,o)).toVar();return uv(u)})).setLayout({name:"mx_perlin_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),Bi((([e])=>{const t=ji(e).toVar(),s=Oi().toVar(),r=Oi().toVar(),i=Oi().toVar(),n=Di(QN(t.x,s)).toVar(),a=Di(QN(t.y,r)).toVar(),o=Di(QN(t.z,i)).toVar(),u=Di(fv(n)).toVar(),l=Di(fv(a)).toVar(),d=Di(fv(o)).toVar(),c=ji(JN(nv(yv(s,r,i),n,a,o),nv(yv(s.add(Oi(1)),r,i),n.sub(1),a,o),nv(yv(s,r.add(Oi(1)),i),n,a.sub(1),o),nv(yv(s.add(Oi(1)),r.add(Oi(1)),i),n.sub(1),a.sub(1),o),nv(yv(s,r,i.add(Oi(1))),n,a,o.sub(1)),nv(yv(s.add(Oi(1)),r,i.add(Oi(1))),n.sub(1),a,o.sub(1)),nv(yv(s,r.add(Oi(1)),i.add(Oi(1))),n,a.sub(1),o.sub(1)),nv(yv(s.add(Oi(1)),r.add(Oi(1)),i.add(Oi(1))),n.sub(1),a.sub(1),o.sub(1)),u,l,d)).toVar();return lv(c)})).setLayout({name:"mx_perlin_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"}]})]),_v=fx([Bi((([e])=>{const t=Di(e).toVar(),s=Oi(YN(t)).toVar();return mv(xv(s))})).setLayout({name:"mx_cell_noise_float_0",type:"float",inputs:[{name:"p",type:"float"}]}),Bi((([e])=>{const t=ki(e).toVar(),s=Oi(YN(t.x)).toVar(),r=Oi(YN(t.y)).toVar();return mv(xv(s,r))})).setLayout({name:"mx_cell_noise_float_1",type:"float",inputs:[{name:"p",type:"vec2"}]}),Bi((([e])=>{const t=ji(e).toVar(),s=Oi(YN(t.x)).toVar(),r=Oi(YN(t.y)).toVar(),i=Oi(YN(t.z)).toVar();return mv(xv(s,r,i))})).setLayout({name:"mx_cell_noise_float_2",type:"float",inputs:[{name:"p",type:"vec3"}]}),Bi((([e])=>{const t=Yi(e).toVar(),s=Oi(YN(t.x)).toVar(),r=Oi(YN(t.y)).toVar(),i=Oi(YN(t.z)).toVar(),n=Oi(YN(t.w)).toVar();return mv(xv(s,r,i,n))})).setLayout({name:"mx_cell_noise_float_3",type:"float",inputs:[{name:"p",type:"vec4"}]})]),Nv=fx([Bi((([e])=>{const t=Di(e).toVar(),s=Oi(YN(t)).toVar();return ji(mv(xv(s,Oi(0))),mv(xv(s,Oi(1))),mv(xv(s,Oi(2))))})).setLayout({name:"mx_cell_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"float"}]}),Bi((([e])=>{const t=ki(e).toVar(),s=Oi(YN(t.x)).toVar(),r=Oi(YN(t.y)).toVar();return ji(mv(xv(s,r,Oi(0))),mv(xv(s,r,Oi(1))),mv(xv(s,r,Oi(2))))})).setLayout({name:"mx_cell_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec2"}]}),Bi((([e])=>{const t=ji(e).toVar(),s=Oi(YN(t.x)).toVar(),r=Oi(YN(t.y)).toVar(),i=Oi(YN(t.z)).toVar();return ji(mv(xv(s,r,i,Oi(0))),mv(xv(s,r,i,Oi(1))),mv(xv(s,r,i,Oi(2))))})).setLayout({name:"mx_cell_noise_vec3_2",type:"vec3",inputs:[{name:"p",type:"vec3"}]}),Bi((([e])=>{const t=Yi(e).toVar(),s=Oi(YN(t.x)).toVar(),r=Oi(YN(t.y)).toVar(),i=Oi(YN(t.z)).toVar(),n=Oi(YN(t.w)).toVar();return ji(mv(xv(s,r,i,n,Oi(0))),mv(xv(s,r,i,n,Oi(1))),mv(xv(s,r,i,n,Oi(2))))})).setLayout({name:"mx_cell_noise_vec3_3",type:"vec3",inputs:[{name:"p",type:"vec4"}]})]),vv=Bi((([e,t,s,r])=>{const i=Di(r).toVar(),n=Di(s).toVar(),a=Oi(t).toVar(),o=ji(e).toVar(),u=Di(0).toVar(),l=Di(1).toVar();return $c(a,(()=>{u.addAssign(l.mul(bv(o))),l.mulAssign(i),o.mulAssign(n)})),u})).setLayout({name:"mx_fractal_noise_float",type:"float",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),Sv=Bi((([e,t,s,r])=>{const i=Di(r).toVar(),n=Di(s).toVar(),a=Oi(t).toVar(),o=ji(e).toVar(),u=ji(0).toVar(),l=Di(1).toVar();return $c(a,(()=>{u.addAssign(l.mul(Tv(o))),l.mulAssign(i),o.mulAssign(n)})),u})).setLayout({name:"mx_fractal_noise_vec3",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),Av=Bi((([e,t,s,r])=>{const i=Di(r).toVar(),n=Di(s).toVar(),a=Oi(t).toVar(),o=ji(e).toVar();return ki(vv(o,a,n,i),vv(o.add(ji(Oi(19),Oi(193),Oi(17))),a,n,i))})).setLayout({name:"mx_fractal_noise_vec2",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),Rv=Bi((([e,t,s,r])=>{const i=Di(r).toVar(),n=Di(s).toVar(),a=Oi(t).toVar(),o=ji(e).toVar(),u=ji(Sv(o,a,n,i)).toVar(),l=Di(vv(o.add(ji(Oi(19),Oi(193),Oi(17))),a,n,i)).toVar();return Yi(u,l)})).setLayout({name:"mx_fractal_noise_vec4",type:"vec4",inputs:[{name:"p",type:"vec3"},{name:"octaves",type:"int"},{name:"lacunarity",type:"float"},{name:"diminish",type:"float"}]}),Cv=fx([Bi((([e,t,s,r,i,n,a])=>{const o=Oi(a).toVar(),u=Di(n).toVar(),l=Oi(i).toVar(),d=Oi(r).toVar(),c=Oi(s).toVar(),h=Oi(t).toVar(),p=ki(e).toVar(),g=ji(Nv(ki(h.add(d),c.add(l)))).toVar(),m=ki(g.x,g.y).toVar();m.subAssign(.5),m.mulAssign(u),m.addAssign(.5);const f=ki(ki(Di(h),Di(c)).add(m)).toVar(),x=ki(f.sub(p)).toVar();return Ii(o.equal(Oi(2)),(()=>to(x.x).add(to(x.y)))),Ii(o.equal(Oi(3)),(()=>bo(to(x.x),to(x.y)))),Ao(x,x)})).setLayout({name:"mx_worley_distance_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Bi((([e,t,s,r,i,n,a,o,u])=>{const l=Oi(u).toVar(),d=Di(o).toVar(),c=Oi(a).toVar(),h=Oi(n).toVar(),p=Oi(i).toVar(),g=Oi(r).toVar(),m=Oi(s).toVar(),f=Oi(t).toVar(),x=ji(e).toVar(),y=ji(Nv(ji(f.add(p),m.add(h),g.add(c)))).toVar();y.subAssign(.5),y.mulAssign(d),y.addAssign(.5);const b=ji(ji(Di(f),Di(m),Di(g)).add(y)).toVar(),T=ji(b.sub(x)).toVar();return Ii(l.equal(Oi(2)),(()=>to(T.x).add(to(T.y)).add(to(T.z)))),Ii(l.equal(Oi(3)),(()=>bo(bo(to(T.x),to(T.y)),to(T.z)))),Ao(T,T)})).setLayout({name:"mx_worley_distance_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"x",type:"int"},{name:"y",type:"int"},{name:"z",type:"int"},{name:"xoff",type:"int"},{name:"yoff",type:"int"},{name:"zoff",type:"int"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),Ev=Bi((([e,t,s])=>{const r=Oi(s).toVar(),i=Di(t).toVar(),n=ki(e).toVar(),a=Oi().toVar(),o=Oi().toVar(),u=ki(QN(n.x,a),QN(n.y,o)).toVar(),l=Di(1e6).toVar();return $c({start:-1,end:Oi(1),name:"x",condition:"<="},(({x:e})=>{$c({start:-1,end:Oi(1),name:"y",condition:"<="},(({y:t})=>{const s=Di(Cv(u,e,t,a,o,i,r)).toVar();l.assign(yo(l,s))}))})),Ii(r.equal(Oi(0)),(()=>{l.assign(ka(l))})),l})).setLayout({name:"mx_worley_noise_float_0",type:"float",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),wv=Bi((([e,t,s])=>{const r=Oi(s).toVar(),i=Di(t).toVar(),n=ki(e).toVar(),a=Oi().toVar(),o=Oi().toVar(),u=ki(QN(n.x,a),QN(n.y,o)).toVar(),l=ki(1e6,1e6).toVar();return $c({start:-1,end:Oi(1),name:"x",condition:"<="},(({x:e})=>{$c({start:-1,end:Oi(1),name:"y",condition:"<="},(({y:t})=>{const s=Di(Cv(u,e,t,a,o,i,r)).toVar();Ii(s.lessThan(l.x),(()=>{l.y.assign(l.x),l.x.assign(s)})).ElseIf(s.lessThan(l.y),(()=>{l.y.assign(s)}))}))})),Ii(r.equal(Oi(0)),(()=>{l.assign(ka(l))})),l})).setLayout({name:"mx_worley_noise_vec2_0",type:"vec2",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Mv=Bi((([e,t,s])=>{const r=Oi(s).toVar(),i=Di(t).toVar(),n=ki(e).toVar(),a=Oi().toVar(),o=Oi().toVar(),u=ki(QN(n.x,a),QN(n.y,o)).toVar(),l=ji(1e6,1e6,1e6).toVar();return $c({start:-1,end:Oi(1),name:"x",condition:"<="},(({x:e})=>{$c({start:-1,end:Oi(1),name:"y",condition:"<="},(({y:t})=>{const s=Di(Cv(u,e,t,a,o,i,r)).toVar();Ii(s.lessThan(l.x),(()=>{l.z.assign(l.y),l.y.assign(l.x),l.x.assign(s)})).ElseIf(s.lessThan(l.y),(()=>{l.z.assign(l.y),l.y.assign(s)})).ElseIf(s.lessThan(l.z),(()=>{l.z.assign(s)}))}))})),Ii(r.equal(Oi(0)),(()=>{l.assign(ka(l))})),l})).setLayout({name:"mx_worley_noise_vec3_0",type:"vec3",inputs:[{name:"p",type:"vec2"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]}),Bv=fx([Ev,Bi((([e,t,s])=>{const r=Oi(s).toVar(),i=Di(t).toVar(),n=ji(e).toVar(),a=Oi().toVar(),o=Oi().toVar(),u=Oi().toVar(),l=ji(QN(n.x,a),QN(n.y,o),QN(n.z,u)).toVar(),d=Di(1e6).toVar();return $c({start:-1,end:Oi(1),name:"x",condition:"<="},(({x:e})=>{$c({start:-1,end:Oi(1),name:"y",condition:"<="},(({y:t})=>{$c({start:-1,end:Oi(1),name:"z",condition:"<="},(({z:s})=>{const n=Di(Cv(l,e,t,s,a,o,u,i,r)).toVar();d.assign(yo(d,n))}))}))})),Ii(r.equal(Oi(0)),(()=>{d.assign(ka(d))})),d})).setLayout({name:"mx_worley_noise_float_1",type:"float",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),Uv=fx([wv,Bi((([e,t,s])=>{const r=Oi(s).toVar(),i=Di(t).toVar(),n=ji(e).toVar(),a=Oi().toVar(),o=Oi().toVar(),u=Oi().toVar(),l=ji(QN(n.x,a),QN(n.y,o),QN(n.z,u)).toVar(),d=ki(1e6,1e6).toVar();return $c({start:-1,end:Oi(1),name:"x",condition:"<="},(({x:e})=>{$c({start:-1,end:Oi(1),name:"y",condition:"<="},(({y:t})=>{$c({start:-1,end:Oi(1),name:"z",condition:"<="},(({z:s})=>{const n=Di(Cv(l,e,t,s,a,o,u,i,r)).toVar();Ii(n.lessThan(d.x),(()=>{d.y.assign(d.x),d.x.assign(n)})).ElseIf(n.lessThan(d.y),(()=>{d.y.assign(n)}))}))}))})),Ii(r.equal(Oi(0)),(()=>{d.assign(ka(d))})),d})).setLayout({name:"mx_worley_noise_vec2_1",type:"vec2",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),Fv=fx([Mv,Bi((([e,t,s])=>{const r=Oi(s).toVar(),i=Di(t).toVar(),n=ji(e).toVar(),a=Oi().toVar(),o=Oi().toVar(),u=Oi().toVar(),l=ji(QN(n.x,a),QN(n.y,o),QN(n.z,u)).toVar(),d=ji(1e6,1e6,1e6).toVar();return $c({start:-1,end:Oi(1),name:"x",condition:"<="},(({x:e})=>{$c({start:-1,end:Oi(1),name:"y",condition:"<="},(({y:t})=>{$c({start:-1,end:Oi(1),name:"z",condition:"<="},(({z:s})=>{const n=Di(Cv(l,e,t,s,a,o,u,i,r)).toVar();Ii(n.lessThan(d.x),(()=>{d.z.assign(d.y),d.y.assign(d.x),d.x.assign(n)})).ElseIf(n.lessThan(d.y),(()=>{d.z.assign(d.y),d.y.assign(n)})).ElseIf(n.lessThan(d.z),(()=>{d.z.assign(n)}))}))}))})),Ii(r.equal(Oi(0)),(()=>{d.assign(ka(d))})),d})).setLayout({name:"mx_worley_noise_vec3_1",type:"vec3",inputs:[{name:"p",type:"vec3"},{name:"jitter",type:"float"},{name:"metric",type:"int"}]})]),Pv=Bi((([e])=>{const t=e.y,s=e.z,r=ji().toVar();return Ii(t.lessThan(1e-4),(()=>{r.assign(ji(s,s,s))})).Else((()=>{let i=e.x;i=i.sub(Ha(i)).mul(6).toVar();const n=Oi(po(i)),a=i.sub(Di(n)),o=s.mul(t.oneMinus()),u=s.mul(t.mul(a).oneMinus()),l=s.mul(t.mul(a.oneMinus()).oneMinus());Ii(n.equal(Oi(0)),(()=>{r.assign(ji(s,l,o))})).ElseIf(n.equal(Oi(1)),(()=>{r.assign(ji(u,s,o))})).ElseIf(n.equal(Oi(2)),(()=>{r.assign(ji(o,s,l))})).ElseIf(n.equal(Oi(3)),(()=>{r.assign(ji(o,u,s))})).ElseIf(n.equal(Oi(4)),(()=>{r.assign(ji(l,o,s))})).Else((()=>{r.assign(ji(s,o,u))}))})),r})).setLayout({name:"mx_hsvtorgb",type:"vec3",inputs:[{name:"hsv",type:"vec3"}]}),Iv=Bi((([e])=>{const t=ji(e).toVar(),s=Di(t.x).toVar(),r=Di(t.y).toVar(),i=Di(t.z).toVar(),n=Di(yo(s,yo(r,i))).toVar(),a=Di(bo(s,bo(r,i))).toVar(),o=Di(a.sub(n)).toVar(),u=Di().toVar(),l=Di().toVar(),d=Di().toVar();return d.assign(a),Ii(a.greaterThan(0),(()=>{l.assign(o.div(a))})).Else((()=>{l.assign(0)})),Ii(l.lessThanEqual(0),(()=>{u.assign(0)})).Else((()=>{Ii(s.greaterThanEqual(a),(()=>{u.assign(r.sub(i).div(o))})).ElseIf(r.greaterThanEqual(a),(()=>{u.assign(ra(2,i.sub(s).div(o)))})).Else((()=>{u.assign(ra(4,s.sub(r).div(o)))})),u.mulAssign(1/6),Ii(u.lessThan(0),(()=>{u.addAssign(1)}))})),ji(u,l,d)})).setLayout({name:"mx_rgbtohsv",type:"vec3",inputs:[{name:"c",type:"vec3"}]}),Lv=Bi((([e])=>{const t=ji(e).toVar(),s=Ki(pa(t,ji(.04045))).toVar(),r=ji(t.div(12.92)).toVar(),i=ji(Co(bo(t.add(ji(.055)),ji(0)).div(1.055),ji(2.4))).toVar();return Po(r,i,s)})).setLayout({name:"mx_srgb_texture_to_lin_rec709",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Vv=(e,t)=>{e=Di(e),t=Di(t);const s=ki(t.dFdx(),t.dFdy()).length().mul(.7071067811865476);return Do(e.sub(s),e.add(s),t)},Dv=(e,t,s,r)=>Po(e,t,s[r].clamp()),Ov=(e,t,s=Gu())=>Dv(e,t,s,"x"),Gv=(e,t,s=Gu())=>Dv(e,t,s,"y"),zv=(e,t,s,r,i)=>Po(e,t,Vv(s,r[i])),kv=(e,t,s,r=Gu())=>zv(e,t,s,r,"x"),$v=(e,t,s,r=Gu())=>zv(e,t,s,r,"y"),Hv=(e=1,t=0,s=Gu())=>s.mul(e).add(t),Wv=(e,t=1)=>(e=Di(e)).abs().pow(t).mul(e.sign()),jv=(e,t=1,s=.5)=>Di(e).sub(s).mul(t).add(s),qv=(e=Gu(),t=1,s=0)=>bv(e.convert("vec2|vec3")).mul(t).add(s),Xv=(e=Gu(),t=1,s=0)=>Tv(e.convert("vec2|vec3")).mul(t).add(s),Kv=(e=Gu(),t=1,s=0)=>{e=e.convert("vec2|vec3");return Yi(Tv(e),bv(e.add(ki(19,73)))).mul(t).add(s)},Yv=(e=Gu(),t=1)=>Bv(e.convert("vec2|vec3"),t,Oi(1)),Qv=(e=Gu(),t=1)=>Uv(e.convert("vec2|vec3"),t,Oi(1)),Zv=(e=Gu(),t=1)=>Fv(e.convert("vec2|vec3"),t,Oi(1)),Jv=(e=Gu())=>_v(e.convert("vec2|vec3")),tS=(e=Gu(),t=3,s=2,r=.5,i=1)=>vv(e,Oi(t),s,r).mul(i),sS=(e=Gu(),t=3,s=2,r=.5,i=1)=>Av(e,Oi(t),s,r).mul(i),rS=(e=Gu(),t=3,s=2,r=.5,i=1)=>Sv(e,Oi(t),s,r).mul(i),iS=(e=Gu(),t=3,s=2,r=.5,i=1)=>Rv(e,Oi(t),s,r).mul(i),nS=Bi((([e,t])=>{const s=e.x,r=e.y,i=e.z;let n=t.element(0).mul(.886227);return n=n.add(t.element(1).mul(1.023328).mul(r)),n=n.add(t.element(2).mul(1.023328).mul(i)),n=n.add(t.element(3).mul(1.023328).mul(s)),n=n.add(t.element(4).mul(.858086).mul(s).mul(r)),n=n.add(t.element(5).mul(.858086).mul(r).mul(i)),n=n.add(t.element(6).mul(i.mul(i).mul(.743125).sub(.247708))),n=n.add(t.element(7).mul(.858086).mul(s).mul(i)),n=n.add(t.element(8).mul(.429043).mul(na(s,s).sub(na(r,r)))),n}));class aS extends q_{static get type(){return"PointLightNode"}constructor(e=null){super(e),this.cutoffDistanceNode=bn(0).setGroup(fn),this.decayExponentNode=bn(0).setGroup(fn)}update(e){const{light:t}=this;super.update(e),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}setup(e){const{colorNode:t,cutoffDistanceNode:s,decayExponentNode:r,light:i}=this,n=e.context.lightingModel,a=J_(i).sub(El),o=a.normalize(),u=a.length(),l=X_({lightDistance:u,cutoffDistance:s,decayExponent:r}),d=t.mul(l),c=e.context.reflectedLight;n.direct({lightDirection:o,lightColor:d,reflectedLight:c},e.stack,e)}}class oS extends q_{static get type(){return"DirectionalLightNode"}constructor(e=null){super(e)}setup(e){super.setup(e);const t=e.context.lightingModel,s=this.colorNode,r=tN(this.light),i=e.context.reflectedLight;t.direct({lightDirection:r,lightColor:s,reflectedLight:i},e.stack,e)}}const uS=new n,lS=new n;let cS=null;class hS extends q_{static get type(){return"RectAreaLightNode"}constructor(e=null){super(e),this.halfHeight=bn(new s).setGroup(fn),this.halfWidth=bn(new s).setGroup(fn)}update(e){super.update(e);const{light:t}=this,s=e.camera.matrixWorldInverse;lS.identity(),uS.copy(t.matrixWorld),uS.premultiply(s),lS.extractRotation(uS),this.halfWidth.value.set(.5*t.width,0,0),this.halfHeight.value.set(0,.5*t.height,0),this.halfWidth.value.applyMatrix4(lS),this.halfHeight.value.applyMatrix4(lS)}setup(e){let t,s;super.setup(e),e.isAvailable("float32Filterable")?(t=ju(cS.LTC_FLOAT_1),s=ju(cS.LTC_FLOAT_2)):(t=ju(cS.LTC_HALF_1),s=ju(cS.LTC_HALF_2));const{colorNode:r,light:i}=this,n=e.context.lightingModel,a=J_(i),o=e.context.reflectedLight;n.directRectArea({lightColor:r,lightPosition:a,halfWidth:this.halfWidth,halfHeight:this.halfHeight,reflectedLight:o,ltc_1:t,ltc_2:s},e.stack,e)}static setLTC(e){cS=e}}class pS extends q_{static get type(){return"SpotLightNode"}constructor(e=null){super(e),this.coneCosNode=bn(0).setGroup(fn),this.penumbraCosNode=bn(0).setGroup(fn),this.cutoffDistanceNode=bn(0).setGroup(fn),this.decayExponentNode=bn(0).setGroup(fn)}update(e){super.update(e);const{light:t}=this;this.coneCosNode.value=Math.cos(t.angle),this.penumbraCosNode.value=Math.cos(t.angle*(1-t.penumbra)),this.cutoffDistanceNode.value=t.distance,this.decayExponentNode.value=t.decay}getSpotAttenuation(e){const{coneCosNode:t,penumbraCosNode:s}=this;return Do(t,s,e)}setup(e){super.setup(e);const t=e.context.lightingModel,{colorNode:s,cutoffDistanceNode:r,decayExponentNode:i,light:n}=this,a=J_(n).sub(El),o=a.normalize(),u=o.dot(tN(n)),l=this.getSpotAttenuation(u),d=a.length(),c=X_({lightDistance:d,cutoffDistance:r,decayExponent:i}),h=s.mul(l).mul(c),p=e.context.reflectedLight;t.direct({lightDirection:o,lightColor:h,reflectedLight:p},e.stack,e)}}class gS extends pS{static get type(){return"IESSpotLightNode"}getSpotAttenuation(e){const t=this.light.iesMap;let s=null;if(t&&!0===t.isTexture){const r=e.acos().mul(1/Math.PI);s=ju(t,ki(r,0),0).r}else s=super.getSpotAttenuation(e);return s}}class mS extends q_{static get type(){return"AmbientLightNode"}constructor(e=null){super(e)}setup({context:e}){e.irradiance.addAssign(this.colorNode)}}class fS extends q_{static get type(){return"HemisphereLightNode"}constructor(t=null){super(t),this.lightPositionNode=Q_(t),this.lightDirectionNode=this.lightPositionNode.normalize(),this.groundColorNode=bn(new e).setGroup(fn)}update(e){const{light:t}=this;super.update(e),this.lightPositionNode.object3d=t,this.groundColorNode.value.copy(t.groundColor).multiplyScalar(t.intensity)}setup(e){const{colorNode:t,groundColorNode:s,lightDirectionNode:r}=this,i=Ll.dot(r).mul(.5).add(.5),n=Po(s,t,i);e.context.irradiance.addAssign(n)}}class xS extends q_{static get type(){return"LightProbeNode"}constructor(e=null){super(e);const t=[];for(let e=0;e<9;e++)t.push(new s);this.lightProbe=td(t)}update(e){const{light:t}=this;super.update(e);for(let e=0;e<9;e++)this.lightProbe.array[e].copy(t.sh.coefficients[e]).multiplyScalar(t.intensity)}setup(e){const t=nS(Vl,this.lightProbe);e.context.irradiance.addAssign(t)}}class yS{parseFunction(){console.warn("Abstract function.")}}class bS{constructor(e,t,s="",r=""){this.type=e,this.inputs=t,this.name=s,this.precision=r}getCode(){console.warn("Abstract function.")}}bS.isNodeFunction=!0;const TS=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,_S=/[a-z_0-9]+/gi,NS="#pragma main";class vS extends bS{constructor(e){const{type:t,inputs:s,name:r,precision:i,inputsCode:n,blockCode:a,headerCode:o}=(e=>{const t=(e=e.trim()).indexOf(NS),s=-1!==t?e.slice(t+12):e,r=s.match(TS);if(null!==r&&5===r.length){const i=r[4],n=[];let a=null;for(;null!==(a=_S.exec(i));)n.push(a);const o=[];let u=0;for(;u<n.length;){const e="const"===n[u][0];!0===e&&u++;let t=n[u][0];"in"===t||"out"===t||"inout"===t?u++:t="";const s=n[u++][0];let r=Number.parseInt(n[u][0]);!1===Number.isNaN(r)?u++:r=null;const i=n[u++][0];o.push(new nx(s,i,r,t,e))}const l=s.substring(r[0].length),d=void 0!==r[3]?r[3]:"";return{type:r[2],inputs:o,name:d,precision:void 0!==r[1]?r[1]:"",inputsCode:i,blockCode:l,headerCode:-1!==t?e.slice(0,t):""}}throw new Error("FunctionNode: Function is not a GLSL code.")})(e);super(t,s,r,i),this.inputsCode=n,this.blockCode=a,this.headerCode=o}getCode(e=this.name){let t;const s=this.blockCode;if(""!==s){const{type:r,inputsCode:i,headerCode:n,precision:a}=this;let o=`${r} ${e} ( ${i.trim()} )`;""!==a&&(o=`${a} ${o}`),t=n+o+s}else t="";return t}}class SS extends yS{parseFunction(e){return new vS(e)}}function AS(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function RS(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}class CS{constructor(){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparent=[],this.bundles=[],this.lightsNode=new Jc([]),this.lightsArray=[],this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,s,r,i,n){let a=this.renderItems[this.renderItemsIndex];return void 0===a?(a={id:e.id,object:e,geometry:t,material:s,groupOrder:r,renderOrder:e.renderOrder,z:i,group:n},this.renderItems[this.renderItemsIndex]=a):(a.id=e.id,a.object=e,a.geometry=t,a.material=s,a.groupOrder=r,a.renderOrder=e.renderOrder,a.z=i,a.group=n),this.renderItemsIndex++,a}push(e,t,s,r,i,n){const a=this.getNextRenderItem(e,t,s,r,i,n);!0===e.occlusionTest&&this.occlusionQueryCount++,(!0===s.transparent||s.transmission>0?this.transparent:this.opaque).push(a)}unshift(e,t,s,r,i,n){const a=this.getNextRenderItem(e,t,s,r,i,n);(!0===s.transparent?this.transparent:this.opaque).unshift(a)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}getLightsNode(){return this.lightsNode.fromLights(this.lightsArray)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||AS),this.transparent.length>1&&this.transparent.sort(t||RS)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const t=this.renderItems[e];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.groupOrder=null,t.renderOrder=null,t.z=null,t.group=null}}}class ES{constructor(){this.lists=new _m}get(e,t){const s=this.lists,r=[e,t];let i=s.get(r);return void 0===i&&(i=new CS,s.set(r,i)),i}dispose(){this.lists=new _m}}let wS=0;class MS{constructor(){this.id=wS++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new r,this.scissor=!1,this.scissorValue=new r,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.sampleCount=1,this.width=0,this.height=0,this.isRenderContext=!0}getCacheKey(){return BS(this)}}function BS(e){const{textures:t,activeCubeFace:s}=e;let r="";for(const e of t)r+=e.id+",";return r+=s,r}class US{constructor(){this.chainMaps={}}get(e,t,s=null){const r=[e,t];let i;if(null===s)i="default";else{const e=s.texture.format;i=`${s.textures.length}:${e}:${s.samples}:${s.depthBuffer}:${s.stencilBuffer}`}const n=this.getChainMap(i);let a=n.get(r);return void 0===a&&(a=new MS,n.set(r,a)),null!==s&&(a.sampleCount=0===s.samples?1:s.samples),a}getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new _m)}dispose(){this.chainMaps={}}}const FS=new s;class PS extends Em{constructor(e,t,s){super(),this.renderer=e,this.backend=t,this.info=s}updateRenderTarget(e,t=0){const s=this.get(e),r=0===e.samples?1:e.samples,i=s.depthTextureMips||(s.depthTextureMips={}),n=e.textures,a=this.getSize(n[0]),o=a.width>>t,u=a.height>>t;let l=e.depthTexture||i[t],d=!1;void 0===l&&(l=new V,l.format=e.stencilBuffer?qe:Xe,l.type=e.stencilBuffer?Ke:b,l.image.width=o,l.image.height=u,i[t]=l),s.width===a.width&&a.height===s.height||(d=!0,l.needsUpdate=!0,l.image.width=o,l.image.height=u),s.width=a.width,s.height=a.height,s.textures=n,s.depthTexture=l,s.depth=e.depthBuffer,s.stencil=e.stencilBuffer,s.renderTarget=e,s.sampleCount!==r&&(d=!0,l.needsUpdate=!0,s.sampleCount=r);const c={sampleCount:r};for(let e=0;e<n.length;e++){const t=n[e];d&&(t.needsUpdate=!0),this.updateTexture(t,c)}if(this.updateTexture(l,c),!0!==s.initialized){s.initialized=!0;const t=()=>{e.removeEventListener("dispose",t);for(let e=0;e<n.length;e++)this._destroyTexture(n[e]);this._destroyTexture(l),this.delete(e)};e.addEventListener("dispose",t)}}updateTexture(e,t={}){const s=this.get(e);if(!0===s.initialized&&s.version===e.version)return;const r=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,i=this.backend;if(r&&!0===s.initialized&&(i.destroySampler(e),i.destroyTexture(e)),e.isFramebufferTexture){const t=this.renderer.getRenderTarget();e.type=t?t.texture.type:Ye}const{width:n,height:a,depth:o}=this.getSize(e);if(t.width=n,t.height=a,t.depth=o,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,n,a):1,r||!0===e.isStorageTexture)i.createSampler(e),i.createTexture(e,t),s.generation=e.version;else{if(!0!==s.initialized&&i.createSampler(e),e.version>0){const r=e.image;if(void 0===r)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(!1===r.complete)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const s=[];for(const t of e.images)s.push(t);t.images=s}else t.image=r;void 0!==s.isDefaultTexture&&!0!==s.isDefaultTexture||(i.createTexture(e,t),s.isDefaultTexture=!1,s.generation=e.version),!0===e.source.dataReady&&i.updateTexture(e,t),t.needsMipmaps&&0===e.mipmaps.length&&i.generateMipmaps(e)}}else i.createDefaultTexture(e),s.isDefaultTexture=!0,s.generation=e.version}if(!0!==s.initialized){s.initialized=!0,s.generation=e.version,this.info.memory.textures++;const t=()=>{e.removeEventListener("dispose",t),this._destroyTexture(e),this.info.memory.textures--};e.addEventListener("dispose",t)}s.version=e.version}getSize(e,t=FS){let s=e.images?e.images[0]:e.image;return s?(void 0!==s.image&&(s=s.image),t.width=s.width,t.height=s.height,t.depth=e.isCubeTexture?6:s.depth||1):t.width=t.height=t.depth=1,t}getMipLevels(e,t,s){let r;return r=e.isCompressedTexture?e.mipmaps.length:Math.floor(Math.log2(Math.max(t,s)))+1,r}needsMipmaps(e){return!!this.isEnvironmentTexture(e)||(!0===e.isCompressedTexture||e.minFilter!==ze&&e.minFilter!==K)}isEnvironmentTexture(e){const t=e.mapping;return t===se||t===re||t===v||t===A}_destroyTexture(e){this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e)}}class IS extends e{constructor(e,t,s,r=1){super(e,t,s),this.a=r}set(e,t,s,r=1){return this.a=r,super.set(e,t,s)}copy(e){return void 0!==e.a&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}const LS=new IS;class VS extends Em{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,s){const r=this.renderer,i=this.nodes.getBackgroundNode(e)||e.background;let n=!1;if(null===i)r._clearColor.getRGB(LS,d),LS.a=r._clearColor.a;else if(!0===i.isColor)i.getRGB(LS,d),LS.a=1,n=!0;else if(!0===i.isNode){const s=this.get(e),n=i;LS.copy(r._clearColor);let a=s.backgroundMesh;if(void 0===a){const e=qo(Yi(n).mul(hy),{getUV:()=>Vl,getTextureLevel:()=>ly});let t=Ec();t=t.setZ(t.w);const r=new Oh;r.name="Background.material",r.side=N,r.depthTest=!1,r.depthWrite=!1,r.fog=!1,r.lights=!1,r.vertexNode=t,r.colorNode=e,s.backgroundMeshNode=e,s.backgroundMesh=a=new q(new Qe(1,32,32),r),a.frustumCulled=!1,a.name="Background.mesh",a.onBeforeRender=function(e,t,s){this.matrixWorld.copyPosition(s.matrixWorld)}}const o=n.getCacheKey();s.backgroundCacheKey!==o&&(s.backgroundMeshNode.node=Yi(n).mul(hy),s.backgroundMeshNode.needsUpdate=!0,a.material.needsUpdate=!0,s.backgroundCacheKey=o),t.unshift(a,a.geometry,a.material,0,0,null)}else console.error("THREE.Renderer: Unsupported background configuration.",i);if(!0===r.autoClear||!0===n){LS.multiplyScalar(LS.a);const e=s.clearColorValue;e.r=LS.r,e.g=LS.g,e.b=LS.b,e.a=LS.a,s.depthClearValue=r._clearDepth,s.stencilClearValue=r._clearStencil,s.clearColor=!0===r.autoClearColor,s.clearDepth=!0===r.autoClearDepth,s.clearStencil=!0===r.autoClearStencil}else s.clearColor=!1,s.clearDepth=!1,s.clearStencil=!1}}class DS{constructor(e,t,s,r,i,n,a,o,u,l=!0,d=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=s,this.transforms=d,this.nodeAttributes=r,this.bindings=i,this.updateNodes=n,this.updateBeforeNodes=a,this.updateAfterNodes=o,this.monitor=u,this.instanceBindGroups=l,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings){if(!0!==(this.instanceBindGroups&&t.bindings[0].groupNode.shared)){const s=new Zf(t.name,[],t.index,t);e.push(s);for(const e of t.bindings)s.bindings.push(e.clone())}else e.push(t)}return e}}const OS=new WeakMap;class GS extends Em{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new ix,this.nodeBuilderCache=new Map,this.callHashCache=new _m,this.groupsData=new _m}updateGroup(e){const t=e.groupNode,s=t.name;if(s===xn.name)return!0;if(s===fn.name){const t=this.get(e),s=this.nodeFrame.renderId;return t.renderId!==s&&(t.renderId=s,!0)}if(s===mn.name){const t=this.get(e),s=this.nodeFrame.frameId;return t.frameId!==s&&(t.frameId=s,!0)}const r=[t,e];let i=this.groupsData.get(r);return void 0===i&&this.groupsData.set(r,i={}),i.version!==t.version&&(i.version=t.version,!0)}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const{nodeBuilderCache:r}=this,i=this.getForRenderCacheKey(e);if(s=r.get(i),void 0===s){const t=this.backend.createNodeBuilder(e.object,this.renderer);t.scene=e.scene,t.material=e.material,t.camera=e.camera,t.context.material=e.material,t.lightsNode=e.lightsNode,t.environmentNode=this.getEnvironmentNode(e.scene),t.fogNode=this.getFogNode(e.scene),t.clippingContext=e.clippingContext,t.build(),s=this._createNodeBuilderState(t),r.set(i,s)}s.usedTimes++,t.nodeBuilderState=s}return s}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,0===t.usedTimes&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let s=t.nodeBuilderState;if(void 0===s){const r=this.backend.createNodeBuilder(e,this.renderer);r.build(),s=this._createNodeBuilderState(r),t.nodeBuilderState=s}return s}_createNodeBuilderState(e){return new DS(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.monitor,e.instanceBindGroups,e.transforms)}getEnvironmentNode(e){return e.environmentNode||this.get(e).environmentNode||null}getBackgroundNode(e){return e.backgroundNode||this.get(e).backgroundNode||null}getFogNode(e){return e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){const s=[e,t],r=this.renderer.info.calls;let i=this.callHashCache.get(s);if(void 0===i||i.callId!==r){const n=this.getEnvironmentNode(e),a=this.getFogNode(e),o=[];t&&o.push(t.getCacheKey(!0)),n&&o.push(n.getCacheKey()),a&&o.push(a.getCacheKey()),i={callId:r,cacheKey:o.join(",")},this.callHashCache.set(s,i)}return i.cacheKey}updateScene(e){this.updateEnvironment(e),this.updateFog(e),this.updateBackground(e)}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),s=e.background;if(s){const r=0===e.backgroundBlurriness&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&0===t.backgroundBlurriness;if(t.background!==s||r){let r=null;if(!0===s.isCubeTexture||s.mapping===se||s.mapping===re||s.mapping===Ce)if(e.backgroundBlurriness>0||s.mapping===Ce)r=Og(s,Vl);else{let e;e=!0===s.isCubeTexture?Kl(s):ju(s),r=np(e)}else!0===s.isTexture?r=ju(s,dh.flipY()).setUpdateMatrix(!0):!0!==s.isColor&&console.error("WebGPUNodes: Unsupported background configuration.",s);t.backgroundNode=r,t.background=s,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}updateFog(e){const t=this.get(e),s=e.fog;if(s){if(t.fog!==s){let e=null;if(s.isFogExp2){const t=nd("color","color",s).setGroup(fn),r=nd("density","float",s).setGroup(fn);e=F_(t,r)}else if(s.isFog){const t=nd("color","color",s).setGroup(fn),r=nd("near","float",s).setGroup(fn),i=nd("far","float",s).setGroup(fn);e=B_(t,r,i)}else console.error("WebGPUNodes: Unsupported fog configuration.",s);t.fogNode=e,t.fog=s}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),s=e.environment;if(s){if(t.environment!==s){let e=null;!0===s.isCubeTexture?e=Kl(s):!0===s.isTexture?e=ju(s):console.error("Nodes: Unsupported environment configuration.",s),t.environmentNode=e,t.environment=s}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,s=null,r=null,i=null){const n=this.nodeFrame;return n.renderer=e,n.scene=t,n.object=s,n.camera=r,n.material=i,n}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace}hasOutputChange(e){return OS.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,s=this.getOutputCacheKey(),r=ju(e,dh).renderOutput(t.toneMapping,t.currentColorSpace);return OS.set(e,s),r}updateBefore(e){const t=e.getNodeBuilderState();for(const s of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(s)}updateAfter(e){const t=e.getNodeBuilderState();for(const s of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(s)}updateForCompute(e){const t=this.getNodeFrame(),s=this.getForCompute(e);for(const e of s.updateNodes)t.updateNode(e)}updateForRender(e){const t=this.getNodeFrameForRender(e),s=e.getNodeBuilderState();for(const e of s.updateNodes)t.updateNode(e)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new ix,this.nodeBuilderCache=new Map}}class zS{constructor(e,t){this.scene=e,this.camera=t}clone(){return Object.assign(new this.constructor,this)}}class kS{constructor(){this.lists=new _m}get(e,t){const s=this.lists,r=[e,t];let i=s.get(r);return void 0===i&&(i=new zS(e,t),s.set(r,i)),i}dispose(){this.lists=new _m}}class $S{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map,this.colorSpaceNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const s=this.getMaterialNodeClass(e.type);if(null!==s){t=new s;for(const s in e)t[s]=e[s]}return t}addColorSpace(e,t){this.addType(e,t,this.colorSpaceNodes)}getColorSpaceFunction(e){return this.colorSpaceNodes.get(e)||null}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t.name,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,s){if(s.has(t))console.warn(`Redefinition of node ${t}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"==typeof t||"object"==typeof t)throw new Error(`Base class ${t} is not a class.`);s.set(t,e)}}addClass(e,t,s){if(s.has(t))console.warn(`Redefinition of node ${t.name}`);else{if("function"!=typeof e)throw new Error(`Node class ${e.name} is not a class.`);if("function"!=typeof t)throw new Error(`Base class ${t.name} is not a class.`);s.set(t,e)}}}const HS=new X,WS=new t,jS=new r,qS=new tt,XS=new n,KS=new r;class YS{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:s=!1,alpha:i=!0,depth:n=!0,stencil:a=!1,antialias:o=!1,samples:u=0,getFallback:l=null}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=u||!0===o?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=i,this.logarithmicDepthBuffer=s,this.outputColorSpace=c,this.toneMapping=h,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=n,this.stencil=a,this.clippingPlanes=[],this.info=new Vm,this.nodes={library:new $S,modelViewMatrix:null,modelNormalViewMatrix:null},this._getFallback=l,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new r(0,0,this._width,this._height),this._scissor=new r(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new Jx(new Oh),this._quad.material.type="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const d=!0===this.alpha?0:1;this._clearColor=new IS(0,0,0,d),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:Ze},this.xr={enabled:!1},this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(e,t,s)=>{await this.compileAsync(e,t);const r=this._renderLists.get(e,t),i=this._renderContexts.get(e,t,this._renderTarget),n=e.overrideMaterial||s.material,a=this._objects.get(s,n,e,t,r.lightsNode,i),{fragmentShader:o,vertexShader:u}=a.getNodeBuilderState();return{fragmentShader:o,vertexShader:u}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return null!==this._initPromise||(this._initPromise=new Promise((async(e,t)=>{let s=this.backend;try{await s.init(this)}catch(e){if(null===this._getFallback)return void t(e);try{this.backend=s=this._getFallback(e),await s.init(this)}catch(e){return void t(e)}}this._nodes=new GS(this,s),this._animation=new Tm(this._nodes,this.info),this._attributes=new Fm(s),this._background=new VS(this,this._nodes),this._geometries=new Lm(this._attributes,this.info),this._textures=new PS(this,s,this.info),this._pipelines=new $m(s,this._nodes),this._bindings=new Hm(s,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new Cm(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new ES,this._bundles=new kS,this._renderContexts=new US,this._initialized=!0,e()}))),this._initPromise}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,s=null){!1===this._initialized&&await this.init();const r=this._nodes.nodeFrame,i=r.renderId,n=this._currentRenderContext,a=this._currentRenderObjectFunction,o=this._compilationPromises,u=!0===e.isScene?e:HS;null===s&&(s=e);const l=this._renderTarget,d=this._renderContexts.get(s,t,l),c=this._activeMipmapLevel,h=[];this._currentRenderContext=d,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=h,r.renderId++,r.update(),d.depth=this.depth,d.stencil=this.stencil,d.clippingContext||(d.clippingContext=new vm),d.clippingContext.updateGlobal(this,t),u.onBeforeRender(this,e,t,l);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p),s!==e&&s.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&p.pushLight(e)})),p.finish(),null!==l){this._textures.updateRenderTarget(l,c);const e=this._textures.get(l);d.textures=e.textures,d.depthTexture=e.depthTexture}else d.textures=null,d.depthTexture=null;this._nodes.updateScene(u),this._background.update(u,p,d);const g=p.opaque,m=p.transparent,f=p.lightsNode;!0===this.opaque&&g.length>0&&this._renderObjects(g,t,u,f),!0===this.transparent&&m.length>0&&this._renderObjects(m,t,u,f),r.renderId=i,this._currentRenderContext=n,this._currentRenderObjectFunction=a,this._compilationPromises=o,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(h)}async renderAsync(e,t){!1===this._initialized&&await this.init();const s=this._renderScene(e,t);await this.backend.resolveTimestampAsync(s,"render")}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}_renderBundle(e,t,s){const{bundleGroup:r,camera:i,renderList:n}=e,a=this._currentRenderContext,o=this._bundles.get(r,i),u=this.backend.get(o);void 0===u.renderContexts&&(u.renderContexts=new Set);const l=r.version!==u.version,d=!1===u.renderContexts.has(a)||l;if(u.renderContexts.add(a),d){this.backend.beginBundle(a),(void 0===u.renderObjects||l)&&(u.renderObjects=[]),this._currentRenderBundle=o;const e=n.opaque;e.length>0&&this._renderObjects(e,i,t,s),this._currentRenderBundle=null,this.backend.finishBundle(a,o),u.version=r.version}else{const{renderObjects:e}=u;for(let t=0,s=e.length;t<s;t++){const s=e[t];this._nodes.needsRefresh(s)&&(this._nodes.updateBefore(s),this._nodes.updateForRender(s),this._bindings.updateForRender(s),this._nodes.updateAfter(s))}}this.backend.addBundle(a,o)}render(e,t){if(!1===this._initialized)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this;if(!1===(e!==h)&&!1===(t!==d))return null;const{width:s,height:r}=this.getDrawingBufferSize(WS),{depth:i,stencil:n}=this;let a=this._frameBufferTarget;return null===a&&(a=new Re(s,r,{depthBuffer:i,stencilBuffer:n,type:Me,format:Be,colorSpace:d,generateMipmaps:!1,minFilter:K,magFilter:K,samples:this.samples}),a.isPostProcessingRenderTarget=!0,this._frameBufferTarget=a),a.depthBuffer=i,a.stencilBuffer=n,a.setSize(s,r),a.viewport.copy(this._viewport),a.scissor.copy(this._scissor),a.viewport.multiplyScalar(this._pixelRatio),a.scissor.multiplyScalar(this._pixelRatio),a.scissorTest=this._scissorTest,a}_renderScene(e,t,s=!0){const r=s?this._getFrameBufferTarget():null,i=this._nodes.nodeFrame,n=i.renderId,a=this._currentRenderContext,o=this._currentRenderObjectFunction,u=!0===e.isScene?e:HS,l=this._renderTarget,d=this._activeCubeFace,c=this._activeMipmapLevel;let h;null!==r?(h=r,this.setRenderTarget(h)):h=l;const p=this._renderContexts.get(e,t,h);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,i.renderId=this.info.calls;const g=this.coordinateSystem;t.coordinateSystem!==g&&(t.coordinateSystem=g,t.updateProjectionMatrix()),!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld();let m=this._viewport,f=this._scissor,x=this._pixelRatio;null!==h&&(m=h.viewport,f=h.scissor,x=1),this.getDrawingBufferSize(WS),jS.set(0,0,WS.width,WS.height);const y=void 0===m.minDepth?0:m.minDepth,b=void 0===m.maxDepth?1:m.maxDepth;p.viewportValue.copy(m).multiplyScalar(x).floor(),p.viewportValue.width>>=c,p.viewportValue.height>>=c,p.viewportValue.minDepth=y,p.viewportValue.maxDepth=b,p.viewport=!1===p.viewportValue.equals(jS),p.scissorValue.copy(f).multiplyScalar(x).floor(),p.scissor=this._scissorTest&&!1===p.scissorValue.equals(jS),p.scissorValue.width>>=c,p.scissorValue.height>>=c,p.clippingContext||(p.clippingContext=new vm),p.clippingContext.updateGlobal(this,t),u.onBeforeRender(this,e,t,h),XS.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),qS.setFromProjectionMatrix(XS,g);const T=this._renderLists.get(e,t);if(T.begin(),this._projectObject(e,t,0,T),T.finish(),!0===this.sortObjects&&T.sort(this._opaqueSort,this._transparentSort),null!==h){this._textures.updateRenderTarget(h,c);const e=this._textures.get(h);p.textures=e.textures,p.depthTexture=e.depthTexture,p.width=e.width,p.height=e.height,p.renderTarget=h,p.depth=h.depthBuffer,p.stencil=h.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=c,p.height>>=c,p.activeCubeFace=d,p.activeMipmapLevel=c,p.occlusionQueryCount=T.occlusionQueryCount,this._nodes.updateScene(u),this._background.update(u,T,p),this.backend.beginRender(p);const{bundles:_,lightsNode:N,transparent:v,opaque:S}=T;if(_.length>0&&this._renderBundles(_,u,N),!0===this.opaque&&S.length>0&&this._renderObjects(S,t,u,N),!0===this.transparent&&v.length>0&&this._renderObjects(v,t,u,N),this.backend.finishRender(p),i.renderId=n,this._currentRenderContext=a,this._currentRenderObjectFunction=o,null!==r){this.setRenderTarget(l,d,c);const e=this._quad;this._nodes.hasOutputChange(h.texture)&&(e.material.fragmentNode=this._nodes.getOutputNode(h.texture),e.material.needsUpdate=!0),this._renderScene(e,e.camera,!1)}return u.onAfterRender(this,e,t,h),p}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){!1===this._initialized&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio=e,this.setSize(this._width,this._height,!1)}setDrawingBufferSize(e,t,s){this._width=e,this._height=t,this._pixelRatio=s,this.domElement.width=Math.floor(e*s),this.domElement.height=Math.floor(t*s),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setSize(e,t,s=!0){this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),!0===s&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize()}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,s,r){const i=this._scissor;e.isVector4?i.copy(e):i.set(e,t,s,r)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,s,r,i=0,n=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,s,r),a.minDepth=i,a.maxDepth=n}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,s=!0){if(!1===this._initialized)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,s);const r=this._renderTarget||this._getFrameBufferTarget();let i=null;if(null!==r&&(this._textures.updateRenderTarget(r),i=this._textures.get(r)),this.backend.clear(e,t,s,i),null!==r&&null===this._renderTarget){const e=this._quad;this._nodes.hasOutputChange(r.texture)&&(e.material.fragmentNode=this._nodes.getOutputNode(r.texture),e.material.needsUpdate=!0),this._renderScene(e,e.camera,!1)}}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,s=!0){!1===this._initialized&&await this.init(),this.clear(e,t,s)}clearColorAsync(){return this.clearAsync(!0,!1,!1)}clearDepthAsync(){return this.clearAsync(!1,!0,!1)}clearStencilAsync(){return this.clearAsync(!1,!1,!0)}get currentToneMapping(){return null!==this._renderTarget?h:this.toneMapping}get currentColorSpace(){return null!==this._renderTarget?d:this.outputColorSpace}dispose(){this.info.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,s=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=s}getRenderTarget(){return this._renderTarget}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}async computeAsync(e){!1===this._initialized&&await this.init();const t=this._nodes.nodeFrame,s=t.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,t.renderId=this.info.calls;const r=this.backend,i=this._pipelines,n=this._bindings,a=this._nodes,o=Array.isArray(e)?e:[e];if(void 0===o[0]||!0!==o[0].isComputeNode)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");r.beginCompute(e);for(const t of o){if(!1===i.has(t)){const e=()=>{t.removeEventListener("dispose",e),i.delete(t),n.delete(t),a.delete(t)};t.addEventListener("dispose",e),t.onInit({renderer:this})}a.updateForCompute(t),n.updateForCompute(t);const s=n.getForCompute(t),o=i.getForCompute(t,s);r.compute(e,t,s,o)}r.finishCompute(e),await this.backend.resolveTimestampAsync(e,"compute"),t.renderId=s}async hasFeatureAsync(e){return!1===this._initialized&&await this.init(),this.backend.hasFeature(e)}hasFeature(e){return!1===this._initialized?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}copyFramebufferToTexture(e){const t=this._currentRenderContext;this._textures.updateTexture(e),this.backend.copyFramebufferToTexture(e,t)}copyTextureToTexture(e,t,s=null,r=null,i=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,s,r,i)}readRenderTargetPixelsAsync(e,t,s,r,i,n=0,a=0){return this.backend.copyTextureToBuffer(e.textures[n],t,s,r,i,a)}_projectObject(e,t,s,r){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)s=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)r.pushLight(e);else if(e.isSprite){if(!e.frustumCulled||qS.intersectsSprite(e)){!0===this.sortObjects&&KS.setFromMatrixPosition(e.matrixWorld).applyMatrix4(XS);const{geometry:t,material:i}=e;i.visible&&r.push(e,t,i,s,KS.z,null)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||qS.intersectsObject(e))){const{geometry:t,material:i}=e;if(!0===this.sortObjects&&(null===t.boundingSphere&&t.computeBoundingSphere(),KS.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(XS)),Array.isArray(i)){const n=t.groups;for(let a=0,o=n.length;a<o;a++){const o=n[a],u=i[o.materialIndex];u&&u.visible&&r.push(e,t,u,s,KS.z,o)}}else i.visible&&r.push(e,t,i,s,KS.z,null)}if(!0===e.isBundleGroup&&void 0!==this.backend.beginBundle){const s=r;(r=this._renderLists.get(e,t)).begin(),s.pushBundle({bundleGroup:e,camera:t,renderList:r}),r.finish()}const i=e.children;for(let e=0,n=i.length;e<n;e++)this._projectObject(i[e],t,s,r)}_renderBundles(e,t,s){for(const r of e)this._renderBundle(r,t,s)}_renderObjects(e,t,s,r){for(let i=0,n=e.length;i<n;i++){const n=e[i],{object:a,geometry:o,material:u,group:l}=n;if(t.isArrayCamera){const e=t.cameras;for(let t=0,i=e.length;t<i;t++){const i=e[t];if(a.layers.test(i.layers)){const e=i.viewport,t=void 0===e.minDepth?0:e.minDepth,n=void 0===e.maxDepth?1:e.maxDepth,d=this._currentRenderContext.viewportValue;d.copy(e).multiplyScalar(this._pixelRatio).floor(),d.minDepth=t,d.maxDepth=n,this.backend.updateViewport(this._currentRenderContext),this._currentRenderObjectFunction(a,s,i,o,u,l,r)}}}else this._currentRenderObjectFunction(a,s,t,o,u,l,r)}}renderObject(e,t,s,r,i,n,a){let o,u,l;if(e.onBeforeRender(this,t,s,r,i,n),null!==t.overrideMaterial){const e=t.overrideMaterial;i.positionNode&&i.positionNode.isNode&&(o=e.positionNode,e.positionNode=i.positionNode),e.isShadowNodeMaterial&&(e.side=null===i.shadowSide?i.side:i.shadowSide,i.depthNode&&i.depthNode.isNode&&(l=e.depthNode,e.depthNode=i.depthNode),i.shadowNode&&i.shadowNode.isNode&&(u=e.fragmentNode,e.fragmentNode=i.shadowNode),this.localClippingEnabled&&(i.clipShadows?(e.clippingPlanes!==i.clippingPlanes&&(e.clippingPlanes=i.clippingPlanes,e.needsUpdate=!0),e.clipIntersection!==i.clipIntersection&&(e.clipIntersection=i.clipIntersection)):Array.isArray(e.clippingPlanes)&&(e.clippingPlanes=null,e.needsUpdate=!0))),i=e}!0===i.transparent&&i.side===Je&&!1===i.forceSinglePass?(i.side=N,this._handleObjectFunction(e,i,t,s,a,n,"backSide"),i.side=et,this._handleObjectFunction(e,i,t,s,a,n),i.side=Je):this._handleObjectFunction(e,i,t,s,a,n),void 0!==o&&(t.overrideMaterial.positionNode=o),void 0!==l&&(t.overrideMaterial.depthNode=l),void 0!==u&&(t.overrideMaterial.fragmentNode=u),e.onAfterRender(this,t,s,r,i,n)}_renderObjectDirect(e,t,s,r,i,n,a){const o=this._objects.get(e,t,s,r,i,this._currentRenderContext,a);o.drawRange=e.geometry.drawRange,o.group=n;const u=this._nodes.needsRefresh(o);if(u&&(this._nodes.updateBefore(o),this._geometries.updateForRender(o),this._nodes.updateForRender(o),this._bindings.updateForRender(o)),this._pipelines.updateForRender(o),null!==this._currentRenderBundle){this.backend.get(this._currentRenderBundle).renderObjects.push(o),o.bundle=this._currentRenderBundle.scene}this.backend.draw(o,this.info),u&&this._nodes.updateAfter(o)}_createObjectPipeline(e,t,s,r,i,n){const a=this._objects.get(e,t,s,r,i,this._currentRenderContext,n);this._nodes.updateBefore(a),this._geometries.updateForRender(a),this._nodes.updateForRender(a),this._bindings.updateForRender(a),this._pipelines.getForRender(a,this._compilationPromises),this._nodes.updateAfter(a)}get compute(){return this.computeAsync}get compile(){return this.compileAsync}}class QS{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}class ZS extends QS{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return(e=this._buffer.byteLength)+(Um-e%Um)%Um;var e}get buffer(){return this._buffer}update(){return!0}}class JS extends ZS{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let eA=0;class tA extends JS{constructor(e,t){super("UniformBuffer_"+eA++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class sA extends JS{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return-1!==t&&this.uniforms.splice(t,1),this}get values(){return null===this._values&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(null===e){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){let e=0;for(let t=0,s=this.uniforms.length;t<s;t++){const s=this.uniforms[t],{boundary:r,itemSize:i}=s,n=e%Um;0!==n&&Um-n-r<0?e+=Um-n:n%r!=0&&(e+=n%r),s.offset=e/this.bytesPerElement,e+=i*this.bytesPerElement}return Math.ceil(e/Um)*Um}update(){let e=!1;for(const t of this.uniforms)!0===this.updateByType(t)&&(e=!0);return e}updateByType(e){return e.isNumberUniform?this.updateNumber(e):e.isVector2Uniform?this.updateVector2(e):e.isVector3Uniform?this.updateVector3(e):e.isVector4Uniform?this.updateVector4(e):e.isColorUniform?this.updateColor(e):e.isMatrix3Uniform?this.updateMatrix3(e):e.isMatrix4Uniform?this.updateMatrix4(e):void console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i]!==r){this.buffer[i]=s[i]=r,t=!0}return t}updateVector2(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i+0]!==r.x||s[i+1]!==r.y){const e=this.buffer;e[i+0]=s[i+0]=r.x,e[i+1]=s[i+1]=r.y,t=!0}return t}updateVector3(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i+0]!==r.x||s[i+1]!==r.y||s[i+2]!==r.z){const e=this.buffer;e[i+0]=s[i+0]=r.x,e[i+1]=s[i+1]=r.y,e[i+2]=s[i+2]=r.z,t=!0}return t}updateVector4(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i+0]!==r.x||s[i+1]!==r.y||s[i+2]!==r.z||s[i+4]!==r.w){const e=this.buffer;e[i+0]=s[i+0]=r.x,e[i+1]=s[i+1]=r.y,e[i+2]=s[i+2]=r.z,e[i+3]=s[i+3]=r.w,t=!0}return t}updateColor(e){let t=!1;const s=this.values,r=e.getValue(),i=e.offset;if(s[i+0]!==r.r||s[i+1]!==r.g||s[i+2]!==r.b){const e=this.buffer;e[i+0]=s[i+0]=r.r,e[i+1]=s[i+1]=r.g,e[i+2]=s[i+2]=r.b,t=!0}return t}updateMatrix3(e){let t=!1;const s=this.values,r=e.getValue().elements,i=e.offset;if(s[i+0]!==r[0]||s[i+1]!==r[1]||s[i+2]!==r[2]||s[i+4]!==r[3]||s[i+5]!==r[4]||s[i+6]!==r[5]||s[i+8]!==r[6]||s[i+9]!==r[7]||s[i+10]!==r[8]){const e=this.buffer;e[i+0]=s[i+0]=r[0],e[i+1]=s[i+1]=r[1],e[i+2]=s[i+2]=r[2],e[i+4]=s[i+4]=r[3],e[i+5]=s[i+5]=r[4],e[i+6]=s[i+6]=r[5],e[i+8]=s[i+8]=r[6],e[i+9]=s[i+9]=r[7],e[i+10]=s[i+10]=r[8],t=!0}return t}updateMatrix4(e){let t=!1;const s=this.values,r=e.getValue().elements,i=e.offset;if(!1===function(e,t,s){for(let r=0,i=t.length;r<i;r++)if(e[s+r]!==t[r])return!1;return!0}(s,r,i)){this.buffer.set(r,i),function(e,t,s){for(let r=0,i=t.length;r<i;r++)e[s+r]=t[r]}(s,r,i),t=!0}return t}}let rA=0;class iA extends sA{constructor(e,t){super(e),this.id=rA++,this.groupNode=t,this.isNodeUniformsGroup=!0}getNodes(){const e=[];for(const t of this.uniforms){const s=t.nodeUniform.node;if(!s)throw new Error("NodeUniformsGroup: Uniform has no node.");e.push(s)}return e}}let nA=0;class aA extends QS{constructor(e,t){super(e),this.id=nA++,this.texture=t,this.version=t?t.version:0,this.store=!1,this.generation=null,this.isSampledTexture=!0}needsBindingsUpdate(e){const{texture:t}=this;return e!==this.generation?(this.generation=e,!0):t.isVideoTexture}update(){const{texture:e,version:t}=this;return t!==e.version&&(this.version=e.version,!0)}}class oA extends aA{constructor(e,t,s,r=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s,this.access=r}needsBindingsUpdate(e){return this.textureNode.value!==this.texture||super.needsBindingsUpdate(e)}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class uA extends oA{constructor(e,t,s,r){super(e,t,s,r),this.isSampledCubeTexture=!0}}class lA extends oA{constructor(e,t,s,r){super(e,t,s,r),this.isSampledTexture3D=!0}}const dA={atan2:"atan",textureDimensions:"textureSize",equals:"equal"},hA={low:"lowp",medium:"mediump",high:"highp"},pA={swizzleAssign:!0,storageBuffer:!1},gA="\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\nprecision highp sampler3D;\nprecision highp samplerCube;\nprecision highp sampler2DArray;\n\nprecision highp usampler2D;\nprecision highp usampler3D;\nprecision highp usamplerCube;\nprecision highp usampler2DArray;\n\nprecision highp isampler2D;\nprecision highp isampler3D;\nprecision highp isamplerCube;\nprecision highp isampler2DArray;\n\nprecision lowp sampler2DShadow;\n";class mA extends rx{constructor(e,t){super(e,t,new SS),this.uniformGroups={},this.transforms=[],this.extensions={},this.instanceBindGroups=!1,this.useComparisonMethod=!0}needsColorSpaceToLinearSRGB(e){return!0===e.isVideoTexture&&e.colorSpace!==y}getMethod(e){return dA[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(this.getType(e.type)+" "+e.name);return`${this.getType(t.type)} ${t.name}( ${r.join(", ")} ) {\n\n\t${s.vars}\n\n${s.code}\n\treturn ${s.result};\n\n}`}setupPBO(e){const t=e.value;if(void 0===t.pbo){const e=t.array,s=t.count*t.itemSize,{itemSize:r}=t,i=t.array.constructor.name.toLowerCase().includes("int");let n=i?st:rt;2===r?n=i?it:je:3===r?n=i?nt:at:4===r&&(n=i?ot:Be);const a={Float32Array:F,Uint8Array:Ye,Uint16Array:ut,Uint32Array:b,Int8Array:lt,Int16Array:ct,Int32Array:T,Uint8ClampedArray:Ye},o=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(s/r))));let u=Math.ceil(s/r/o);o*u*r<s&&u++;const l=o*u*r,d=new e.constructor(l);d.set(e,0),t.array=d;const c=new Oe(t.array,o,u,n,a[t.array.constructor.name]||F);c.needsUpdate=!0,c.isPBOTexture=!0;const h=new Wu(c,null,null);h.setPrecision("high"),t.pboNode=h,t.pbo=h.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.label)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&!0!==e.node.isTextureNode&&!0!==e.node.isBufferNode?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:s}=e,r=t.value;if(this.renderer.backend.has(r)){this.renderer.backend.get(r).pbo=r.pbo}const i=this.getUniformFromNode(r.pboNode,"texture",this.shaderStage,this.context.label),n=this.getPropertyName(i);this.increaseUsage(s);const a=s.build(this,"uint"),o=this.getDataFromNode(e);let u=o.propertyName;if(void 0===u){const s=this.getVarFromNode(e);u=this.getPropertyName(s);const i=this.getDataFromNode(t);let l=i.propertySizeName;void 0===l&&(l=u+"Size",this.getVarFromNode(t,l,"uint"),this.addLineFlowCode(`${l} = uint( textureSize( ${n}, 0 ).x )`),i.propertySizeName=l);const{itemSize:d}=r,c="."+Pr.join("").slice(0,d),h=`ivec2(${a} % ${l}, ${a} / ${l})`,p=this.generateTextureLoad(null,n,h,null,"0");let g="vec4";r.pbo.type===b?g="uvec4":r.pbo.type===T&&(g="ivec4"),this.addLineFlowCode(`${u} = ${g}(${p})${c}`),o.propertyName=u}return u}generateTextureLoad(e,t,s,r,i="0"){return r?`texelFetch( ${t}, ivec3( ${s}, ${r} ), ${i} )`:`texelFetch( ${t}, ${s}, ${i} )`}generateTexture(e,t,s,r){return e.isDepthTexture?`texture( ${t}, ${s} ).x`:(r&&(s=`vec3( ${s}, ${r} )`),`texture( ${t}, ${s} )`)}generateTextureLevel(e,t,s,r){return`textureLod( ${t}, ${s}, ${r} )`}generateTextureBias(e,t,s,r){return`texture( ${t}, ${s}, ${r} )`}generateTextureGrad(e,t,s,r){return`textureGrad( ${t}, ${s}, ${r[0]}, ${r[1]} )`}generateTextureCompare(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`texture( ${t}, vec3( ${s}, ${r} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${n} shader.`)}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`${this.getVar(e.type,e.name)};`);return t.join("\n\t")}getUniforms(e){const t=this.uniforms[e],s=[],r={};for(const i of t){let t=null,n=!1;if("texture"===i.type){const e=i.node.value;let s="";!0===e.isDataTexture&&(e.type===b?s="u":e.type===T&&(s="i")),t=e.compareFunction?`sampler2DShadow ${i.name};`:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?`${s}sampler2DArray ${i.name};`:`${s}sampler2D ${i.name};`}else if("cubeTexture"===i.type)t=`samplerCube ${i.name};`;else if("texture3D"===i.type)t=`sampler3D ${i.name};`;else if("buffer"===i.type){const e=i.node,s=this.getType(e.bufferType),r=e.bufferCount,n=r>0?r:"";t=`${e.name} {\n\t${s} ${i.name}[${n}];\n};\n`}else{t=`${this.getVectorType(i.type)} ${this.getPropertyName(i,e)};`,n=!0}const a=i.node.precision;if(null!==a&&(t=hA[a]+" "+t),n){t="\t"+t;const e=i.groupNode.name;(r[e]||(r[e]=[])).push(t)}else t="uniform "+t,s.push(t)}let i="";for(const t in r){const s=r[t];i+=this._getGLSLUniformStruct(e+"_"+t,s.join("\n"))+"\n"}return i+=s.join("\n"),i}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==T){let s=e;e.isInterleavedBufferAttribute&&(s=e.data);const r=s.array;!1==(r instanceof Uint32Array||r instanceof Int32Array)&&(t=t.slice(1))}return t}getAttributes(e){let t="";if("vertex"===e||"compute"===e){const e=this.getAttributesArray();let s=0;for(const r of e)t+=`layout( location = ${s++} ) in ${r.type} ${r.name};\n`}return t}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`layout( location = ${e} ) out ${r} m${e};`)}return t.join("\n")}getStructs(e){const t=[],s=this.structs[e];if(0===s.length)return"layout( location = 0 ) out vec4 fragColor;\n";for(let e=0,r=s.length;e<r;e++){const r=s[e];let i="\n";i+=this.getStructMembers(r),i+="\n",t.push(i)}return t.join("\n\n")}getVaryings(e){let t="";const s=this.varyings;if("vertex"===e||"compute"===e)for(const r of s){"compute"===e&&(r.needsInterpolation=!0);const s=r.type;t+=`${s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":""}${r.needsInterpolation?"out":"/*out*/"} ${s} ${r.name};\n`}else if("fragment"===e)for(const e of s)if(e.needsInterpolation){const s=e.type;t+=`${s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":""}in ${s} ${e.name};\n`}return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce(((e,t)=>e*t),1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,s=this.shaderStage){const r=this.extensions[s]||(this.extensions[s]=new Map);!1===r.has(e)&&r.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if("vertex"===e){const t=this.renderer.backend.extensions;this.object.isBatchedMesh&&t.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const s=this.extensions[e];if(void 0!==s)for(const{name:e,behavior:r}of s.values())t.push(`#extension ${e} : ${r}`);return t.join("\n")}isAvailable(e){let t=pA[e];if(void 0===t){if("float32Filterable"===e){const e=this.renderer.backend.extensions;e.has("OES_texture_float_linear")?(e.get("OES_texture_float_linear"),t=!0):t=!1}pA[e]=t}return t}isFlipY(){return!0}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let s=0;s<e.length;s++){const r=e[s],i=this.getPropertyName(r.attributeNode);t+=`${r.varyingName} = ${i};\n\t`}return t}_getGLSLUniformStruct(e,t){return`\nlayout( std140 ) uniform ${e} {\n${t}\n};`}_getGLSLVertexCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// extensions \n${e.extensions}\n\n// precision\n${gA}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// attributes\n${e.attributes}\n\n// codes\n${e.codes}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// transforms\n\t${e.transforms}\n\n\t// flow\n\t${e.flow}\n\n\tgl_PointSize = 1.0;\n\n}\n`}_getGLSLFragmentCode(e){return`#version 300 es\n\n${this.getSignature()}\n\n// precision\n${gA}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\n\n// codes\n${e.codes}\n\n${e.structs}\n\nvoid main() {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};for(const t in e){let s="// code\n\n";s+=this.flowCode[t];const r=this.flowNodes[t],i=r[r.length-1];for(const e of r){const r=this.getFlowData(e),n=e.name;n&&(s.length>0&&(s+="\n"),s+=`\t// flow -> ${n}\n\t`),s+=`${r.code}\n\t`,e===i&&"compute"!==t&&(s+="// result\n\t","vertex"===t?(s+="gl_Position = ",s+=`${r.result};`):"fragment"===t&&(e.outputNode.isOutputStructNode||(s+="fragColor = ",s+=`${r.result};`)))}const n=e[t];n.extensions=this.getExtensions(t),n.uniforms=this.getUniforms(t),n.attributes=this.getAttributes(t),n.varyings=this.getVaryings(t),n.vars=this.getVars(t),n.structs=this.getStructs(t),n.codes=this.getCodes(t),n.transforms=this.getTransforms(t),n.flow=s}null!==this.material?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,s,r=null){const i=super.getUniformFromNode(e,t,s,r),n=this.getDataFromNode(e,s,this.globalCache);let a=n.uniformGPU;if(void 0===a){const r=e.groupNode,o=r.name,u=this.getBindGroupArray(o,s);if("texture"===t)a=new oA(i.name,i.node,r),u.push(a);else if("cubeTexture"===t)a=new uA(i.name,i.node,r),u.push(a);else if("texture3D"===t)a=new lA(i.name,i.node,r),u.push(a);else if("buffer"===t){e.name=`NodeBuffer_${e.id}`,i.name=`buffer${e.id}`;const t=new tA(e,r);t.name=e.name,u.push(t),a=t}else{const e=this.uniformGroups[s]||(this.uniformGroups[s]={});let n=e[o];void 0===n&&(n=new iA(s+"_"+o,r),e[o]=n,u.push(n)),a=this.getNodeUniform(i,t),n.addUniform(a)}n.uniformGPU=a}return i}}let fA=null,xA=null,yA=null;class bA{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null}async init(e){this.renderer=e}begin(){}finish(){}draw(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}createRenderPipeline(){}createComputePipeline(){}destroyPipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}createDefaultTexture(){}createTexture(){}copyTextureToBuffer(){}createAttribute(){}createIndexAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}resolveTimestampAsync(){}hasFeatureAsync(){}hasFeature(){}getInstanceCount(e){const{object:t,geometry:s}=e;return s.isInstancedBufferGeometry?s.instanceCount:t.count>1?t.count:1}getDrawingBufferSize(){return fA=fA||new t,this.renderer.getDrawingBufferSize(fA)}getScissor(){return xA=xA||new r,this.renderer.getScissor(xA)}setScissorTest(){}getClearColor(){const e=this.renderer;return yA=yA||new IS,e.getClearColor(yA),yA.getRGB(yA,this.renderer.currentColorSpace),yA}getDomElement(){let e=this.domElement;return null===e&&(e=void 0!==this.parameters.canvas?this.parameters.canvas:ht(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Ie} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return void 0===t&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}}let TA=0;class _A{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[1^this.activeBufferIndex]}switchBuffers(){this.activeBufferIndex^=1}}class NA{constructor(e){this.backend=e}createAttribute(e,t){const s=this.backend,{gl:r}=s,i=e.array,n=e.usage||r.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,o=s.get(a);let u,l=o.bufferGPU;if(void 0===l&&(l=this._createBuffer(r,t,i,n),o.bufferGPU=l,o.bufferType=t,o.version=a.version),i instanceof Float32Array)u=r.FLOAT;else if(i instanceof Uint16Array)u=e.isFloat16BufferAttribute?r.HALF_FLOAT:r.UNSIGNED_SHORT;else if(i instanceof Int16Array)u=r.SHORT;else if(i instanceof Uint32Array)u=r.UNSIGNED_INT;else if(i instanceof Int32Array)u=r.INT;else if(i instanceof Int8Array)u=r.BYTE;else if(i instanceof Uint8Array)u=r.UNSIGNED_BYTE;else{if(!(i instanceof Uint8ClampedArray))throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+i);u=r.UNSIGNED_BYTE}let d={bufferGPU:l,bufferType:t,type:u,byteLength:i.byteLength,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===r.INT||u===r.UNSIGNED_INT||e.gpuType===T,id:TA++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const e=this._createBuffer(r,t,i,n);d=new _A(d,e)}s.set(e,d)}updateAttribute(e){const t=this.backend,{gl:s}=t,r=e.array,i=e.isInterleavedBufferAttribute?e.data:e,n=t.get(i),a=n.bufferType,o=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(s.bindBuffer(a,n.bufferGPU),0===o.length)s.bufferSubData(a,0,r);else{for(let e=0,t=o.length;e<t;e++){const t=o[e];s.bufferSubData(a,t.start*r.BYTES_PER_ELEMENT,r,t.start,t.count)}i.clearUpdateRanges()}s.bindBuffer(a,null),n.version=i.version}destroyAttribute(e){const t=this.backend,{gl:s}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const r=t.get(e);s.deleteBuffer(r.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:s}=t,r=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:i}=t.get(r),n=e.array,a=n.byteLength;s.bindBuffer(s.COPY_READ_BUFFER,i);const o=s.createBuffer();s.bindBuffer(s.COPY_WRITE_BUFFER,o),s.bufferData(s.COPY_WRITE_BUFFER,a,s.STREAM_READ),s.copyBufferSubData(s.COPY_READ_BUFFER,s.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const u=new e.array.constructor(n.length);return s.bindBuffer(s.COPY_WRITE_BUFFER,o),s.getBufferSubData(s.COPY_WRITE_BUFFER,0,u),s.deleteBuffer(o),s.bindBuffer(s.COPY_READ_BUFFER,null),s.bindBuffer(s.COPY_WRITE_BUFFER,null),u.buffer}_createBuffer(e,t,s,r){const i=e.createBuffer();return e.bindBuffer(t,i),e.bufferData(t,s,r),e.bindBuffer(t,null),i}}let vA,SA,AA=!1;class RA{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},!1===AA&&(this._init(this.gl),AA=!0)}_init(e){vA={[pt]:e.FUNC_ADD,[gt]:e.FUNC_SUBTRACT,[mt]:e.FUNC_REVERSE_SUBTRACT},SA={[ft]:e.ZERO,[xt]:e.ONE,[yt]:e.SRC_COLOR,[bt]:e.SRC_ALPHA,[Tt]:e.SRC_ALPHA_SATURATE,[_t]:e.DST_COLOR,[Nt]:e.DST_ALPHA,[vt]:e.ONE_MINUS_SRC_COLOR,[St]:e.ONE_MINUS_SRC_ALPHA,[At]:e.ONE_MINUS_DST_COLOR,[Rt]:e.ONE_MINUS_DST_ALPHA}}enable(e){const{enabled:t}=this;!0!==t[e]&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;!1!==t[e]&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==Ct?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Et?t.cullFace(t.BACK):e===wt?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:s}=this;e!==t&&(s.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,s,r,i,n,a,o){const{gl:u}=this;if(e!==j){if(!1===this.currentBlendingEnabled&&(this.enable(u.BLEND),this.currentBlendingEnabled=!0),e===Mt)i=i||t,n=n||s,a=a||r,t===this.currentBlendEquation&&i===this.currentBlendEquationAlpha||(u.blendEquationSeparate(vA[t],vA[i]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=i),s===this.currentBlendSrc&&r===this.currentBlendDst&&n===this.currentBlendSrcAlpha&&a===this.currentBlendDstAlpha||(u.blendFuncSeparate(SA[s],SA[r],SA[n],SA[a]),this.currentBlendSrc=s,this.currentBlendDst=r,this.currentBlendSrcAlpha=n,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1;else if(e!==this.currentBlending||o!==this.currentPremultipledAlpha){if(this.currentBlendEquation===pt&&this.currentBlendEquationAlpha===pt||(u.blendEquation(u.FUNC_ADD),this.currentBlendEquation=pt,this.currentBlendEquationAlpha=pt),o)switch(e){case O:u.blendFuncSeparate(u.ONE,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case ke:u.blendFunc(u.ONE,u.ONE);break;case Ut:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case Bt:u.blendFuncSeparate(u.ZERO,u.SRC_COLOR,u.ZERO,u.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case O:u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA);break;case ke:u.blendFunc(u.SRC_ALPHA,u.ONE);break;case Ut:u.blendFuncSeparate(u.ZERO,u.ONE_MINUS_SRC_COLOR,u.ZERO,u.ONE);break;case Bt:u.blendFunc(u.ZERO,u.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=o}}else!0===this.currentBlendingEnabled&&(this.disable(u.BLEND),this.currentBlendingEnabled=!1)}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case Gt:t.depthFunc(t.NEVER);break;case Ot:t.depthFunc(t.ALWAYS);break;case Dt:t.depthFunc(t.LESS);break;case Vt:t.depthFunc(t.LEQUAL);break;case Lt:t.depthFunc(t.EQUAL);break;case It:t.depthFunc(t.GEQUAL);break;case Pt:t.depthFunc(t.GREATER);break;case Ft:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,s){this.currentStencilFunc===e&&this.currentStencilRef===t&&this.currentStencilFuncMask===s||(this.gl.stencilFunc(e,t,s),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=s)}setStencilOp(e,t,s){this.currentStencilFail===e&&this.currentStencilZFail===t&&this.currentStencilZPass===s||(this.gl.stencilOp(e,t,s),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=s)}setMaterial(e,t){const{gl:s}=this;e.side===Je?this.disable(s.CULL_FACE):this.enable(s.CULL_FACE);let r=e.side===N;t&&(r=!r),this.setFlipSided(r),e.blending===O&&!1===e.transparent?this.setBlending(j):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const i=e.stencilWrite;this.setStencilTest(i),i&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?this.enable(s.SAMPLE_ALPHA_TO_COVERAGE):this.disable(s.SAMPLE_ALPHA_TO_COVERAGE)}setPolygonOffset(e,t,s){const{gl:r}=this;e?(this.enable(r.POLYGON_OFFSET_FILL),this.currentPolygonOffsetFactor===t&&this.currentPolygonOffsetUnits===s||(r.polygonOffset(t,s),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=s)):this.disable(r.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e&&(this.gl.useProgram(e),this.currentProgram=e,!0)}bindFramebuffer(e,t){const{gl:s,currentBoundFramebuffers:r}=this;return r[e]!==t&&(s.bindFramebuffer(e,t),r[e]=t,e===s.DRAW_FRAMEBUFFER&&(r[s.FRAMEBUFFER]=t),e===s.FRAMEBUFFER&&(r[s.DRAW_FRAMEBUFFER]=t),!0)}drawBuffers(e,t){const{gl:s}=this;let r=[],i=!1;if(null!==e.textures){r=this.currentDrawbuffers.get(t),void 0===r&&(r=[],this.currentDrawbuffers.set(t,r));const n=e.textures;if(r.length!==n.length||r[0]!==s.COLOR_ATTACHMENT0){for(let e=0,t=n.length;e<t;e++)r[e]=s.COLOR_ATTACHMENT0+e;r.length=n.length,i=!0}}else r[0]!==s.BACK&&(r[0]=s.BACK,i=!0);i&&s.drawBuffers(r)}activeTexture(e){const{gl:t,currentTextureSlot:s,maxTextures:r}=this;void 0===e&&(e=t.TEXTURE0+r-1),s!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,s){const{gl:r,currentTextureSlot:i,currentBoundTextures:n,maxTextures:a}=this;void 0===s&&(s=null===i?r.TEXTURE0+a-1:i);let o=n[s];void 0===o&&(o={type:void 0,texture:void 0},n[s]=o),o.type===e&&o.texture===t||(i!==s&&(r.activeTexture(s),this.currentTextureSlot=s),r.bindTexture(e,t),o.type=e,o.texture=t)}bindBufferBase(e,t,s){const{gl:r}=this,i=`${e}-${t}`;return this.currentBoundBufferBases[i]!==s&&(r.bindBufferBase(e,t,s),this.currentBoundBufferBases[i]=s,!0)}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:s}=this,r=s[t];void 0!==r&&void 0!==r.type&&(e.bindTexture(r.type,null),r.type=void 0,r.texture=void 0)}}class CA{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=y){const{gl:s,extensions:r}=this;let i;if(e===Ye)return s.UNSIGNED_BYTE;if(e===zt)return s.UNSIGNED_SHORT_4_4_4_4;if(e===kt)return s.UNSIGNED_SHORT_5_5_5_1;if(e===$t)return s.UNSIGNED_INT_5_9_9_9_REV;if(e===lt)return s.BYTE;if(e===ct)return s.SHORT;if(e===ut)return s.UNSIGNED_SHORT;if(e===T)return s.INT;if(e===b)return s.UNSIGNED_INT;if(e===F)return s.FLOAT;if(e===Me)return s.HALF_FLOAT;if(e===Ht)return s.ALPHA;if(e===at)return s.RGB;if(e===Be)return s.RGBA;if(e===Wt)return s.LUMINANCE;if(e===jt)return s.LUMINANCE_ALPHA;if(e===Xe)return s.DEPTH_COMPONENT;if(e===qe)return s.DEPTH_STENCIL;if(e===rt)return s.RED;if(e===st)return s.RED_INTEGER;if(e===je)return s.RG;if(e===it)return s.RG_INTEGER;if(e===ot)return s.RGBA_INTEGER;if(e===qt||e===Xt||e===Kt||e===Yt)if(t===c){if(i=r.get("WEBGL_compressed_texture_s3tc_srgb"),null===i)return null;if(e===qt)return i.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===Xt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===Kt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===Yt)return i.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(i=r.get("WEBGL_compressed_texture_s3tc"),null===i)return null;if(e===qt)return i.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Xt)return i.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Kt)return i.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===Yt)return i.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===Qt||e===Zt||e===Jt||e===es){if(i=r.get("WEBGL_compressed_texture_pvrtc"),null===i)return null;if(e===Qt)return i.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===Zt)return i.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===Jt)return i.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===es)return i.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===ts||e===ss||e===rs){if(i=r.get("WEBGL_compressed_texture_etc"),null===i)return null;if(e===ts||e===ss)return t===c?i.COMPRESSED_SRGB8_ETC2:i.COMPRESSED_RGB8_ETC2;if(e===rs)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:i.COMPRESSED_RGBA8_ETC2_EAC}if(e===is||e===ns||e===as||e===os||e===us||e===ls||e===hs||e===ps||e===gs||e===ms||e===fs||e===xs||e===ys||e===bs){if(i=r.get("WEBGL_compressed_texture_astc"),null===i)return null;if(e===is)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:i.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===ns)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:i.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===as)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:i.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===os)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:i.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===us)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:i.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===ls)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:i.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===hs)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:i.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===ps)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:i.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===gs)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:i.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===ms)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:i.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===fs)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:i.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===xs)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:i.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===ys)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:i.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===bs)return t===c?i.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:i.COMPRESSED_RGBA_ASTC_12x12_KHR}if(e===Ts){if(i=r.get("EXT_texture_compression_bptc"),null===i)return null;if(e===Ts)return t===c?i.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:i.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(e===_s||e===Ns||e===vs||e===Ss){if(i=r.get("EXT_texture_compression_rgtc"),null===i)return null;if(e===Ts)return i.COMPRESSED_RED_RGTC1_EXT;if(e===Ns)return i.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===vs)return i.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Ss)return i.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return e===Ke?s.UNSIGNED_INT_24_8:void 0!==s[e]?s[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise(((s,r)=>{!function i(){const n=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(n===e.WAIT_FAILED)return e.deleteSync(t),void r();n!==e.TIMEOUT_EXPIRED?(e.deleteSync(t),s()):requestAnimationFrame(i)}()}))}}let EA,wA,MA,BA=!1;class UA{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},!1===BA&&(this._init(this.gl),BA=!0)}_init(e){EA={[Ge]:e.REPEAT,[As]:e.CLAMP_TO_EDGE,[Rs]:e.MIRRORED_REPEAT},wA={[ze]:e.NEAREST,[Cs]:e.NEAREST_MIPMAP_NEAREST,[Fe]:e.NEAREST_MIPMAP_LINEAR,[K]:e.LINEAR,[Ue]:e.LINEAR_MIPMAP_NEAREST,[L]:e.LINEAR_MIPMAP_LINEAR},MA={[Es]:e.NEVER,[ws]:e.ALWAYS,[He]:e.LESS,[Ms]:e.LEQUAL,[Bs]:e.EQUAL,[Us]:e.GEQUAL,[Fs]:e.GREATER,[Ps]:e.NOTEQUAL}}filterFallback(e){const{gl:t}=this;return e===ze||e===Cs||e===Fe?t.NEAREST:t.LINEAR}getGLTextureType(e){const{gl:t}=this;let s;return s=!0===e.isCubeTexture?t.TEXTURE_CUBE_MAP:!0===e.isDataArrayTexture||!0===e.isCompressedArrayTexture?t.TEXTURE_2D_ARRAY:!0===e.isData3DTexture?t.TEXTURE_3D:t.TEXTURE_2D,s}getInternalFormat(e,t,s,r,i=!1){const{gl:n,extensions:a}=this;if(null!==e){if(void 0!==n[e])return n[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let o=t;return t===n.RED&&(s===n.FLOAT&&(o=n.R32F),s===n.HALF_FLOAT&&(o=n.R16F),s===n.UNSIGNED_BYTE&&(o=n.R8),s===n.UNSIGNED_SHORT&&(o=n.R16),s===n.UNSIGNED_INT&&(o=n.R32UI),s===n.BYTE&&(o=n.R8I),s===n.SHORT&&(o=n.R16I),s===n.INT&&(o=n.R32I)),t===n.RED_INTEGER&&(s===n.UNSIGNED_BYTE&&(o=n.R8UI),s===n.UNSIGNED_SHORT&&(o=n.R16UI),s===n.UNSIGNED_INT&&(o=n.R32UI),s===n.BYTE&&(o=n.R8I),s===n.SHORT&&(o=n.R16I),s===n.INT&&(o=n.R32I)),t===n.RG&&(s===n.FLOAT&&(o=n.RG32F),s===n.HALF_FLOAT&&(o=n.RG16F),s===n.UNSIGNED_BYTE&&(o=n.RG8),s===n.UNSIGNED_SHORT&&(o=n.RG16),s===n.UNSIGNED_INT&&(o=n.RG32UI),s===n.BYTE&&(o=n.RG8I),s===n.SHORT&&(o=n.RG16I),s===n.INT&&(o=n.RG32I)),t===n.RG_INTEGER&&(s===n.UNSIGNED_BYTE&&(o=n.RG8UI),s===n.UNSIGNED_SHORT&&(o=n.RG16UI),s===n.UNSIGNED_INT&&(o=n.RG32UI),s===n.BYTE&&(o=n.RG8I),s===n.SHORT&&(o=n.RG16I),s===n.INT&&(o=n.RG32I)),t===n.RGB&&(s===n.FLOAT&&(o=n.RGB32F),s===n.HALF_FLOAT&&(o=n.RGB16F),s===n.UNSIGNED_BYTE&&(o=n.RGB8),s===n.UNSIGNED_SHORT&&(o=n.RGB16),s===n.UNSIGNED_INT&&(o=n.RGB32UI),s===n.BYTE&&(o=n.RGB8I),s===n.SHORT&&(o=n.RGB16I),s===n.INT&&(o=n.RGB32I),s===n.UNSIGNED_BYTE&&(o=r===c&&!1===i?n.SRGB8:n.RGB8),s===n.UNSIGNED_SHORT_5_6_5&&(o=n.RGB565),s===n.UNSIGNED_SHORT_5_5_5_1&&(o=n.RGB5_A1),s===n.UNSIGNED_SHORT_4_4_4_4&&(o=n.RGB4),s===n.UNSIGNED_INT_5_9_9_9_REV&&(o=n.RGB9_E5)),t===n.RGB_INTEGER&&(s===n.UNSIGNED_BYTE&&(o=n.RGB8UI),s===n.UNSIGNED_SHORT&&(o=n.RGB16UI),s===n.UNSIGNED_INT&&(o=n.RGB32UI),s===n.BYTE&&(o=n.RGB8I),s===n.SHORT&&(o=n.RGB16I),s===n.INT&&(o=n.RGB32I)),t===n.RGBA&&(s===n.FLOAT&&(o=n.RGBA32F),s===n.HALF_FLOAT&&(o=n.RGBA16F),s===n.UNSIGNED_BYTE&&(o=n.RGBA8),s===n.UNSIGNED_SHORT&&(o=n.RGBA16),s===n.UNSIGNED_INT&&(o=n.RGBA32UI),s===n.BYTE&&(o=n.RGBA8I),s===n.SHORT&&(o=n.RGBA16I),s===n.INT&&(o=n.RGBA32I),s===n.UNSIGNED_BYTE&&(o=r===c&&!1===i?n.SRGB8_ALPHA8:n.RGBA8),s===n.UNSIGNED_SHORT_4_4_4_4&&(o=n.RGBA4),s===n.UNSIGNED_SHORT_5_5_5_1&&(o=n.RGB5_A1)),t===n.RGBA_INTEGER&&(s===n.UNSIGNED_BYTE&&(o=n.RGBA8UI),s===n.UNSIGNED_SHORT&&(o=n.RGBA16UI),s===n.UNSIGNED_INT&&(o=n.RGBA32UI),s===n.BYTE&&(o=n.RGBA8I),s===n.SHORT&&(o=n.RGBA16I),s===n.INT&&(o=n.RGBA32I)),t===n.DEPTH_COMPONENT&&(s===n.UNSIGNED_INT&&(o=n.DEPTH24_STENCIL8),s===n.FLOAT&&(o=n.DEPTH_COMPONENT32F)),t===n.DEPTH_STENCIL&&s===n.UNSIGNED_INT_24_8&&(o=n.DEPTH24_STENCIL8),o!==n.R16F&&o!==n.R32F&&o!==n.RG16F&&o!==n.RG32F&&o!==n.RGBA16F&&o!==n.RGBA32F||a.get("EXT_color_buffer_float"),o}setTextureParameters(e,t){const{gl:s,extensions:r,backend:i}=this;s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,t.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,t.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE),s.texParameteri(e,s.TEXTURE_WRAP_S,EA[t.wrapS]),s.texParameteri(e,s.TEXTURE_WRAP_T,EA[t.wrapT]),e!==s.TEXTURE_3D&&e!==s.TEXTURE_2D_ARRAY||s.texParameteri(e,s.TEXTURE_WRAP_R,EA[t.wrapR]),s.texParameteri(e,s.TEXTURE_MAG_FILTER,wA[t.magFilter]);const n=void 0!==t.mipmaps&&t.mipmaps.length>0,a=t.minFilter===K&&n?L:t.minFilter;if(s.texParameteri(e,s.TEXTURE_MIN_FILTER,wA[a]),t.compareFunction&&(s.texParameteri(e,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(e,s.TEXTURE_COMPARE_FUNC,MA[t.compareFunction])),!0===r.has("EXT_texture_filter_anisotropic")){if(t.magFilter===ze)return;if(t.minFilter!==Fe&&t.minFilter!==L)return;if(t.type===F&&!1===r.has("OES_texture_float_linear"))return;if(t.anisotropy>1){const n=r.get("EXT_texture_filter_anisotropic");s.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,i.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:s,defaultTextures:r}=this,i=this.getGLTextureType(e);let n=r[i];void 0===n&&(n=t.createTexture(),s.state.bindTexture(i,n),t.texParameteri(i,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(i,t.TEXTURE_MAG_FILTER,t.NEAREST),r[i]=n),s.set(e,{textureGPU:n,glTextureType:i,isDefault:!0})}createTexture(e,t){const{gl:s,backend:r}=this,{levels:i,width:n,height:a,depth:o}=t,u=r.utils.convert(e.format,e.colorSpace),l=r.utils.convert(e.type),d=this.getInternalFormat(e.internalFormat,u,l,e.colorSpace,e.isVideoTexture),c=s.createTexture(),h=this.getGLTextureType(e);r.state.bindTexture(h,c),this.setTextureParameters(h,e),e.isDataArrayTexture||e.isCompressedArrayTexture?s.texStorage3D(s.TEXTURE_2D_ARRAY,i,d,n,a,o):e.isData3DTexture?s.texStorage3D(s.TEXTURE_3D,i,d,n,a,o):e.isVideoTexture||s.texStorage2D(h,i,d,n,a),r.set(e,{textureGPU:c,glTextureType:h,glFormat:u,glType:l,glInternalFormat:d})}copyBufferToTexture(e,t){const{gl:s,backend:r}=this,{textureGPU:i,glTextureType:n,glFormat:a,glType:o}=r.get(t),{width:u,height:l}=t.source.data;s.bindBuffer(s.PIXEL_UNPACK_BUFFER,e),r.state.bindTexture(n,i),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,!1),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),s.texSubImage2D(n,0,0,0,u,l,a,o,0),s.bindBuffer(s.PIXEL_UNPACK_BUFFER,null),r.state.unbindTexture()}updateTexture(e,t){const{gl:s}=this,{width:r,height:i}=t,{textureGPU:n,glTextureType:a,glFormat:o,glType:u,glInternalFormat:l}=this.backend.get(e);if(e.isRenderTargetTexture||void 0===n)return;const d=e=>e.isDataTexture?e.image.data:e instanceof ImageBitmap||e instanceof OffscreenCanvas||e instanceof HTMLImageElement||e instanceof HTMLCanvasElement?e:e.data;if(this.backend.state.bindTexture(a,n),this.setTextureParameters(a,e),e.isCompressedTexture){const r=e.mipmaps,i=t.image;for(let t=0;t<r.length;t++){const n=r[t];e.isCompressedArrayTexture?e.format!==s.RGBA?null!==o?s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,t,0,0,0,n.width,n.height,i.depth,o,n.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):s.texSubImage3D(s.TEXTURE_2D_ARRAY,t,0,0,0,n.width,n.height,i.depth,o,u,n.data):null!==o?s.compressedTexSubImage2D(s.TEXTURE_2D,t,0,0,n.width,n.height,o,n.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const e=t.images;for(let t=0;t<6;t++){const n=d(e[t]);s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,r,i,o,u,n)}}else if(e.isDataArrayTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,e.width,e.height,e.depth,o,u,e.data)}else if(e.isData3DTexture){const e=t.image;s.texSubImage3D(s.TEXTURE_3D,0,0,0,0,e.width,e.height,e.depth,o,u,e.data)}else if(e.isVideoTexture)e.update(),s.texImage2D(a,0,l,o,u,t.image);else{const e=d(t.image);s.texSubImage2D(a,0,0,0,r,i,o,u,e)}}generateMipmaps(e){const{gl:t,backend:s}=this,{textureGPU:r,glTextureType:i}=s.get(e);s.state.bindTexture(i,r),t.generateMipmap(i)}deallocateRenderBuffers(e){const{gl:t,backend:s}=this;if(e){const r=s.get(e);if(r.renderBufferStorageSetup=void 0,r.framebuffers){for(const e in r.framebuffers)t.deleteFramebuffer(r.framebuffers[e]);delete r.framebuffers}if(r.depthRenderbuffer&&(t.deleteRenderbuffer(r.depthRenderbuffer),delete r.depthRenderbuffer),r.stencilRenderbuffer&&(t.deleteRenderbuffer(r.stencilRenderbuffer),delete r.stencilRenderbuffer),r.msaaFrameBuffer&&(t.deleteFramebuffer(r.msaaFrameBuffer),delete r.msaaFrameBuffer),r.msaaRenderbuffers){for(let e=0;e<r.msaaRenderbuffers.length;e++)t.deleteRenderbuffer(r.msaaRenderbuffers[e]);delete r.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:s}=this,{textureGPU:r,renderTarget:i}=s.get(e);this.deallocateRenderBuffers(i),t.deleteTexture(r),s.delete(e)}copyTextureToTexture(e,t,s=null,r=null,i=0){const{gl:n,backend:a}=this,{state:o}=this.backend,{textureGPU:u,glTextureType:l,glType:d,glFormat:c}=a.get(t);let h,p,g,m,f,x;null!==s?(h=s.max.x-s.min.x,p=s.max.y-s.min.y,g=s.min.x,m=s.min.y):(h=e.image.width,p=e.image.height,g=0,m=0),null!==r?(f=r.x,x=r.y):(f=0,x=0),o.bindTexture(l,u),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,t.flipY),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),n.pixelStorei(n.UNPACK_ALIGNMENT,t.unpackAlignment);const y=n.getParameter(n.UNPACK_ROW_LENGTH),b=n.getParameter(n.UNPACK_IMAGE_HEIGHT),T=n.getParameter(n.UNPACK_SKIP_PIXELS),_=n.getParameter(n.UNPACK_SKIP_ROWS),N=n.getParameter(n.UNPACK_SKIP_IMAGES),v=e.isCompressedTexture?e.mipmaps[i]:e.image;n.pixelStorei(n.UNPACK_ROW_LENGTH,v.width),n.pixelStorei(n.UNPACK_IMAGE_HEIGHT,v.height),n.pixelStorei(n.UNPACK_SKIP_PIXELS,g),n.pixelStorei(n.UNPACK_SKIP_ROWS,m),e.isDataTexture?n.texSubImage2D(n.TEXTURE_2D,i,f,x,h,p,c,d,v.data):e.isCompressedTexture?n.compressedTexSubImage2D(n.TEXTURE_2D,i,f,x,v.width,v.height,c,v.data):n.texSubImage2D(n.TEXTURE_2D,i,f,x,h,p,c,d,v),n.pixelStorei(n.UNPACK_ROW_LENGTH,y),n.pixelStorei(n.UNPACK_IMAGE_HEIGHT,b),n.pixelStorei(n.UNPACK_SKIP_PIXELS,T),n.pixelStorei(n.UNPACK_SKIP_ROWS,_),n.pixelStorei(n.UNPACK_SKIP_IMAGES,N),0===i&&t.generateMipmaps&&n.generateMipmap(n.TEXTURE_2D),o.unbindTexture()}copyFramebufferToTexture(e,t){const{gl:s}=this,{state:r}=this.backend,{textureGPU:i}=this.backend.get(e),n=e.image.width,a=e.image.height;if(!0===e.isDepthTexture||t.renderTarget&&t.renderTarget.samples>0){let o,u;!0===e.isDepthTexture?(o=s.DEPTH_BUFFER_BIT,u=s.DEPTH_ATTACHMENT,t.stencil&&(o|=s.STENCIL_BUFFER_BIT)):(o=s.COLOR_BUFFER_BIT,u=s.COLOR_ATTACHMENT0);const l=s.createFramebuffer();r.bindFramebuffer(s.DRAW_FRAMEBUFFER,l),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,u,s.TEXTURE_2D,i,0),s.blitFramebuffer(0,0,n,a,0,0,n,a,o,s.NEAREST),s.deleteFramebuffer(l)}else r.bindTexture(s.TEXTURE_2D,i),s.copyTexSubImage2D(s.TEXTURE_2D,0,0,0,0,0,n,a),r.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t){const{gl:s}=this,r=t.renderTarget,{samples:i,depthTexture:n,depthBuffer:a,stencilBuffer:o,width:u,height:l}=r;if(s.bindRenderbuffer(s.RENDERBUFFER,e),a&&!o){let t=s.DEPTH_COMPONENT24;i>0?(n&&n.isDepthTexture&&n.type===s.FLOAT&&(t=s.DEPTH_COMPONENT32F),s.renderbufferStorageMultisample(s.RENDERBUFFER,i,t,u,l)):s.renderbufferStorage(s.RENDERBUFFER,t,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,e)}else a&&o&&(i>0?s.renderbufferStorageMultisample(s.RENDERBUFFER,i,s.DEPTH24_STENCIL8,u,l):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,u,l),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,e))}async copyTextureToBuffer(e,t,s,r,i,n){const{backend:a,gl:o}=this,{textureGPU:u,glFormat:l,glType:d}=this.backend.get(e),c=o.createFramebuffer();o.bindFramebuffer(o.READ_FRAMEBUFFER,c);const h=e.isCubeTexture?o.TEXTURE_CUBE_MAP_POSITIVE_X+n:o.TEXTURE_2D;o.framebufferTexture2D(o.READ_FRAMEBUFFER,o.COLOR_ATTACHMENT0,h,u,0);const p=this._getTypedArrayType(d),g=r*i*this._getBytesPerTexel(d,l),m=o.createBuffer();o.bindBuffer(o.PIXEL_PACK_BUFFER,m),o.bufferData(o.PIXEL_PACK_BUFFER,g,o.STREAM_READ),o.readPixels(t,s,r,i,l,d,0),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const f=new p(g/p.BYTES_PER_ELEMENT);return o.bindBuffer(o.PIXEL_PACK_BUFFER,m),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,f),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),o.deleteFramebuffer(c),f}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_5_5_1)return Uint16Array;if(e===t.UNSIGNED_SHORT_5_6_5)return Uint16Array;if(e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:s}=this;let r=0;return e===s.UNSIGNED_BYTE&&(r=1),e!==s.UNSIGNED_SHORT_4_4_4_4&&e!==s.UNSIGNED_SHORT_5_5_5_1&&e!==s.UNSIGNED_SHORT_5_6_5&&e!==s.UNSIGNED_SHORT&&e!==s.HALF_FLOAT||(r=2),e!==s.UNSIGNED_INT&&e!==s.FLOAT||(r=4),t===s.RGBA?4*r:t===s.RGB?3*r:t===s.ALPHA?r:void 0}}class FA{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return void 0===t&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class PA{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(null!==this.maxAnisotropy)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(s.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const IA={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query"};class LA{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:s,mode:r,object:i,type:n,info:a,index:o}=this;0!==o?s.drawElements(r,t,n,e):s.drawArrays(r,e,t),a.update(i,t,r,1)}renderInstances(e,t,s){const{gl:r,mode:i,type:n,index:a,object:o,info:u}=this;0!==s&&(0!==a?r.drawElementsInstanced(i,t,n,e,s):r.drawArraysInstanced(i,e,t,s),u.update(o,t,i,s))}renderMultiDraw(e,t,s){const{extensions:r,mode:i,object:n,info:a}=this;if(0===s)return;const o=r.get("WEBGL_multi_draw");if(null===o)for(let r=0;r<s;r++)this.render(e[r],t[r]);else{0!==this.index?o.multiDrawElementsWEBGL(i,t,0,this.type,e,0,s):o.multiDrawArraysWEBGL(i,e,0,t,0,s);let r=0;for(let e=0;e<s;e++)r+=t[e];a.update(n,r,i,1)}}renderMultiDrawInstances(e,t,s,r){const{extensions:i,mode:n,object:a,info:o}=this;if(0===s)return;const u=i.get("WEBGL_multi_draw");if(null===u)for(let i=0;i<s;i++)this.renderInstances(e[i],t[i],r[i]);else{0!==this.index?u.multiDrawElementsInstancedWEBGL(n,t,0,this.type,e,0,r,0,s):u.multiDrawArraysInstancedWEBGL(n,e,0,t,0,r,0,s);let i=0;for(let e=0;e<s;e++)i+=t[e];for(let e=0;e<r.length;e++)o.update(a,i,n,r[e])}}}class VA extends bA{constructor(e={}){super(e),this.isWebGLBackend=!0}init(e){super.init(e);const t=this.parameters,s=void 0!==t.context?t.context:e.domElement.getContext("webgl2");this.gl=s,this.extensions=new FA(this),this.capabilities=new PA(this),this.attributeUtils=new NA(this),this.textureUtils=new UA(this),this.bufferRenderer=new LA(this),this.state=new RA(this),this.utils=new CA(this),this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.trackTimestamp=!0===t.trackTimestamp,this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile"),this._currentContext=null}get coordinateSystem(){return _}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(this.queryRunning)return t.queryQueue||(t.queryQueue=[]),void t.queryQueue.push(e);t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.activeQuery=null),t.activeQuery=this.gl.createQuery(),null!==t.activeQuery&&(this.gl.beginQuery(this.disjoint.TIME_ELAPSED_EXT,t.activeQuery),this.queryRunning=!0)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=this.get(e);if(t.activeQuery&&(this.gl.endQuery(this.disjoint.TIME_ELAPSED_EXT),t.gpuQueries||(t.gpuQueries=[]),t.gpuQueries.push({query:t.activeQuery}),t.activeQuery=null,this.queryRunning=!1,t.queryQueue&&t.queryQueue.length>0)){const e=t.queryQueue.shift();this.initTimestampQuery(e)}}async resolveTimestampAsync(e,t="render"){if(!this.disjoint||!this.trackTimestamp)return;const s=this.get(e);s.gpuQueries||(s.gpuQueries=[]);for(let e=0;e<s.gpuQueries.length;e++){const r=s.gpuQueries[e],i=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT_AVAILABLE),n=this.gl.getParameter(this.disjoint.GPU_DISJOINT_EXT);if(i&&!n){const i=this.gl.getQueryParameter(r.query,this.gl.QUERY_RESULT),n=Number(i)/1e6;this.gl.deleteQuery(r.query),s.gpuQueries.splice(e,1),e--,this.renderer.info.updateTimestamp(t,n)}}}getContext(){return this.gl}beginRender(e){const{gl:t}=this,s=this.get(e);if(this.initTimestampQuery(e),s.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1),e.viewport?this.updateViewport(e):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight),e.scissor){const{x:s,y:r,width:i,height:n}=e.scissorValue;t.scissor(s,e.height-n-r,i,n)}const r=e.occlusionQueryCount;r>0&&(s.currentOcclusionQueries=s.occlusionQueries,s.currentOcclusionQueryObjects=s.occlusionQueryObjects,s.lastOcclusionObject=null,s.occlusionQueries=new Array(r),s.occlusionQueryObjects=new Array(r),s.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:s}=this,r=this.get(e),i=r.previousContext,n=e.occlusionQueryCount;n>0&&(n>r.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(null!==a)for(let e=0;e<a.length;e++){const t=a[e];t.generateMipmaps&&this.generateMipmaps(t)}if(this._currentContext=i,null!==e.textures&&e.renderTarget){const r=this.get(e.renderTarget),{samples:i}=e.renderTarget;if(i>0){const i=r.framebuffers[e.getCacheKey()],n=t.COLOR_BUFFER_BIT,a=r.msaaFrameBuffer,o=e.textures;s.bindFramebuffer(t.READ_FRAMEBUFFER,a),s.bindFramebuffer(t.DRAW_FRAMEBUFFER,i);for(let s=0;s<o.length;s++)if(e.scissor){const{x:s,y:i,width:a,height:o}=e.scissorValue,u=e.height-o-i;t.blitFramebuffer(s,u,s+a,u+o,s,u,s+a,u+o,n,t.NEAREST),t.invalidateSubFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray,s,u,a,o)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,n,t.NEAREST),t.invalidateFramebuffer(t.READ_FRAMEBUFFER,r.invalidationArray)}}null!==i&&(this._setFramebuffer(i),i.viewport?this.updateViewport(i):t.viewport(0,0,t.drawingBufferWidth,t.drawingBufferHeight)),this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet,{gl:i}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const n=()=>{let a=0;for(let t=0;t<s.length;t++){const n=s[t];null!==n&&(i.getQueryParameter(n,i.QUERY_RESULT_AVAILABLE)&&(i.getQueryParameter(n,i.QUERY_RESULT)>0&&e.add(r[t]),s[t]=null,i.deleteQuery(n),a++))}a<s.length?requestAnimationFrame(n):t.occluded=e};n()}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}updateViewport(e){const t=this.gl,{x:s,y:r,width:i,height:n}=e.viewportValue;t.viewport(s,e.height-n-r,i,n)}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}clear(e,t,s,r=null,i=!0){const{gl:n}=this;null===r&&(r={textures:null,clearColorValue:this.getClearColor()});let a=0;if(e&&(a|=n.COLOR_BUFFER_BIT),t&&(a|=n.DEPTH_BUFFER_BIT),s&&(a|=n.STENCIL_BUFFER_BIT),0!==a){const o=r.clearColorValue||this.getClearColor();if(o.r*=o.a,o.g*=o.a,o.b*=o.a,t&&this.state.setDepthMask(!0),null===r.textures)n.clearColor(o.r,o.g,o.b,o.a),n.clear(a);else{if(i&&this._setFramebuffer(r),e)for(let e=0;e<r.textures.length;e++)n.clearBufferfv(n.COLOR,e,[o.r,o.g,o.b,o.a]);t&&s?n.clearBufferfi(n.DEPTH_STENCIL,0,1,0):t?n.clearBufferfv(n.DEPTH,0,[1]):s&&n.clearBufferiv(n.STENCIL,0,[0])}}}beginCompute(e){const{state:t,gl:s}=this;t.bindFramebuffer(s.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,s,r){const{state:i,gl:n}=this;this.discard||(n.enable(n.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:a,transformBuffers:o,attributes:u}=this.get(r),l=this._getVaoKey(null,u),d=this.vaoCache[l];void 0===d?this._createVao(null,u):n.bindVertexArray(d),i.useProgram(a),this._bindUniforms(s);const c=this._getTransformFeedback(o);n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,c),n.beginTransformFeedback(n.POINTS),u[0].isStorageInstancedBufferAttribute?n.drawArraysInstanced(n.POINTS,0,1,t.count):n.drawArrays(n.POINTS,0,t.count),n.endTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null);for(let e=0;e<o.length;e++){const t=o[e];t.pbo&&this.textureUtils.copyBufferToTexture(t.transformBuffer,t.pbo),t.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e)}draw(e){const{object:t,pipeline:s,material:r,context:i}=e,{programGPU:n}=this.get(s),{gl:a,state:o}=this,u=this.get(i),l=e.getDrawParameters();if(null===l)return;this._bindUniforms(e.getBindings());const d=t.isMesh&&t.matrixWorld.determinant()<0;o.setMaterial(r,d),o.useProgram(n);let c=e.staticVao;if(void 0===c){const t=this._getVaoKey(e.getIndex(),e.getAttributes());if(c=this.vaoCache[t],void 0===c){let t;({vaoGPU:c,staticVao:t}=this._createVao(e.getIndex(),e.getAttributes())),t&&(e.staticVao=c)}}a.bindVertexArray(c);const h=e.getIndex(),p=u.lastOcclusionObject;if(p!==t&&void 0!==p){if(null!==p&&!0===p.occlusionTest&&(a.endQuery(a.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),!0===t.occlusionTest){const e=a.createQuery();a.beginQuery(a.ANY_SAMPLES_PASSED,e),u.occlusionQueries[u.occlusionQueryIndex]=e,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}const g=this.bufferRenderer;t.isPoints?g.mode=a.POINTS:t.isLineSegments?g.mode=a.LINES:t.isLine?g.mode=a.LINE_STRIP:t.isLineLoop?g.mode=a.LINE_LOOP:!0===r.wireframe?(o.setLineWidth(r.wireframeLinewidth*this.renderer.getPixelRatio()),g.mode=a.LINES):g.mode=a.TRIANGLES;const{vertexCount:m,instanceCount:f}=l;let{firstVertex:x}=l;if(g.object=t,null!==h){x*=h.array.BYTES_PER_ELEMENT;const e=this.get(h);g.index=h.count,g.type=e.type}else g.index=0;t.isBatchedMesh?null!==t._multiDrawInstances?g.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances):this.hasFeature("WEBGL_multi_draw")?g.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Is("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):f>1?g.renderInstances(x,m,f):g.render(x,m),a.bindVertexArray(null)}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,i,n){return this.textureUtils.copyTextureToBuffer(e,t,s,r,i,n)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new mA(e,t)}createProgram(e){const t=this.gl,{stage:s,code:r}=e,i="fragment"===s?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(i,r),t.compileShader(i),this.set(e,{shaderGPU:i})}destroyProgram(){console.warn("Abstract class.")}createRenderPipeline(e,t){const s=this.gl,r=e.pipeline,{fragmentProgram:i,vertexProgram:n}=r,a=s.createProgram(),o=this.get(i).shaderGPU,u=this.get(n).shaderGPU;if(s.attachShader(a,o),s.attachShader(a,u),s.linkProgram(a),this.set(r,{programGPU:a,fragmentShader:o,vertexShader:u}),null!==t&&this.parallel){const i=new Promise((t=>{const i=this.parallel,n=()=>{s.getProgramParameter(a,i.COMPLETION_STATUS_KHR)?(this._completeCompile(e,r),t()):requestAnimationFrame(n)};n()}));t.push(i)}else this._completeCompile(e,r)}_handleSource(e,t){const s=e.split("\n"),r=[],i=Math.max(t-6,0),n=Math.min(t+6,s.length);for(let e=i;e<n;e++){const i=e+1;r.push(`${i===t?">":" "} ${i}: ${s[e]}`)}return r.join("\n")}_getShaderErrors(e,t,s){const r=e.getShaderParameter(t,e.COMPILE_STATUS),i=e.getShaderInfoLog(t).trim();if(r&&""===i)return"";const n=/ERROR: 0:(\d+)/.exec(i);if(n){const r=parseInt(n[1]);return s.toUpperCase()+"\n\n"+i+"\n\n"+this._handleSource(e.getShaderSource(t),r)}return i}_logProgramError(e,t,s){if(this.renderer.debug.checkShaderErrors){const r=this.gl,i=r.getProgramInfoLog(e).trim();if(!1===r.getProgramParameter(e,r.LINK_STATUS))if("function"==typeof this.renderer.debug.onShaderError)this.renderer.debug.onShaderError(r,e,s,t);else{const n=this._getShaderErrors(r,s,"vertex"),a=this._getShaderErrors(r,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(e,r.VALIDATE_STATUS)+"\n\nProgram Info Log: "+i+"\n"+n+"\n"+a)}else""!==i&&console.warn("THREE.WebGLProgram: Program Info Log:",i)}}_completeCompile(e,t){const{state:s,gl:r}=this,i=this.get(t),{programGPU:n,fragmentShader:a,vertexShader:o}=i;!1===r.getProgramParameter(n,r.LINK_STATUS)&&this._logProgramError(n,a,o),s.useProgram(n);const u=e.getBindings();this._setupBindings(u,n),this.set(t,{programGPU:n})}createComputePipeline(e,t){const{state:s,gl:r}=this,i={stage:"fragment",code:"#version 300 es\nprecision highp float;\nvoid main() {}"};this.createProgram(i);const{computeProgram:n}=e,a=r.createProgram(),o=this.get(i).shaderGPU,u=this.get(n).shaderGPU,l=n.transforms,d=[],c=[];for(let e=0;e<l.length;e++){const t=l[e];d.push(t.varyingName),c.push(t.attributeNode)}r.attachShader(a,o),r.attachShader(a,u),r.transformFeedbackVaryings(a,d,r.SEPARATE_ATTRIBS),r.linkProgram(a),!1===r.getProgramParameter(a,r.LINK_STATUS)&&this._logProgramError(a,o,u),s.useProgram(a),this.createBindings(null,t),this._setupBindings(t,a);const h=n.attributes,p=[],g=[];for(let e=0;e<h.length;e++){const t=h[e].node.attribute;p.push(t),this.has(t)||this.attributeUtils.createAttribute(t,r.ARRAY_BUFFER)}for(let e=0;e<c.length;e++){const t=c[e].attribute;this.has(t)||this.attributeUtils.createAttribute(t,r.ARRAY_BUFFER);const s=this.get(t);g.push(s)}this.set(e,{programGPU:a,transformBuffers:g,attributes:p})}createBindings(e,t){this.updateBindings(e,t)}updateBindings(e,t){const{state:s,gl:r}=this;let i=0,n=0;for(const e of t)for(const t of e.bindings)if(t.isUniformsGroup||t.isUniformBuffer){const e=r.createBuffer(),n=t.buffer;r.bindBuffer(r.UNIFORM_BUFFER,e),r.bufferData(r.UNIFORM_BUFFER,n,r.DYNAMIC_DRAW),s.bindBufferBase(r.UNIFORM_BUFFER,i,e),this.set(t,{index:i++,bufferGPU:e})}else if(t.isSampledTexture){const{textureGPU:e,glTextureType:s}=this.get(t.texture);this.set(t,{index:n++,textureGPU:e,glTextureType:s})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const s=this.get(e).bufferGPU,r=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,s),t.bufferData(t.UNIFORM_BUFFER,r,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){}hasFeature(e){const t=Object.keys(IA).filter((t=>IA[t]===e)),s=this.extensions;for(let e=0;e<t.length;e++)if(s.has(t[e]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,s,r){this.textureUtils.copyTextureToTexture(e,t,s,r)}copyFramebufferToTexture(e,t){this.textureUtils.copyFramebufferToTexture(e,t)}_setFramebuffer(e){const{gl:t,state:s}=this;let r=null;if(null!==e.textures){const i=e.renderTarget,n=this.get(i),{samples:a,depthBuffer:o,stencilBuffer:u}=i,l=!0===i.isWebGLCubeRenderTarget;let d=n.msaaFrameBuffer,c=n.depthRenderbuffer;const h=BS(e);let p;if(l?(n.cubeFramebuffers||(n.cubeFramebuffers={}),p=n.cubeFramebuffers[h]):(n.framebuffers||(n.framebuffers={}),p=n.framebuffers[h]),void 0===p){p=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,p);const r=e.textures;if(l){n.cubeFramebuffers[h]=p;const{textureGPU:e}=this.get(r[0]),s=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+s,e,0)}else{n.framebuffers[h]=p;for(let s=0;s<r.length;s++){const i=r[s],n=this.get(i);n.renderTarget=e.renderTarget;const a=t.COLOR_ATTACHMENT0+s;t.framebufferTexture2D(t.FRAMEBUFFER,a,t.TEXTURE_2D,n.textureGPU,0)}s.drawBuffers(e,p)}if(null!==e.depthTexture){const s=this.get(e.depthTexture),r=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTexture2D(t.FRAMEBUFFER,r,t.TEXTURE_2D,s.textureGPU,0)}}if(a>0){if(void 0===d){const r=[];d=t.createFramebuffer(),s.bindFramebuffer(t.FRAMEBUFFER,d);const i=[],l=e.textures;for(let s=0;s<l.length;s++){if(i[s]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,i[s]),r.push(t.COLOR_ATTACHMENT0+s),o){const e=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(e)}const n=e.textures[s],l=this.get(n);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,l.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+s,t.RENDERBUFFER,i[s])}if(n.msaaFrameBuffer=d,n.msaaRenderbuffers=i,void 0===c){c=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(c,e),n.depthRenderbuffer=c;const s=u?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;r.push(s)}n.invalidationArray=r}r=n.msaaFrameBuffer}else r=p}s.bindFramebuffer(t.FRAMEBUFFER,r)}_getVaoKey(e,t){let s=[];if(null!==e){s+=":"+this.get(e).id}for(let e=0;e<t.length;e++){s+=":"+this.get(t[e]).id}return s}_createVao(e,t){const{gl:s}=this,r=s.createVertexArray();let i="",n=!0;if(s.bindVertexArray(r),null!==e){const t=this.get(e);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.bufferGPU),i+=":"+t.id}for(let e=0;e<t.length;e++){const r=t[e],a=this.get(r);let o,u;i+=":"+a.id,s.bindBuffer(s.ARRAY_BUFFER,a.bufferGPU),s.enableVertexAttribArray(e),(r.isStorageBufferAttribute||r.isStorageInstancedBufferAttribute)&&(n=!1),!0===r.isInterleavedBufferAttribute?(o=r.data.stride*a.bytesPerElement,u=r.offset*a.bytesPerElement):(o=0,u=0),a.isInteger?s.vertexAttribIPointer(e,r.itemSize,a.type,o,u):s.vertexAttribPointer(e,r.itemSize,a.type,r.normalized,o,u),r.isInstancedBufferAttribute&&!r.isInterleavedBufferAttribute?s.vertexAttribDivisor(e,r.meshPerAttribute):r.isInterleavedBufferAttribute&&r.data.isInstancedInterleavedBuffer&&s.vertexAttribDivisor(e,r.data.meshPerAttribute)}return s.bindBuffer(s.ARRAY_BUFFER,null),this.vaoCache[i]=r,{vaoGPU:r,staticVao:n}}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let s=this.transformFeedbackCache[t];if(void 0!==s)return s;const{gl:r}=this;s=r.createTransformFeedback(),r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,s);for(let t=0;t<e.length;t++){const s=e[t];r.bindBufferBase(r.TRANSFORM_FEEDBACK_BUFFER,t,s.transformBuffer)}return r.bindTransformFeedback(r.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=s,s}_setupBindings(e,t){const s=this.gl;for(const r of e)for(const e of r.bindings){const r=this.get(e).index;if(e.isUniformsGroup||e.isUniformBuffer){const i=s.getUniformBlockIndex(t,e.name);s.uniformBlockBinding(t,i,r)}else if(e.isSampledTexture){const i=s.getUniformLocation(t,e.name);s.uniform1i(i,r)}}}_bindUniforms(e){const{gl:t,state:s}=this;for(const r of e)for(const e of r.bindings){const r=this.get(e),i=r.index;e.isUniformsGroup||e.isUniformBuffer?s.bindBufferBase(t.UNIFORM_BUFFER,i,r.bufferGPU):e.isSampledTexture&&s.bindTexture(r.glTextureType,r.textureGPU,t.TEXTURE0+i)}}}class DA extends QS{constructor(e,t){super(e),this.texture=t,this.version=t?t.version:0,this.isSampler=!0}}class OA extends DA{constructor(e,t,s){super(e,t?t.value:null),this.textureNode=t,this.groupNode=s}update(){this.texture=this.textureNode.value}}class GA extends ZS{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let zA=0;class kA extends GA{constructor(e,t){super("StorageBuffer_"+zA++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:bb,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class $A extends Em{constructor(e){super(),this.device=e;this.mipmapSampler=e.createSampler({minFilter:Oy}),this.flipYSampler=e.createSampler({minFilter:Gy}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:"\nstruct VarysStruct {\n\t@builtin( position ) Position: vec4<f32>,\n\t@location( 0 ) vTex : vec2<f32>\n};\n\n@vertex\nfn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {\n\n\tvar Varys : VarysStruct;\n\n\tvar pos = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( -1.0,  1.0 ),\n\t\tvec2<f32>(  1.0,  1.0 ),\n\t\tvec2<f32>( -1.0, -1.0 ),\n\t\tvec2<f32>(  1.0, -1.0 )\n\t);\n\n\tvar tex = array< vec2<f32>, 4 >(\n\t\tvec2<f32>( 0.0, 0.0 ),\n\t\tvec2<f32>( 1.0, 0.0 ),\n\t\tvec2<f32>( 0.0, 1.0 ),\n\t\tvec2<f32>( 1.0, 1.0 )\n\t);\n\n\tVarys.vTex = tex[ vertexIndex ];\n\tVarys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );\n\n\treturn Varys;\n\n}\n"}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vTex );\n\n}\n"}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:"\n@group( 0 ) @binding( 0 )\nvar imgSampler : sampler;\n\n@group( 0 ) @binding( 1 )\nvar img : texture_2d<f32>;\n\n@fragment\nfn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {\n\n\treturn textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );\n\n}\n"})}getTransferPipeline(e){let t=this.transferPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:xy,stripIndexFormat:Py},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return void 0===t&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:xy,stripIndexFormat:Py},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,s=0){const r=t.format,{width:i,height:n}=t.size,a=this.getTransferPipeline(r),o=this.getFlipYPipeline(r),u=this.device.createTexture({size:{width:i,height:n,depthOrArrayLayers:1},format:r,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),l=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Mb,baseArrayLayer:s}),d=u.createView({baseMipLevel:0,mipLevelCount:1,dimension:Mb,baseArrayLayer:0}),c=this.device.createCommandEncoder({}),h=(e,t,s)=>{const r=e.getBindGroupLayout(0),i=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:t}]}),n=c.beginRenderPass({colorAttachments:[{view:s,loadOp:Ey,storeOp:Ry,clearValue:[0,0,0,0]}]});n.setPipeline(e),n.setBindGroup(0,i),n.draw(4,1,0,0),n.end()};h(a,l,d),h(o,d,l),this.device.queue.submit([c.finish()]),u.destroy()}generateMipmaps(e,t,s=0){const r=this.get(e);void 0===r.useCount&&(r.useCount=0,r.layers=[]);const i=r.layers[s]||this._mipmapCreateBundles(e,t,s),n=this.device.createCommandEncoder({});this._mipmapRunBundles(n,i),this.device.queue.submit([n.finish()]),0!==r.useCount&&(r.layers[s]=i),r.useCount++}_mipmapCreateBundles(e,t,s){const r=this.getTransferPipeline(t.format),i=r.getBindGroupLayout(0);let n=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Mb,baseArrayLayer:s});const a=[];for(let o=1;o<t.mipLevelCount;o++){const u=this.device.createBindGroup({layout:i,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:n}]}),l=e.createView({baseMipLevel:o,mipLevelCount:1,dimension:Mb,baseArrayLayer:s}),d={colorAttachments:[{view:l,loadOp:Ey,storeOp:Ry,clearValue:[0,0,0,0]}]},c=this.device.createRenderBundleEncoder({colorFormats:[t.format]});c.setPipeline(r),c.setBindGroup(0,u),c.draw(4,1,0,0),a.push({renderBundles:[c.finish()],passDescriptor:d}),n=l}return a}_mipmapRunBundles(e,t){const s=t.length;for(let r=0;r<s;r++){const s=t[r],i=e.beginRenderPass(s.passDescriptor);i.executeBundles(s.renderBundles),i.end()}}}const HA={[Es]:"never",[He]:"less",[Bs]:"equal",[Ms]:"less-equal",[Fs]:"greater",[Us]:"greater-equal",[ws]:"always",[Ps]:"not-equal"},WA=[0,1,3,2,4,5];class jA{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new V,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,s=t.device,r=t.get(e),i={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:e.anisotropy};e.isDepthTexture&&null!==e.compareFunction&&(i.compare=HA[e.compareFunction]),r.sampler=s.createSampler(i)}createDefaultTexture(e){let t;const s=qA(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(s):e.isVideoTexture?this.backend.get(e).externalTexture=this._getDefaultVideoFrame():t=this._getDefaultTextureGPU(s),this.backend.get(e).texture=t}createTexture(e,t={}){const s=this.backend,r=s.get(e);if(r.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");void 0===t.needsMipmaps&&(t.needsMipmaps=!1),void 0===t.levels&&(t.levels=1),void 0===t.depth&&(t.depth=1);const{width:i,height:n,depth:a,levels:o}=t,u=this._getDimension(e),l=e.internalFormat||t.format||qA(e,s.device);r.format=l;let d=void 0!==t.sampleCount?t.sampleCount:1;d=s.utils.getSampleCount(d);const c=e.isRenderTargetTexture&&!e.isMultisampleRenderTargetTexture?1:d;let h=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;!0===e.isStorageTexture&&(h|=GPUTextureUsage.STORAGE_BINDING),!0!==e.isCompressedTexture&&!0!==e.isCompressedArrayTexture&&(h|=GPUTextureUsage.RENDER_ATTACHMENT);const p={label:e.name,size:{width:i,height:n,depthOrArrayLayers:a},mipLevelCount:o,sampleCount:c,dimension:u,format:l,usage:h};if(e.isVideoTexture){const t=e.source.data,s=new VideoFrame(t);p.size.width=s.displayWidth,p.size.height=s.displayHeight,s.close(),r.externalTexture=t}else{if(void 0===l)return console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);r.texture=s.device.createTexture(p)}if(e.isRenderTargetTexture&&d>1&&!e.isMultisampleRenderTargetTexture){const e=Object.assign({},p);e.label=e.label+"-msaa",e.sampleCount=d,r.msaaTexture=s.device.createTexture(e)}r.initialized=!0,r.textureDescriptorGPU=p}destroyTexture(e){const t=this.backend,s=t.get(e);s.texture.destroy(),void 0!==s.msaaTexture&&s.msaaTexture.destroy(),t.delete(e)}destroySampler(e){delete this.backend.get(e).sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let e=0;e<6;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e);else{const s=e.image.depth||1;for(let e=0;e<s;e++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,e)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:s}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:s,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const s=this.backend,{width:r,height:i}=s.getDrawingBufferSize(),n=this.depthTexture,a=s.get(n).texture;let o,u;if(t?(o=qe,u=Ke):e&&(o=Xe,u=b),void 0!==a){if(n.image.width===r&&n.image.height===i&&n.format===o&&n.type===u)return a;this.destroyTexture(n)}return n.name="depthBuffer",n.format=o,n.type=u,n.image.width=r,n.image.height=i,this.createTexture(n,{sampleCount:s.utils.getSampleCount(s.renderer.samples),width:r,height:i}),s.get(n).texture}updateTexture(e,t){const s=this.backend.get(e),{textureDescriptorGPU:r}=s;if(!e.isRenderTargetTexture&&void 0!==r){if(e.isDataTexture)this._copyBufferToTexture(t.image,s.texture,r,0,e.flipY);else if(e.isDataArrayTexture||e.isData3DTexture)for(let i=0;i<t.image.depth;i++)this._copyBufferToTexture(t.image,s.texture,r,i,e.flipY,i);else if(e.isCompressedTexture||e.isCompressedArrayTexture)this._copyCompressedBufferToTexture(e.mipmaps,s.texture,r);else if(e.isCubeTexture)this._copyCubeMapToTexture(t.images,s.texture,r,e.flipY);else if(e.isVideoTexture){const t=e.source.data;s.externalTexture=t}else this._copyImageToTexture(t.image,s.texture,r,0,e.flipY);s.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,s,r,i,n){const a=this.backend.device,o=this.backend.get(e),u=o.texture,l=o.textureDescriptorGPU.format,d=this._getBytesPerTexel(l);let c=r*d;c=256*Math.ceil(c/256);const h=a.createBuffer({size:r*i*d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:u,origin:{x:t,y:s,z:n}},{buffer:h,bytesPerRow:c},{width:r,height:i});const g=this._getTypedArrayType(l);a.queue.submit([p.finish()]),await h.mapAsync(GPUMapMode.READ);return new g(h.getMappedRange())}_isEnvironmentTexture(e){const t=e.mapping;return t===se||t===re||t===v||t===A}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const s=new he;s.minFilter=ze,s.magFilter=ze,this.createTexture(s,{width:1,height:1,format:e}),this.defaultTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(void 0===t){const s=new te;s.minFilter=ze,s.magFilter=ze,this.createTexture(s,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=s}return this.backend.get(t).texture}_getDefaultVideoFrame(){let e=this.defaultVideoFrame;if(null===e){const t={timestamp:0,codedWidth:1,codedHeight:1,format:"RGBA"};this.defaultVideoFrame=e=new VideoFrame(new Uint8Array([0,0,0,255]),t)}return e}_copyCubeMapToTexture(e,t,s,r){for(let i=0;i<6;i++){const n=e[i],a=!0===r?WA[i]:i;n.isDataTexture?this._copyBufferToTexture(n.image,t,s,a,r):this._copyImageToTexture(n,t,s,a,r)}}_copyImageToTexture(e,t,s,r,i){this.backend.device.queue.copyExternalImageToTexture({source:e},{texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===i&&this._flipY(t,s,r)}_getPassUtils(){let e=this._passUtils;return null===e&&(this._passUtils=e=new $A(this.backend.device)),e}_generateMipmaps(e,t,s=0){this._getPassUtils().generateMipmaps(e,t,s)}_flipY(e,t,s=0){this._getPassUtils().flipY(e,t,s)}_copyBufferToTexture(e,t,s,r,i,n=0){const a=this.backend.device,o=e.data,u=this._getBytesPerTexel(s.format),l=e.width*u;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:r}},o,{offset:e.width*e.height*u*n,bytesPerRow:l},{width:e.width,height:e.height,depthOrArrayLayers:1}),!0===i&&this._flipY(t,s,r)}_copyCompressedBufferToTexture(e,t,s){const r=this.backend.device,i=this._getBlockData(s.format),n=s.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const o=e[a],u=o.width,l=o.height,d=n?s.size.depthOrArrayLayers:1,c=Math.ceil(u/i.width)*i.byteLength,h=c*Math.ceil(l/i.height);for(let e=0;e<d;e++)r.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:e}},o.data,{offset:e*h,bytesPerRow:c,rowsPerImage:Math.ceil(l/i.height)},{width:Math.ceil(u/i.width)*i.width,height:Math.ceil(l/i.height)*i.height,depthOrArrayLayers:1})}}_getBlockData(e){return e===Iy.BC1RGBAUnorm||e===Iy.BC1RGBAUnormSRGB?{byteLength:8,width:4,height:4}:e===Iy.BC2RGBAUnorm||e===Iy.BC2RGBAUnormSRGB||e===Iy.BC3RGBAUnorm||e===Iy.BC3RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Iy.BC4RUnorm||e===Iy.BC4RSNorm?{byteLength:8,width:4,height:4}:e===Iy.BC5RGUnorm||e===Iy.BC5RGSnorm||e===Iy.BC6HRGBUFloat||e===Iy.BC6HRGBFloat||e===Iy.BC7RGBAUnorm||e===Iy.BC7RGBAUnormSRGB?{byteLength:16,width:4,height:4}:e===Iy.ETC2RGB8Unorm||e===Iy.ETC2RGB8UnormSRGB||e===Iy.ETC2RGB8A1Unorm||e===Iy.ETC2RGB8A1UnormSRGB?{byteLength:8,width:4,height:4}:e===Iy.ETC2RGBA8Unorm||e===Iy.ETC2RGBA8UnormSRGB?{byteLength:16,width:4,height:4}:e===Iy.EACR11Unorm||e===Iy.EACR11Snorm?{byteLength:8,width:4,height:4}:e===Iy.EACRG11Unorm||e===Iy.EACRG11Snorm||e===Iy.ASTC4x4Unorm||e===Iy.ASTC4x4UnormSRGB?{byteLength:16,width:4,height:4}:e===Iy.ASTC5x4Unorm||e===Iy.ASTC5x4UnormSRGB?{byteLength:16,width:5,height:4}:e===Iy.ASTC5x5Unorm||e===Iy.ASTC5x5UnormSRGB?{byteLength:16,width:5,height:5}:e===Iy.ASTC6x5Unorm||e===Iy.ASTC6x5UnormSRGB?{byteLength:16,width:6,height:5}:e===Iy.ASTC6x6Unorm||e===Iy.ASTC6x6UnormSRGB?{byteLength:16,width:6,height:6}:e===Iy.ASTC8x5Unorm||e===Iy.ASTC8x5UnormSRGB?{byteLength:16,width:8,height:5}:e===Iy.ASTC8x6Unorm||e===Iy.ASTC8x6UnormSRGB?{byteLength:16,width:8,height:6}:e===Iy.ASTC8x8Unorm||e===Iy.ASTC8x8UnormSRGB?{byteLength:16,width:8,height:8}:e===Iy.ASTC10x5Unorm||e===Iy.ASTC10x5UnormSRGB?{byteLength:16,width:10,height:5}:e===Iy.ASTC10x6Unorm||e===Iy.ASTC10x6UnormSRGB?{byteLength:16,width:10,height:6}:e===Iy.ASTC10x8Unorm||e===Iy.ASTC10x8UnormSRGB?{byteLength:16,width:10,height:8}:e===Iy.ASTC10x10Unorm||e===Iy.ASTC10x10UnormSRGB?{byteLength:16,width:10,height:10}:e===Iy.ASTC12x10Unorm||e===Iy.ASTC12x10UnormSRGB?{byteLength:16,width:12,height:10}:e===Iy.ASTC12x12Unorm||e===Iy.ASTC12x12UnormSRGB?{byteLength:16,width:12,height:12}:void 0}_convertAddressMode(e){let t=Ly;return e===Ge?t=Vy:e===Rs&&(t=Dy),t}_convertFilterMode(e){let t=Oy;return e!==ze&&e!==Cs&&e!==Fe||(t=Gy),t}_getBytesPerTexel(e){return e===Iy.R8Unorm||e===Iy.R8Snorm||e===Iy.R8Uint||e===Iy.R8Sint?1:e===Iy.R16Uint||e===Iy.R16Sint||e===Iy.R16Float||e===Iy.RG8Unorm||e===Iy.RG8Snorm||e===Iy.RG8Uint||e===Iy.RG8Sint?2:e===Iy.R32Uint||e===Iy.R32Sint||e===Iy.R32Float||e===Iy.RG16Uint||e===Iy.RG16Sint||e===Iy.RG16Float||e===Iy.RGBA8Unorm||e===Iy.RGBA8UnormSRGB||e===Iy.RGBA8Snorm||e===Iy.RGBA8Uint||e===Iy.RGBA8Sint||e===Iy.BGRA8Unorm||e===Iy.BGRA8UnormSRGB||e===Iy.RGB9E5UFloat||e===Iy.RGB10A2Unorm||e===Iy.RG11B10UFloat||e===Iy.Depth32Float||e===Iy.Depth24Plus||e===Iy.Depth24PlusStencil8||e===Iy.Depth32FloatStencil8?4:e===Iy.RG32Uint||e===Iy.RG32Sint||e===Iy.RG32Float||e===Iy.RGBA16Uint||e===Iy.RGBA16Sint||e===Iy.RGBA16Float?8:e===Iy.RGBA32Uint||e===Iy.RGBA32Sint||e===Iy.RGBA32Float?16:void 0}_getTypedArrayType(e){return e===Iy.R8Uint?Uint8Array:e===Iy.R8Sint?Int8Array:e===Iy.R8Unorm?Uint8Array:e===Iy.R8Snorm?Int8Array:e===Iy.RG8Uint?Uint8Array:e===Iy.RG8Sint?Int8Array:e===Iy.RG8Unorm?Uint8Array:e===Iy.RG8Snorm?Int8Array:e===Iy.RGBA8Uint?Uint8Array:e===Iy.RGBA8Sint?Int8Array:e===Iy.RGBA8Unorm?Uint8Array:e===Iy.RGBA8Snorm?Int8Array:e===Iy.R16Uint?Uint16Array:e===Iy.R16Sint?Int16Array:e===Iy.RG16Uint?Uint16Array:e===Iy.RG16Sint?Int16Array:e===Iy.RGBA16Uint?Uint16Array:e===Iy.RGBA16Sint?Int16Array:e===Iy.R16Float||e===Iy.RG16Float||e===Iy.RGBA16Float?Uint16Array:e===Iy.R32Uint?Uint32Array:e===Iy.R32Sint?Int32Array:e===Iy.R32Float?Float32Array:e===Iy.RG32Uint?Uint32Array:e===Iy.RG32Sint?Int32Array:e===Iy.RG32Float?Float32Array:e===Iy.RGBA32Uint?Uint32Array:e===Iy.RGBA32Sint?Int32Array:e===Iy.RGBA32Float?Float32Array:e===Iy.BGRA8Unorm||e===Iy.BGRA8UnormSRGB?Uint8Array:e===Iy.RGB10A2Unorm||e===Iy.RGB9E5UFloat||e===Iy.RG11B10UFloat?Uint32Array:e===Iy.Depth32Float?Float32Array:e===Iy.Depth24Plus||e===Iy.Depth24PlusStencil8?Uint32Array:e===Iy.Depth32FloatStencil8?Float32Array:void 0}_getDimension(e){let t;return t=e.isData3DTexture?wb:Eb,t}}function qA(e,t=null){const s=e.format,r=e.type,i=e.colorSpace;let n;if(!0===e.isFramebufferTexture&&e.type===Ye)n=Iy.BGRA8Unorm;else if(!0===e.isCompressedTexture||!0===e.isCompressedArrayTexture)switch(s){case Xt:n=i===c?Iy.BC1RGBAUnormSRGB:Iy.BC1RGBAUnorm;break;case Kt:n=i===c?Iy.BC2RGBAUnormSRGB:Iy.BC2RGBAUnorm;break;case Yt:n=i===c?Iy.BC3RGBAUnormSRGB:Iy.BC3RGBAUnorm;break;case ss:n=i===c?Iy.ETC2RGB8UnormSRGB:Iy.ETC2RGB8Unorm;break;case rs:n=i===c?Iy.ETC2RGBA8UnormSRGB:Iy.ETC2RGBA8Unorm;break;case is:n=i===c?Iy.ASTC4x4UnormSRGB:Iy.ASTC4x4Unorm;break;case ns:n=i===c?Iy.ASTC5x4UnormSRGB:Iy.ASTC5x4Unorm;break;case as:n=i===c?Iy.ASTC5x5UnormSRGB:Iy.ASTC5x5Unorm;break;case os:n=i===c?Iy.ASTC6x5UnormSRGB:Iy.ASTC6x5Unorm;break;case us:n=i===c?Iy.ASTC6x6UnormSRGB:Iy.ASTC6x6Unorm;break;case ls:n=i===c?Iy.ASTC8x5UnormSRGB:Iy.ASTC8x5Unorm;break;case hs:n=i===c?Iy.ASTC8x6UnormSRGB:Iy.ASTC8x6Unorm;break;case ps:n=i===c?Iy.ASTC8x8UnormSRGB:Iy.ASTC8x8Unorm;break;case gs:n=i===c?Iy.ASTC10x5UnormSRGB:Iy.ASTC10x5Unorm;break;case ms:n=i===c?Iy.ASTC10x6UnormSRGB:Iy.ASTC10x6Unorm;break;case fs:n=i===c?Iy.ASTC10x8UnormSRGB:Iy.ASTC10x8Unorm;break;case xs:n=i===c?Iy.ASTC10x10UnormSRGB:Iy.ASTC10x10Unorm;break;case ys:n=i===c?Iy.ASTC12x10UnormSRGB:Iy.ASTC12x10Unorm;break;case bs:n=i===c?Iy.ASTC12x12UnormSRGB:Iy.ASTC12x12Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",s)}else switch(s){case Be:switch(r){case lt:n=Iy.RGBA8Snorm;break;case ct:n=Iy.RGBA16Sint;break;case ut:n=Iy.RGBA16Uint;break;case b:n=Iy.RGBA32Uint;break;case T:n=Iy.RGBA32Sint;break;case Ye:n=i===c?Iy.RGBA8UnormSRGB:Iy.RGBA8Unorm;break;case Me:n=Iy.RGBA16Float;break;case F:n=Iy.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",r)}break;case at:if(r===$t)n=Iy.RGB9E5UFloat;else console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",r);break;case rt:switch(r){case lt:n=Iy.R8Snorm;break;case ct:n=Iy.R16Sint;break;case ut:n=Iy.R16Uint;break;case b:n=Iy.R32Uint;break;case T:n=Iy.R32Sint;break;case Ye:n=Iy.R8Unorm;break;case Me:n=Iy.R16Float;break;case F:n=Iy.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",r)}break;case je:switch(r){case lt:n=Iy.RG8Snorm;break;case ct:n=Iy.RG16Sint;break;case ut:n=Iy.RG16Uint;break;case b:n=Iy.RG32Uint;break;case T:n=Iy.RG32Sint;break;case Ye:n=Iy.RG8Unorm;break;case Me:n=Iy.RG16Float;break;case F:n=Iy.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",r)}break;case Xe:switch(r){case ut:n=Iy.Depth16Unorm;break;case b:n=Iy.Depth24Plus;break;case F:n=Iy.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",r)}break;case qe:switch(r){case Ke:n=Iy.Depth24PlusStencil8;break;case F:t&&!1===t.features.has(Vb.Depth32FloatStencil8)&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),n=Iy.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",r)}break;case st:switch(r){case T:n=Iy.R32Sint;break;case b:n=Iy.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",r)}break;case it:switch(r){case T:n=Iy.RG32Sint;break;case b:n=Iy.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",r)}break;case ot:switch(r){case T:n=Iy.RGBA32Sint;break;case b:n=Iy.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",r)}break;default:console.error("WebGPURenderer: Unsupported texture format.",s)}return n}const XA=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,KA=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/gi,YA={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"};class QA extends bS{constructor(e){const{type:t,inputs:s,name:r,inputsCode:i,blockCode:n,outputType:a}=(e=>{const t=(e=e.trim()).match(XA);if(null!==t&&4===t.length){const s=t[2],r=[];let i=null;for(;null!==(i=KA.exec(s));)r.push({name:i[1],type:i[2]});const n=[];for(let e=0;e<r.length;e++){const{name:t,type:s}=r[e];let i=s;i.startsWith("texture")&&(i=s.split("<")[0]),i=YA[i]||i,n.push(new nx(i,t))}const a=e.substring(t[0].length),o=t[3]||"void",u=void 0!==t[1]?t[1]:"";return{type:YA[o]||o,inputs:n,name:u,inputsCode:s,blockCode:a,outputType:o}}throw new Error("FunctionNode: Function is not a WGSL code.")})(e);super(t,s,r),this.inputsCode=i,this.blockCode=n,this.outputType=a}getCode(e=this.name){const t="void"!==this.outputType?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class ZA extends yS{parseFunction(e){return new QA(e)}}const JA=self.GPUShaderStage,tR={vertex:JA?JA.VERTEX:1,fragment:JA?JA.FRAGMENT:2,compute:JA?JA.COMPUTE:4},sR={instance:!0,swizzleAssign:!1,storageBuffer:!0},rR={"^^":"tsl_xor"},iR={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",imat2:"mat2x2<i32>",umat2:"mat2x2<u32>",bmat2:"mat2x2<bool>",mat3:"mat3x3<f32>",imat3:"mat3x3<i32>",umat3:"mat3x3<u32>",bmat3:"mat3x3<bool>",mat4:"mat4x4<f32>",imat4:"mat4x4<i32>",umat4:"mat4x4<u32>",bmat4:"mat4x4<bool>"},nR={tsl_xor:new tf("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new tf("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new tf("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new tf("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new tf("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new tf("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new tf("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new tf("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new tf("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping:new tf("\nfn tsl_repeatWrapping( uv : vec2<f32>, dimension : vec2<u32> ) -> vec2<u32> {\n\n\tlet uvScaled = vec2<u32>( uv * vec2<f32>( dimension ) );\n\n\treturn ( ( uvScaled % dimension ) + dimension ) % dimension;\n\n}\n"),biquadraticTexture:new tf("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, level : i32 ) -> vec4f {\n\n\tlet res = vec2f( textureDimensions( map, level ) );\n\n\tlet uvScaled = coord * res;\n\tlet uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n\t// https://www.shadertoy.com/view/WtyXRy\n\n\tlet uv = uvWrapping - 0.5;\n\tlet iuv = floor( uv );\n\tlet f = fract( uv );\n\n\tlet rg1 = textureLoad( map, vec2i( iuv + vec2( 0.5, 0.5 ) ), level );\n\tlet rg2 = textureLoad( map, vec2i( iuv + vec2( 1.5, 0.5 ) ), level );\n\tlet rg3 = textureLoad( map, vec2i( iuv + vec2( 0.5, 1.5 ) ), level );\n\tlet rg4 = textureLoad( map, vec2i( iuv + vec2( 1.5, 1.5 ) ), level );\n\n\treturn mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n")},aR={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};/Windows/g.test(navigator.userAgent)&&(nR.pow_float=new tf("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),nR.pow_vec2=new tf("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[nR.pow_float]),nR.pow_vec3=new tf("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[nR.pow_float]),nR.pow_vec4=new tf("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[nR.pow_float]),aR.pow_float="tsl_pow_float",aR.pow_vec2="tsl_pow_vec2",aR.pow_vec3="tsl_pow_vec3",aR.pow_vec4="tsl_pow_vec4");let oR="";!0!==/Firefox/g.test(navigator.userAgent)&&(oR+="diagnostic( off, derivative_uniformity );\n");class uR extends rx{constructor(e,t){super(e,t,new ZA),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}needsToWorkingColorSpace(e){return!0===e.isVideoTexture&&e.colorSpace!==y}_generateTextureSample(e,t,s,r,i=this.shaderStage){return"fragment"===i?r?`textureSample( ${t}, ${t}_sampler, ${s}, ${r} )`:`textureSample( ${t}, ${t}_sampler, ${s} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s):this.generateTextureLod(e,t,s,"0")}_generateVideoSample(e,t,s=this.shaderStage){if("fragment"===s)return`textureSampleBaseClampToEdge( ${e}, ${e}_sampler, vec2<f32>( ${t}.x, 1.0 - ${t}.y ) )`;console.error(`WebGPURenderer: THREE.VideoTexture does not support ${s} shader.`)}_generateTextureSampleLevel(e,t,s,r,i,n=this.shaderStage){return"fragment"===n&&!1===this.isUnfilterable(e)?`textureSampleLevel( ${t}, ${t}_sampler, ${s}, ${r} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,s,r):this.generateTextureLod(e,t,s,r)}generateFilteredTexture(e,t,s,r="0"){return this._include("biquadraticTexture"),`tsl_biquadraticTexture( ${t}, ${s}, i32( ${r} ) )`}generateTextureLod(e,t,s,r="0"){this._include("repeatWrapping");return`textureLoad( ${t}, tsl_repeatWrapping( ${s}, ${!0===e.isMultisampleRenderTargetTexture?`textureDimensions( ${t} )`:`textureDimensions( ${t}, 0 )`} ), i32( ${r} ) )`}generateTextureLoad(e,t,s,r,i="0u"){return r?`textureLoad( ${t}, ${s}, ${r}, ${i} )`:`textureLoad( ${t}, ${s}, ${i} )`}generateTextureStore(e,t,s,r){return`textureStore( ${t}, ${s}, ${r} )`}isUnfilterable(e){return"float"!==this.getComponentTypeFromTexture(e)||!this.isAvailable("float32Filterable")&&!0===e.isDataTexture&&e.type===F||!0===e.isMultisampleRenderTargetTexture}generateTexture(e,t,s,r,i=this.shaderStage){let n=null;return n=!0===e.isVideoTexture?this._generateVideoSample(t,s,i):this.isUnfilterable(e)?this.generateTextureLod(e,t,s,"0",r,i):this._generateTextureSample(e,t,s,r,i),n}generateTextureGrad(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`textureSampleGrad( ${t}, ${t}_sampler, ${s},  ${r[0]}, ${r[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${n} shader.`)}generateTextureCompare(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`textureSampleCompare( ${t}, ${t}_sampler, ${s}, ${r} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${n} shader.`)}generateTextureLevel(e,t,s,r,i,n=this.shaderStage){let a=null;return a=!0===e.isVideoTexture?this._generateVideoSample(t,s,n):this._generateTextureSampleLevel(e,t,s,r,i,n),a}generateTextureBias(e,t,s,r,i,n=this.shaderStage){if("fragment"===n)return`textureSampleBias( ${t}, ${t}_sampler, ${s}, ${r} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${n} shader.`)}getPropertyName(e,t=this.shaderStage){if(!0===e.isNodeVarying&&!0===e.needsInterpolation){if("vertex"===t)return`varyings.${e.name}`}else if(!0===e.isNodeUniform){const t=e.name,s=e.type;return"texture"===s||"cubeTexture"===s||"storageTexture"===s||"texture3D"===s?t:"buffer"===s||"storageBuffer"===s?`NodeBuffer_${e.id}.${t}`:e.groupNode.name+"."+t}return super.getPropertyName(e)}getOutputStructName(){return"output"}_getUniformGroupCount(e){return Object.keys(this.uniforms[e]).length}getFunctionOperator(e){const t=rR[e];return void 0!==t?(this._include(t),t):null}getStorageAccess(e){if(e.isStorageTextureNode)switch(e.access){case Nb:return"read";case _b:return"write";default:return"read_write"}else switch(e.access){case bb:return"read_write";case Tb:return"read";default:return"write"}}getUniformFromNode(e,t,s,r=null){const i=super.getUniformFromNode(e,t,s,r),n=this.getDataFromNode(e,s,this.globalCache);if(void 0===n.uniformGPU){let r;const a=e.groupNode,o=a.name,u=this.getBindGroupArray(o,s);if("texture"===t||"cubeTexture"===t||"storageTexture"===t||"texture3D"===t){let n=null;if("texture"===t||"storageTexture"===t?n=new oA(i.name,i.node,a,e.access?e.access:null):"cubeTexture"===t?n=new uA(i.name,i.node,a,e.access?e.access:null):"texture3D"===t&&(n=new lA(i.name,i.node,a,e.access?e.access:null)),n.store=!0===e.isStorageTextureNode,n.setVisibility(tR[s]),"fragment"===s&&!1===this.isUnfilterable(e.value)&&!1===n.store){const e=new OA(`${i.name}_sampler`,i.node,a);e.setVisibility(tR[s]),u.push(e,n),r=[e,n]}else u.push(n),r=[n]}else if("buffer"===t||"storageBuffer"===t){const i=new("storageBuffer"===t?kA:tA)(e,a);i.setVisibility(tR[s]),u.push(i),r=i}else{const e=this.uniformGroups[s]||(this.uniformGroups[s]={});let n=e[o];void 0===n&&(n=new iA(o,a),n.setVisibility(tR[s]),e[o]=n,u.push(n)),r=this.getNodeUniform(i,t),n.addUniform(r)}n.uniformGPU=r}return i}getBuiltin(e,t,s,r=this.shaderStage){const i=this.builtins[r]||(this.builtins[r]=new Map);return!1===i.has(e)&&i.set(e,{name:e,property:t,type:s}),t}getVertexIndex(){return"vertex"===this.shaderStage?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,s=this.flowShaderNode(e),r=[];for(const e of t.inputs)r.push(e.name+" : "+this.getType(e.type));let i=`fn ${t.name}( ${r.join(", ")} ) -> ${this.getType(t.type)} {\n${s.vars}\n${s.code}\n`;return s.result&&(i+=`\treturn ${s.result};\n`),i+="\n}\n",i}getInstanceIndex(){return"vertex"===this.shaderStage?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],s=this.directives[e];if(void 0!==s)for(const e of s)t.push(`enable ${e};`);return t.join("\n")}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}getBuiltins(e){const t=[],s=this.builtins[e];if(void 0!==s)for(const{name:e,property:r,type:i}of s.values())t.push(`@builtin( ${e} ) ${r} : ${i}`);return t.join(",\n\t")}getScopedArray(e,t,s,r){return!1===this.scopedArrays.has(e)&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:s,bufferCount:r}),e}getScopedArrays(e){if("compute"!==e)return;const t=[];for(const{name:e,scope:s,bufferType:r,bufferCount:i}of this.scopedArrays.values()){const n=this.getType(r);t.push(`var<${s}> ${e}: array< ${n}, ${i} >;`)}return t.join("\n")}getAttributes(e){const t=[];if("compute"===e&&(this.getBuiltin("global_invocation_id","id","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute")),"vertex"===e||"compute"===e){const e=this.getBuiltins("attribute");e&&t.push(e);const s=this.getAttributesArray();for(let e=0,r=s.length;e<r;e++){const r=s[e],i=r.name,n=this.getType(r.type);t.push(`@location( ${e} ) ${i} : ${n}`)}}return t.join(",\n\t")}getStructMembers(e){const t=[],s=e.getMemberTypes();for(let e=0;e<s.length;e++){const r=s[e];t.push(`\t@location( ${e} ) m${e} : ${r}<f32>`)}const r=this.getBuiltins("output");return r&&t.push("\t"+r),t.join(",\n")}getStructs(e){const t=[],s=this.structs[e];for(let e=0,r=s.length;e<r;e++){const r=s[e],i=r.name;let n=`struct ${i} {\n`;n+=this.getStructMembers(r),n+="\n}",t.push(n),t.push(`\nvar<private> output : ${i};\n\n`)}return t.join("\n\n")}getVar(e,t){return`var ${t} : ${this.getType(e)}`}getVars(e){const t=[],s=this.vars[e];if(void 0!==s)for(const e of s)t.push(`\t${this.getVar(e.type,e.name)};`);return`\n${t.join("\n")}\n`}getVaryings(e){const t=[];if("vertex"===e&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),"vertex"===e||"fragment"===e){const s=this.varyings,r=this.vars[e];for(let i=0;i<s.length;i++){const n=s[i];if(n.needsInterpolation){let e=`@location( ${i} )`;/^(int|uint|ivec|uvec)/.test(n.type)&&(e+=" @interpolate( flat )"),t.push(`${e} ${n.name} : ${this.getType(n.type)}`)}else"vertex"===e&&!1===r.includes(n)&&r.push(n)}}const s=this.getBuiltins(e);s&&t.push(s);const r=t.join(",\n\t");return"vertex"===e?this._getWGSLStruct("VaryingsStruct","\t"+r):r}getUniforms(e){const t=this.uniforms[e],s=[],r=[],i=[],n={};for(const i of t){const t=i.groupNode.name,a=this.bindingsIndexes[t];if("texture"===i.type||"cubeTexture"===i.type||"storageTexture"===i.type||"texture3D"===i.type){const t=i.node.value;let r;"fragment"===e&&!1===this.isUnfilterable(t)&&!0!==i.node.isStorageTextureNode&&(!0===t.isDepthTexture&&null!==t.compareFunction?s.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${i.name}_sampler : sampler_comparison;`):s.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${i.name}_sampler : sampler;`));let n="";if(!0===t.isMultisampleRenderTargetTexture&&(n="_multisampled"),!0===t.isCubeTexture)r="texture_cube<f32>";else if(!0===t.isDataArrayTexture||!0===t.isCompressedArrayTexture)r="texture_2d_array<f32>";else if(!0===t.isDepthTexture)r=`texture_depth${n}_2d`;else if(!0===t.isVideoTexture)r="texture_external";else if(!0===t.isData3DTexture)r="texture_3d<f32>";else if(!0===i.node.isStorageTextureNode){r=`texture_storage_2d<${qA(t)}, ${this.getStorageAccess(i.node)}>`}else{r=`texture${n}_2d<${this.getComponentTypeFromTexture(t).charAt(0)}32>`}s.push(`@binding( ${a.binding++} ) @group( ${a.group} ) var ${i.name} : ${r};`)}else if("buffer"===i.type||"storageBuffer"===i.type){const e=i.node,t=this.getType(e.bufferType),s=e.bufferCount,n=s>0?", "+s:"",o=`\t${i.name} : array< ${t}${n} >\n`,u=e.isStorageBufferNode?`storage, ${this.getStorageAccess(e)}`:"uniform";r.push(this._getWGSLStructBinding("NodeBuffer_"+e.id,o,u,a.binding++,a.group))}else{const e=this.getType(this.getVectorType(i.type)),t=i.groupNode.name;(n[t]||(n[t]={index:a.binding++,id:a.group,snippets:[]})).snippets.push(`\t${i.name} : ${e}`)}}for(const e in n){const t=n[e];i.push(this._getWGSLStructBinding(e,t.snippets.join(",\n"),"uniform",t.index,t.id))}let a=s.join("\n");return a+=r.join("\n"),a+=i.join("\n"),a}buildCode(){const e=null!==this.material?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){const s=e[t];s.uniforms=this.getUniforms(t),s.attributes=this.getAttributes(t),s.varyings=this.getVaryings(t),s.structs=this.getStructs(t),s.vars=this.getVars(t),s.codes=this.getCodes(t),s.directives=this.getDirectives(t),s.scopedArrays=this.getScopedArrays(t);let r="// code\n\n";r+=this.flowCode[t];const i=this.flowNodes[t],n=i[i.length-1],a=n.outputNode,o=void 0!==a&&!0===a.isOutputStructNode;for(const e of i){const i=this.getFlowData(e),u=e.name;if(u&&(r.length>0&&(r+="\n"),r+=`\t// flow -> ${u}\n\t`),r+=`${i.code}\n\t`,e===n&&"compute"!==t)if(r+="// result\n\n\t","vertex"===t)r+=`varyings.Vertex = ${i.result};`;else if("fragment"===t)if(o)s.returnType=a.nodeType,r+=`return ${i.result};`;else{let e="\t@location(0) color: vec4<f32>";const t=this.getBuiltins("output");t&&(e+=",\n\t"+t),s.returnType="OutputStruct",s.structs+=this._getWGSLStruct("OutputStruct",e),s.structs+="\nvar<private> output : OutputStruct;\n\n",r+=`output.color = ${i.result};\n\n\treturn output;`}}s.flow=r}null!==this.material?(this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment)):this.computeShader=this._getWGSLComputeCode(e.compute,(this.object.workgroupSize||[64]).join(", "))}getMethod(e,t=null){let s;return null!==t&&(s=this._getWGSLMethod(e+"_"+t)),void 0===s&&(s=this._getWGSLMethod(e)),s||e}getType(e){return iR[e]||e}isAvailable(e){let t=sR[e];return void 0===t&&("float32Filterable"===e&&(t=this.renderer.hasFeature("float32-filterable")),sR[e]=t),t}_getWGSLMethod(e){return void 0!==nR[e]&&this._include(e),aR[e]}_include(e){const t=nR[e];return t.build(this),null!==this.currentFunctionNode&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// uniforms\n${e.uniforms}\n\n// varyings\n${e.varyings}\nvar<private> varyings : VaryingsStruct;\n\n// codes\n${e.codes}\n\n@vertex\nfn main( ${e.attributes} ) -> VaryingsStruct {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n\treturn varyings;\n\n}\n`}_getWGSLFragmentCode(e){return`${this.getSignature()}\n// global\n${oR}\n\n// uniforms\n${e.uniforms}\n\n// structs\n${e.structs}\n\n// codes\n${e.codes}\n\n@fragment\nfn main( ${e.varyings} ) -> ${e.returnType} {\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLComputeCode(e,t){return`${this.getSignature()}\n// directives\n${e.directives}\n\n// system\nvar<private> instanceIndex : u32;\n\n// locals\n${e.scopedArrays}\n\n// uniforms\n${e.uniforms}\n\n// codes\n${e.codes}\n\n@compute @workgroup_size( ${t} )\nfn main( ${e.attributes} ) {\n\n\t// system\n\tinstanceIndex = id.x + id.y * numWorkgroups.x * u32(${t}) + id.z * numWorkgroups.x * numWorkgroups.y * u32(${t});\n\n\t// vars\n\t${e.vars}\n\n\t// flow\n\t${e.flow}\n\n}\n`}_getWGSLStruct(e,t){return`\nstruct ${e} {\n${t}\n};`}_getWGSLStructBinding(e,t,s,r=0,i=0){const n=e+"Struct";return`${this._getWGSLStruct(n,t)}\n@binding( ${r} ) @group( ${i} )\nvar<${s}> ${e} : ${n};`}}class lR{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return null!==e.depthTexture?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=Iy.Depth24PlusStencil8:e.depth&&(t=Iy.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getCurrentColorFormat(e){let t;return t=null!==e.textures?this.getTextureFormatGPU(e.textures[0]):this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return null!==e.textures?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){return e.isPoints?py:e.isLineSegments||e.isMesh&&!0===t.wireframe?gy:e.isLine?my:e.isMesh?fy:void 0}getSampleCount(e){let t=1;return e>1&&(t=Math.pow(2,Math.floor(Math.log2(e))),2===t&&(t=4)),t}getSampleCountRenderContext(e){return null!==e.textures?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){return navigator.userAgent.includes("Quest")?Iy.BGRA8Unorm:navigator.gpu.getPreferredCanvasFormat()}}const cR=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]),hR=new Map([[Pe,["float16"]]]),pR=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class gR{constructor(e){this.backend=e}createAttribute(e,t){const s=this._getBufferAttribute(e),r=this.backend,i=r.get(s);let n=i.buffer;if(void 0===n){const a=r.device;let o=s.array;if(!1===e.normalized&&(o.constructor===Int16Array||o.constructor===Uint16Array)){const e=new Uint32Array(o.length);for(let t=0;t<o.length;t++)e[t]=o[t];o=e}if(s.array=o,(s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute)&&3===s.itemSize){o=new o.constructor(4*s.count);for(let e=0;e<s.count;e++)o.set(s.array.subarray(3*e,3*e+3),4*e);s.itemSize=4,s.array=o}const u=o.byteLength+(4-o.byteLength%4)%4;n=a.createBuffer({label:s.name,size:u,usage:t,mappedAtCreation:!0}),new o.constructor(n.getMappedRange()).set(o),n.unmap(),i.buffer=n}}updateAttribute(e){const t=this._getBufferAttribute(e),s=this.backend,r=s.device,i=s.get(t).buffer,n=t.array,a=t.updateRanges;if(0===a.length)r.queue.writeBuffer(i,0,n,0);else{for(let e=0,t=a.length;e<t;e++){const t=a[e];r.queue.writeBuffer(i,0,n,t.start*n.BYTES_PER_ELEMENT,t.count*n.BYTES_PER_ELEMENT)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),s=new Map;for(let e=0;e<t.length;e++){const r=t[e],i=r.array.BYTES_PER_ELEMENT,n=this._getBufferAttribute(r);let a=s.get(n);if(void 0===a){let e,t;!0===r.isInterleavedBufferAttribute?(e=r.data.stride*i,t=r.data.isInstancedInterleavedBuffer?Lb:Ib):(e=r.itemSize*i,t=r.isInstancedBufferAttribute?Lb:Ib),!1!==r.normalized||r.array.constructor!==Int16Array&&r.array.constructor!==Uint16Array||(e=4),a={arrayStride:e,attributes:[],stepMode:t},s.set(n,a)}const o=this._getVertexFormat(r),u=!0===r.isInterleavedBufferAttribute?r.offset*i:0;a.attributes.push({shaderLocation:e,offset:u,format:o})}return Array.from(s.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,s=t.device,r=t.get(this._getBufferAttribute(e)).buffer,i=r.size,n=s.createBuffer({label:e.name,size:i,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),a=s.createCommandEncoder({});a.copyBufferToBuffer(r,0,n,0,i),n.unmap();const o=a.finish();s.queue.submit([o]),await n.mapAsync(GPUMapMode.READ);return n.getMappedRange()}_getVertexFormat(e){const{itemSize:t,normalized:s}=e,r=e.array.constructor,i=e.constructor;let n;if(1==t)n=pR.get(r);else{const e=(hR.get(i)||cR.get(r))[s?1:0];if(e){const s=r.BYTES_PER_ELEMENT*t,i=4*Math.floor((s+3)/4)/r.BYTES_PER_ELEMENT;if(i%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");n=`${e}x${i}`}}return n||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),n}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class mR{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend.device,s=[];let r=0;for(const t of e.bindings){const e={binding:r++,visibility:t.visibility};if(t.isUniformBuffer||t.isStorageBuffer){const s={};t.isStorageBuffer&&(s.type=t.access),e.buffer=s}else if(t.isSampler){const s={};t.texture.isDepthTexture&&null!==t.texture.compareFunction&&(s.type="comparison"),e.sampler=s}else if(t.isSampledTexture&&t.texture.isVideoTexture)e.externalTexture={};else if(t.isSampledTexture&&t.store){const s=this.backend.get(t.texture).texture.format,r=t.access;e.storageTexture={format:s,access:r}}else if(t.isSampledTexture){const s={};if(!0===t.texture.isMultisampleRenderTargetTexture&&(s.multisampled=!0),t.texture.isDepthTexture)s.sampleType=Ab;else if(t.texture.isDataTexture||t.texture.isDataArrayTexture||t.texture.isData3DTexture){const e=t.texture.type;e===T?s.sampleType=Rb:e===b?s.sampleType=Cb:e===F&&(this.backend.hasFeature("float32-filterable")?s.sampleType=vb:s.sampleType=Sb)}t.isSampledCubeTexture?s.viewDimension=Ub:t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?s.viewDimension=Bb:t.isSampledTexture3D&&(s.viewDimension=Fb),e.texture=s}else console.error(`WebGPUBindingUtils: Unsupported binding "${t}".`);s.push(e)}return t.createBindGroupLayout({entries:s})}createBindings(e){const{backend:t,bindGroupLayoutCache:s}=this,r=t.get(e);let i=s.get(e.bindingsReference);void 0===i&&(i=this.createBindingsLayout(e),s.set(e.bindingsReference,i));const n=this.createBindGroup(e,i);r.layout=i,r.group=n}updateBinding(e){const t=this.backend,s=t.device,r=e.buffer,i=t.get(e).buffer;s.queue.writeBuffer(i,0,r,0)}createBindGroup(e,t){const s=this.backend,r=s.device;let i=0;const n=[];for(const t of e.bindings){if(t.isUniformBuffer){const e=s.get(t);if(void 0===e.buffer){const s=t.byteLength,i=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,n=r.createBuffer({label:"bindingBuffer_"+t.name,size:s,usage:i});e.buffer=n}n.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isStorageBuffer){const e=s.get(t);if(void 0===e.buffer){const r=t.attribute;e.buffer=s.get(r).buffer}n.push({binding:i,resource:{buffer:e.buffer}})}else if(t.isSampler){const e=s.get(t.texture);n.push({binding:i,resource:e.sampler})}else if(t.isSampledTexture){const e=s.get(t.texture);let a;if(void 0!==e.externalTexture)a=r.importExternalTexture({source:e.externalTexture});else{const s=t.store?1:e.texture.mipLevelCount,r=`view-${e.texture.width}-${e.texture.height}-${s}`;if(a=e[r],void 0===a){const i=Pb;let n;n=t.isSampledCubeTexture?Ub:t.isSampledTexture3D?Fb:t.texture.isDataArrayTexture||t.texture.isCompressedArrayTexture?Bb:Mb,a=e[r]=e.texture.createView({aspect:i,dimension:n,mipLevelCount:s})}}n.push({binding:i,resource:a})}i++}return r.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:n})}}class fR{constructor(e){this.backend=e}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:s,material:r,geometry:i,pipeline:n}=e,{vertexProgram:a,fragmentProgram:o}=n,u=this.backend,l=u.device,d=u.utils,c=u.get(n),h=[];for(const t of e.getBindings()){const e=u.get(t);h.push(e.layout)}const p=u.attributeUtils.createShaderVertexBuffers(e);let g;!0===r.transparent&&r.blending!==j&&(g=this._getBlending(r));let m={};!0===r.stencilWrite&&(m={compare:this._getStencilCompare(r),failOp:this._getStencilOperation(r.stencilFail),depthFailOp:this._getStencilOperation(r.stencilZFail),passOp:this._getStencilOperation(r.stencilZPass)});const f=this._getColorWriteMask(r),x=[];if(null!==e.context.textures){const t=e.context.textures;for(let e=0;e<t.length;e++){const s=d.getTextureFormatGPU(t[e]);x.push({format:s,blend:g,writeMask:f})}}else{const t=d.getCurrentColorFormat(e.context);x.push({format:t,blend:g,writeMask:f})}const y=u.get(a).module,b=u.get(o).module,T=this._getPrimitiveState(s,i,r),_=this._getDepthCompare(r),N=d.getCurrentDepthStencilFormat(e.context),v=this._getSampleCount(e.context),S={label:`renderPipeline_${r.name||r.type}_${r.id}`,vertex:Object.assign({},y,{buffers:p}),fragment:Object.assign({},b,{targets:x}),primitive:T,depthStencil:{format:N,depthWriteEnabled:r.depthWrite,depthCompare:_,stencilFront:m,stencilBack:{},stencilReadMask:r.stencilFuncMask,stencilWriteMask:r.stencilWriteMask},multisample:{count:v,alphaToCoverageEnabled:r.alphaToCoverage},layout:l.createPipelineLayout({bindGroupLayouts:h})};if(null===t)c.pipeline=l.createRenderPipeline(S);else{const e=new Promise((e=>{l.createRenderPipelineAsync(S).then((t=>{c.pipeline=t,e()}))}));t.push(e)}}createBundleEncoder(e){const t=this.backend,{utils:s,device:r}=t,i=s.getCurrentDepthStencilFormat(e),n={label:"renderBundleEncoder",colorFormats:[s.getCurrentColorFormat(e)],depthStencilFormat:i,sampleCount:this._getSampleCount(e)};return r.createRenderBundleEncoder(n)}createComputePipeline(e,t){const s=this.backend,r=s.device,i=s.get(e.computeProgram).module,n=s.get(e),a=[];for(const e of t){const t=s.get(e);a.push(t.layout)}n.pipeline=r.createComputePipeline({compute:i,layout:r.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,s;const r=e.blending,i=e.blendSrc,n=e.blendDst,a=e.blendEquation;if(r===Mt){const r=null!==e.blendSrcAlpha?e.blendSrcAlpha:i,o=null!==e.blendDstAlpha?e.blendDstAlpha:n,u=null!==e.blendEquationAlpha?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(i),dstFactor:this._getBlendFactor(n),operation:this._getBlendOperation(a)},s={srcFactor:this._getBlendFactor(r),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(u)}}else{const i=(e,r,i,n)=>{t={srcFactor:e,dstFactor:r,operation:tb},s={srcFactor:i,dstFactor:n,operation:tb}};if(e.premultipliedAlpha)switch(r){case O:i(ky,jy,ky,jy);break;case ke:i(ky,ky,ky,ky);break;case Ut:i(zy,Hy,zy,ky);break;case Bt:i(zy,$y,zy,Wy)}else switch(r){case O:i(Wy,jy,ky,jy);break;case ke:i(Wy,ky,Wy,ky);break;case Ut:i(zy,Hy,zy,ky);break;case Bt:i(zy,$y,zy,$y)}}if(void 0!==t&&void 0!==s)return{color:t,alpha:s};console.error("THREE.WebGPURenderer: Invalid blending: ",r)}_getBlendFactor(e){let t;switch(e){case ft:t=zy;break;case xt:t=ky;break;case yt:t=$y;break;case vt:t=Hy;break;case bt:t=Wy;break;case St:t=jy;break;case _t:t=qy;break;case At:t=Xy;break;case Nt:t=Ky;break;case Rt:t=Yy;break;case Tt:t=Qy;break;case 211:t=Zy;break;case 212:t=Jy;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const s=e.stencilFunc;switch(s){case $s:t=yy;break;case ks:t=Ay;break;case zs:t=by;break;case Gs:t=_y;break;case Os:t=Ty;break;case Ds:t=Sy;break;case Vs:t=Ny;break;case Ls:t=vy;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",s)}return t}_getStencilOperation(e){let t;switch(e){case Qs:t=ub;break;case Ys:t=lb;break;case Ks:t=hb;break;case Xs:t=pb;break;case qs:t=gb;break;case js:t=mb;break;case Ws:t=xb;break;case Hs:t=yb;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case pt:t=tb;break;case gt:t=sb;break;case mt:t=rb;break;case Js:t=ib;break;case Zs:t=nb;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,s){const r={},i=this.backend.utils;switch(r.topology=i.getPrimitiveTopology(e,s),null!==t.index&&!0===e.isLine&&!0!==e.isLineSegments&&(r.stripIndexFormat=t.index.array instanceof Uint16Array?Fy:Py),s.side){case et:r.frontFace=wy,r.cullMode=Uy;break;case N:r.frontFace=wy,r.cullMode=By;break;case Je:r.frontFace=wy,r.cullMode=My;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",s.side)}return r}_getColorWriteMask(e){return!0===e.colorWrite?ob:ab}_getDepthCompare(e){let t;if(!1===e.depthTest)t=Ay;else{const s=e.depthFunc;switch(s){case Gt:t=yy;break;case Ot:t=Ay;break;case Dt:t=by;break;case Vt:t=_y;break;case Lt:t=Ty;break;case It:t=Sy;break;case Pt:t=Ny;break;case Ft:t=vy;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",s)}}return t}}class xR extends bA{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=void 0===e.alpha||e.alpha,this.parameters.requiredLimits=void 0===e.requiredLimits?{}:e.requiredLimits,this.trackTimestamp=!0===e.trackTimestamp,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new lR(this),this.attributeUtils=new gR(this),this.bindingUtils=new mR(this),this.pipelineUtils=new fR(this),this.textureUtils=new jA(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let s;if(void 0===t.device){const e={powerPreference:t.powerPreference},r=await navigator.gpu.requestAdapter(e);if(null===r)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const i=Object.values(Vb),n=[];for(const e of i)r.features.has(e)&&n.push(e);const a={requiredFeatures:n,requiredLimits:t.requiredLimits};s=await r.requestDevice(a)}else s=t.device;const r=void 0!==t.context?t.context:e.domElement.getContext("webgpu");this.device=s,this.context=r;const i=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Vb.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:i}),this.updateSize()}get coordinateSystem(){return R}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(null===e){const t=this.renderer;e={colorAttachments:[{view:null}],depthStencilAttachment:{view:this.textureUtils.getDepthBuffer(t.depth,t.stencil).createView()}};const s=e.colorAttachments[0];this.renderer.samples>0?s.view=this.colorBuffer.createView():s.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_getRenderPassDescriptor(e){const t=e.renderTarget,s=this.get(t);let r=s.descriptors;if(void 0===r||s.width!==t.width||s.height!==t.height||s.activeMipmapLevel!==t.activeMipmapLevel||s.samples!==t.samples){r={},s.descriptors=r;const e=()=>{t.removeEventListener("dispose",e),this.delete(t)};t.addEventListener("dispose",e)}const i=e.getCacheKey();let n=r[i];if(void 0===n){const a=e.textures,o=[];for(let t=0;t<a.length;t++){const s=this.get(a[t]),r=s.texture.createView({baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,dimension:Mb});let i,n;void 0!==s.msaaTexture?(i=s.msaaTexture.createView(),n=r):(i=r,n=void 0),o.push({view:i,resolveTarget:n,loadOp:Cy,storeOp:Ry})}n={colorAttachments:o,depthStencilAttachment:{view:this.get(e.depthTexture).texture.createView()}},r[i]=n,s.width=t.width,s.height=t.height,s.samples=t.samples,s.activeMipmapLevel=t.activeMipmapLevel}return n}beginRender(e){const t=this.get(e),s=this.device,r=e.occlusionQueryCount;let i,n;r>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,i=s.createQuerySet({type:"occlusion",count:r}),t.occlusionQuerySet=i,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(r),t.lastOcclusionObject=null),n=null===e.textures?this._getDefaultRenderPassDescriptor():this._getRenderPassDescriptor(e),this.initTimestampQuery(e,n),n.occlusionQuerySet=i;const a=n.depthStencilAttachment;if(null!==e.textures){const t=n.colorAttachments;for(let s=0;s<t.length;s++){const r=t[s];e.clearColor?(r.clearValue=0===s?e.clearColorValue:{r:0,g:0,b:0,a:1},r.loadOp=Ey,r.storeOp=Ry):(r.loadOp=Cy,r.storeOp=Ry)}}else{const t=n.colorAttachments[0];e.clearColor?(t.clearValue=e.clearColorValue,t.loadOp=Ey,t.storeOp=Ry):(t.loadOp=Cy,t.storeOp=Ry)}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=Ey,a.depthStoreOp=Ry):(a.depthLoadOp=Cy,a.depthStoreOp=Ry)),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=Ey,a.stencilStoreOp=Ry):(a.stencilLoadOp=Cy,a.stencilStoreOp=Ry));const o=s.createCommandEncoder({label:"renderContext_"+e.id}),u=o.beginRenderPass(n);if(t.descriptor=n,t.encoder=o,t.currentPass=u,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[],e.viewport&&this.updateViewport(e),e.scissor){const{x:t,y:s,width:r,height:i}=e.scissorValue;u.setScissorRect(t,s,r,i)}}finishRender(e){const t=this.get(e),s=e.occlusionQueryCount;if(t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),s>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery(),t.currentPass.end(),s>0){const r=8*s;let i=this.occludedResolveCache.get(r);void 0===i&&(i=this.device.createBuffer({size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(r,i));const n=this.device.createBuffer({size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,s,i,0),t.encoder.copyBufferToBuffer(i,0,n,0,r),t.occlusionQueryBuffer=n,this.resolveOccludedAsync(e)}if(this.prepareTimestampBuffer(e,t.encoder),this.device.queue.submit([t.encoder.finish()]),null!==e.textures){const t=e.textures;for(let e=0;e<t.length;e++){const s=t[e];!0===s.generateMipmaps&&this.textureUtils.generateMipmaps(s)}}}isOccluded(e,t){const s=this.get(e);return s.occluded&&s.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:s,currentOcclusionQueryObjects:r}=t;if(s&&r){const e=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await s.mapAsync(GPUMapMode.READ);const i=s.getMappedRange(),n=new BigUint64Array(i);for(let t=0;t<r.length;t++)n[t]!==BigInt(0)&&e.add(r[t]);s.destroy(),t.occluded=e}}updateViewport(e){const{currentPass:t}=this.get(e),{x:s,y:r,width:i,height:n,minDepth:a,maxDepth:o}=e.viewportValue;t.setViewport(s,r,i,n,a,o)}clear(e,t,s,r=null){const i=this.device,n=this.renderer;let a,o,u,l,d=[];if(e){const e=this.getClearColor();if(!0===this.renderer.alpha){const t=e.a;o={r:e.r*t,g:e.g*t,b:e.b*t,a:t}}else o={r:e.r,g:e.g,b:e.b,a:e.a}}if(null===r){u=n.depth,l=n.stencil;const t=this._getDefaultRenderPassDescriptor();if(e){d=t.colorAttachments;const e=d[0];e.clearValue=o,e.loadOp=Ey,e.storeOp=Ry}(u||l)&&(a=t.depthStencilAttachment)}else{if(u=r.depth,l=r.stencil,e)for(const e of r.textures){const t=this.get(e),s=t.texture.createView();let r,i;void 0!==t.msaaTexture?(r=t.msaaTexture.createView(),i=s):(r=s,i=void 0),d.push({view:r,resolveTarget:i,clearValue:o,loadOp:Ey,storeOp:Ry})}if(u||l){a={view:this.get(r.depthTexture).texture.createView()}}}u&&(t?(a.depthLoadOp=Ey,a.depthClearValue=n.getClearDepth(),a.depthStoreOp=Ry):(a.depthLoadOp=Cy,a.depthStoreOp=Ry)),l&&(s?(a.stencilLoadOp=Ey,a.stencilClearValue=n.getClearStencil(),a.stencilStoreOp=Ry):(a.stencilLoadOp=Cy,a.stencilStoreOp=Ry));const c=i.createCommandEncoder({});c.beginRenderPass({colorAttachments:d,depthStencilAttachment:a}).end(),i.queue.submit([c.finish()])}beginCompute(e){const t=this.get(e),s={};this.initTimestampQuery(e,s),t.cmdEncoderGPU=this.device.createCommandEncoder(),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(s)}compute(e,t,s,r){const{passEncoderGPU:i}=this.get(e),n=this.get(r).pipeline;i.setPipeline(n);for(let e=0,t=s.length;e<t;e++){const t=s[e],r=this.get(t);i.setBindGroup(e,r.group)}const a=this.device.limits.maxComputeWorkgroupsPerDimension,o=this.get(t);void 0===o.dispatchSize&&(o.dispatchSize={x:0,y:1,z:1});const{dispatchSize:u}=o;t.dispatchCount>a?(u.x=Math.min(t.dispatchCount,a),u.y=Math.ceil(t.dispatchCount/a)):u.x=t.dispatchCount,i.dispatchWorkgroups(u.x,u.y,u.z)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.prepareTimestampBuffer(e,t.cmdEncoderGPU),this.device.queue.submit([t.cmdEncoderGPU.finish()])}draw(e,t){const{object:s,context:r,pipeline:i}=e,n=e.getBindings(),a=this.get(r),o=this.get(i).pipeline,u=a.currentSets,l=a.currentPass,d=e.getDrawParameters();if(null===d)return;u.pipeline!==o&&(l.setPipeline(o),u.pipeline=o);const c=u.bindingGroups;for(let e=0,t=n.length;e<t;e++){const t=n[e],s=this.get(t);c[t.index]!==t.id&&(l.setBindGroup(t.index,s.group),c[t.index]=t.id)}const h=e.getIndex(),p=null!==h;if(!0===p&&u.index!==h){const e=this.get(h).buffer,t=h.array instanceof Uint16Array?Fy:Py;l.setIndexBuffer(e,t),u.index=h}const g=e.getVertexBuffers();for(let e=0,t=g.length;e<t;e++){const t=g[e];if(u.attributes[e]!==t){const s=this.get(t).buffer;l.setVertexBuffer(e,s),u.attributes[e]=t}}if(void 0!==a.occlusionQuerySet){const e=a.lastOcclusionObject;e!==s&&(null!==e&&!0===e.occlusionTest&&(l.endOcclusionQuery(),a.occlusionQueryIndex++),!0===s.occlusionTest&&(l.beginOcclusionQuery(a.occlusionQueryIndex),a.occlusionQueryObjects[a.occlusionQueryIndex]=s),a.lastOcclusionObject=s)}if(!0===s.isBatchedMesh){const e=s._multiDrawStarts,t=s._multiDrawCounts,r=s._multiDrawCount,i=s._multiDrawInstances,n=p?h.array.BYTES_PER_ELEMENT:1;for(let s=0;s<r;s++){const r=i?i[s]:1,a=r>1?0:s;l.drawIndexed(t[s],r,e[s]/n,0,a)}}else if(!0===p){const{vertexCount:e,instanceCount:r,firstVertex:i}=d;l.drawIndexed(e,r,i,0,0),t.update(s,e,r)}else{const{vertexCount:e,instanceCount:r,firstVertex:i}=d;l.draw(e,r,i,0),t.update(s,e,r)}}needsRenderUpdate(e){const t=this.get(e),{object:s,material:r}=e,i=this.utils,n=i.getSampleCountRenderContext(e.context),a=i.getCurrentColorSpace(e.context),o=i.getCurrentColorFormat(e.context),u=i.getCurrentDepthStencilFormat(e.context),l=i.getPrimitiveTopology(s,r);let d=!1;return t.material===r&&t.materialVersion===r.version&&t.transparent===r.transparent&&t.blending===r.blending&&t.premultipliedAlpha===r.premultipliedAlpha&&t.blendSrc===r.blendSrc&&t.blendDst===r.blendDst&&t.blendEquation===r.blendEquation&&t.blendSrcAlpha===r.blendSrcAlpha&&t.blendDstAlpha===r.blendDstAlpha&&t.blendEquationAlpha===r.blendEquationAlpha&&t.colorWrite===r.colorWrite&&t.depthWrite===r.depthWrite&&t.depthTest===r.depthTest&&t.depthFunc===r.depthFunc&&t.stencilWrite===r.stencilWrite&&t.stencilFunc===r.stencilFunc&&t.stencilFail===r.stencilFail&&t.stencilZFail===r.stencilZFail&&t.stencilZPass===r.stencilZPass&&t.stencilFuncMask===r.stencilFuncMask&&t.stencilWriteMask===r.stencilWriteMask&&t.side===r.side&&t.alphaToCoverage===r.alphaToCoverage&&t.sampleCount===n&&t.colorSpace===a&&t.colorFormat===o&&t.depthStencilFormat===u&&t.primitiveTopology===l&&t.clippingContextCacheKey===e.clippingContext.cacheKey||(t.material=r,t.materialVersion=r.version,t.transparent=r.transparent,t.blending=r.blending,t.premultipliedAlpha=r.premultipliedAlpha,t.blendSrc=r.blendSrc,t.blendDst=r.blendDst,t.blendEquation=r.blendEquation,t.blendSrcAlpha=r.blendSrcAlpha,t.blendDstAlpha=r.blendDstAlpha,t.blendEquationAlpha=r.blendEquationAlpha,t.colorWrite=r.colorWrite,t.depthWrite=r.depthWrite,t.depthTest=r.depthTest,t.depthFunc=r.depthFunc,t.stencilWrite=r.stencilWrite,t.stencilFunc=r.stencilFunc,t.stencilFail=r.stencilFail,t.stencilZFail=r.stencilZFail,t.stencilZPass=r.stencilZPass,t.stencilFuncMask=r.stencilFuncMask,t.stencilWriteMask=r.stencilWriteMask,t.side=r.side,t.alphaToCoverage=r.alphaToCoverage,t.sampleCount=n,t.colorSpace=a,t.colorFormat=o,t.depthStencilFormat=u,t.primitiveTopology=l,t.clippingContextCacheKey=e.clippingContext.cacheKey,d=!0),d}getRenderCacheKey(e){const{object:t,material:s}=e,r=this.utils,i=e.context;return[s.transparent,s.blending,s.premultipliedAlpha,s.blendSrc,s.blendDst,s.blendEquation,s.blendSrcAlpha,s.blendDstAlpha,s.blendEquationAlpha,s.colorWrite,s.depthWrite,s.depthTest,s.depthFunc,s.stencilWrite,s.stencilFunc,s.stencilFail,s.stencilZFail,s.stencilZPass,s.stencilFuncMask,s.stencilWriteMask,s.side,r.getSampleCountRenderContext(i),r.getCurrentColorSpace(i),r.getCurrentColorFormat(i),r.getCurrentDepthStencilFormat(i),r.getPrimitiveTopology(t,s),e.clippingContext.cacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}copyTextureToBuffer(e,t,s,r,i,n){return this.textureUtils.copyTextureToBuffer(e,t,s,r,i,n)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const s=this.get(e);if(!s.timeStampQuerySet){const e=this.device.createQuerySet({type:"timestamp",count:2}),r={querySet:e,beginningOfPassWriteIndex:0,endOfPassWriteIndex:1};Object.assign(t,{timestampWrites:r}),s.timeStampQuerySet=e}}prepareTimestampBuffer(e,t){if(!this.trackTimestamp)return;const s=this.get(e),r=2*BigInt64Array.BYTES_PER_ELEMENT;void 0===s.currentTimestampQueryBuffers&&(s.currentTimestampQueryBuffers={resolveBuffer:this.device.createBuffer({label:"timestamp resolve buffer",size:r,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),resultBuffer:this.device.createBuffer({label:"timestamp result buffer",size:r,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),isMappingPending:!1});const{resolveBuffer:i,resultBuffer:n,isMappingPending:a}=s.currentTimestampQueryBuffers;!0!==a&&(t.resolveQuerySet(s.timeStampQuerySet,0,2,i,0),t.copyBufferToBuffer(i,0,n,0,r))}async resolveTimestampAsync(e,t="render"){if(!this.trackTimestamp)return;const s=this.get(e);if(void 0===s.currentTimestampQueryBuffers)return;const{resultBuffer:r,isMappingPending:i}=s.currentTimestampQueryBuffers;!0!==i&&(s.currentTimestampQueryBuffers.isMappingPending=!0,r.mapAsync(GPUMapMode.READ).then((()=>{const e=new BigUint64Array(r.getMappedRange()),i=Number(e[1]-e[0])/1e6;this.renderer.info.updateTimestamp(t,i),r.unmap(),s.currentTimestampQueryBuffers.isMappingPending=!1})))}createNodeBuilder(e,t){return new uR(e,t)}createProgram(e){this.get(e).module={module:this.device.createShaderModule({code:e.code,label:e.stage}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const s=this.get(e),r=s.currentPass.finish();this.get(t).bundleGPU=r,s.currentSets=s._currentSets,s.currentPass=s._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e){this.bindingUtils.createBindings(e)}updateBindings(e){this.bindingUtils.createBindings(e)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,s=null,r=null,i=0){let n=0,a=0,o=0,u=0,l=0,d=0,c=e.image.width,h=e.image.height;null!==s&&(u=s.x,l=s.y,d=s.z||0,c=s.width,h=s.height),null!==r&&(n=r.x,a=r.y,o=r.z||0);const p=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),g=this.get(e).texture,m=this.get(t).texture;p.copyTextureToTexture({texture:g,mipLevel:i,origin:{x:u,y:l,z:d}},{texture:m,mipLevel:i,origin:{x:n,y:a,z:o}},[c,h,1]),this.device.queue.submit([p.finish()])}copyFramebufferToTexture(e,t){const s=this.get(t),{encoder:r,descriptor:i}=s;let n=null;n=t.renderTarget?e.isDepthTexture?this.get(t.depthTexture).texture:this.get(t.textures[0]).texture:e.isDepthTexture?this.textureUtils.getDepthBuffer(t.depth,t.stencil):this.context.getCurrentTexture();const a=this.get(e).texture;if(n.format===a.format){s.currentPass.end(),r.copyTextureToTexture({texture:n,origin:{x:0,y:0,z:0}},{texture:a},[e.image.width,e.image.height]),e.generateMipmaps&&this.textureUtils.generateMipmaps(e);for(let e=0;e<i.colorAttachments.length;e++)i.colorAttachments[e].loadOp=Cy;t.depth&&(i.depthStencilAttachment.depthLoadOp=Cy),t.stencil&&(i.depthStencilAttachment.stencilLoadOp=Cy),s.currentPass=r.beginRenderPass(i),s.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null}}else console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",n.format,a.format)}}class yR extends tr{constructor(e,t,s,r,i,n){super(e,t,s,r,i,n),this.iesMap=null}copy(e,t){return super.copy(e,t),this.iesMap=e.iesMap,this}}class bR extends $S{constructor(){super(),this.addMaterial(_p,ce),this.addMaterial(Wg,pe),this.addMaterial(qg,ge),this.addMaterial(Jg,me),this.addMaterial(hp,ue),this.addMaterial(bp,le),this.addMaterial(Qh,$),this.addMaterial(im,xe),this.addMaterial($h,z),this.addMaterial(Wh,k),this.addMaterial(om,G),this.addMaterial(hm,ye),this.addMaterial(mm,Te),this.addLight(aS,sr),this.addLight(oS,rr),this.addLight(hS,ir),this.addLight(pS,tr),this.addLight(mS,nr),this.addLight(fS,ar),this.addLight(xS,or),this.addLight(gS,yR),this.addToneMapping(MN,ur),this.addToneMapping(BN,lr),this.addToneMapping(UN,dr),this.addToneMapping(PN,cr),this.addToneMapping(DN,hr),this.addToneMapping(ON,pr),this.addColorSpace(wN,su(d,c)),this.addColorSpace(EN,su(c,d))}}class TR extends YS{constructor(e={}){let t;e.forceWebGL?t=VA:(t=xR,e.getFallback=()=>(console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."),new VA(e)));super(new t(e),e),this.nodes.library=new bR,this.isWebGPURenderer=!0}}class _R extends gr{constructor(){super(),this.isBundleGroup=!0,this.type="BundleGroup",this.static=!0,this.version=0}set needsUpdate(e){!0===e&&this.version++}}const NR=new Oh,vR=new Jx(NR);class SR{constructor(e,t=Yi(0,0,1,1)){this.renderer=e,this.outputNode=t,this.outputColorTransform=!0,this.needsUpdate=!0,NR.name="PostProcessing"}render(){this.update();const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;e.toneMapping=h,e.outputColorSpace=d,vR.render(e),e.toneMapping=t,e.outputColorSpace=s}update(){if(!0===this.needsUpdate){const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;vR.material.fragmentNode=!0===this.outputColorTransform?Lu(this.outputNode,t,s):this.outputNode.context({toneMapping:t,outputColorSpace:s}),vR.material.needsUpdate=!0,this.needsUpdate=!1}}async renderAsync(){this.update();const e=this.renderer,t=e.toneMapping,s=e.outputColorSpace;e.toneMapping=h,e.outputColorSpace=d,await vR.renderAsync(e),e.toneMapping=t,e.outputColorSpace=s}}class AR extends he{constructor(e=1,t=1){super(),this.image={width:e,height:t},this.magFilter=K,this.minFilter=K,this.isStorageTexture=!0}}class RR extends Ae{constructor(e,t,s=Float32Array){!1===ArrayBuffer.isView(e)&&(e=new s(e*t)),super(e,t),this.isStorageBufferAttribute=!0}}class CR extends B{constructor(e,t,s=Float32Array){!1===ArrayBuffer.isView(e)&&(e=new s(e*t)),super(e,t),this.isStorageInstancedBufferAttribute=!0}}class ER extends mr{constructor(e){super(e),this.textures={},this.nodes={}}load(e,t,s,r){const i=new fr(this.manager);i.setPath(this.path),i.setRequestHeader(this.requestHeader),i.setWithCredentials(this.withCredentials),i.load(e,(s=>{try{t(this.parse(JSON.parse(s)))}catch(t){r?r(t):console.error(t),this.manager.itemError(e)}}),s,r)}parseNodes(e){const t={};if(void 0!==e){for(const s of e){const{uuid:e,type:r}=s;t[e]=this.createNodeFromType(r),t[e].uuid=e}const s={nodes:t,textures:this.textures};for(const r of e){r.meta=s;t[r.uuid].deserialize(r),delete r.meta}}return t}parse(e){const t=this.createNodeFromType(e.type);t.uuid=e.uuid;const s={nodes:this.parseNodes(e.nodes),textures:this.textures};return e.meta=s,t.deserialize(e),delete e.meta,t}setTextures(e){return this.textures=e,this}setNodes(e){return this.nodes=e,this}createNodeFromType(e){return void 0===this.nodes[e]?(console.error("THREE.NodeLoader: Node type not found:",e),Di()):Ri(new this.nodes[e])}}class wR extends xr{constructor(e){super(e),this.nodes={},this.nodeMaterials={}}parse(e){const t=super.parse(e),s=this.nodes,r=e.inputNodes;for(const e in r){const i=r[e];t[e]=s[i]}return t}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}createMaterialFromType(e){const t=this.nodeMaterials[e];return void 0!==t?new t:super.createMaterialFromType(e)}}class MR extends yr{constructor(e){super(e),this.nodes={},this.nodeMaterials={},this._nodesJSON=null}setNodes(e){return this.nodes=e,this}setNodeMaterials(e){return this.nodeMaterials=e,this}parse(e,t){this._nodesJSON=e.nodes;const s=super.parse(e,t);return this._nodesJSON=null,s}parseNodes(e,t){if(void 0!==e){const s=new ER;return s.setNodes(this.nodes),s.setTextures(t),s.parseNodes(e)}return{}}parseMaterials(e,t){const s={};if(void 0!==e){const r=this.parseNodes(this._nodesJSON,t),i=new wR;i.setTextures(t),i.setNodes(r),i.setNodeMaterials(this.nodeMaterials);for(let t=0,r=e.length;t<r;t++){const r=e[t];s[r.uuid]=i.parse(r)}}return s}}export{cr as ACESFilmicToneMapping,rh as AONode,pt as AddEquation,ie as AddOperation,ke as AdditiveBlending,hT as AfterImageNode,hr as AgXToneMapping,Ht as AlphaFormat,ws as AlwaysCompare,Ot as AlwaysDepth,ks as AlwaysStencilFunc,nr as AmbientLight,mS as AmbientLightNode,x_ as AnaglyphPassNode,q_ as AnalyticLightNode,NT as AnamorphicNode,Vr as ArrayElementNode,Qn as AssignNode,Du as AttributeNode,wp as BRDF_GGX,gp as BRDF_Lambert,N as BackSide,ap as BasicEnvironmentNode,Lc as BatchNode,QT as BloomNode,W as BoxGeometry,Wc as Break,Ae as BufferAttribute,xu as BufferAttributeNode,Se as BufferGeometry,Yl as BufferNode,Id as BumpMapNode,_R as BundleGroup,Ru as BypassNode,lt as ByteType,Su as CacheNode,dr as CineonToneMapping,As as ClampToEdgeWrapping,tf as CodeNode,e as Color,l as ColorManagement,ru as ColorSpaceNode,Nu as ComputeNode,jr as ConstNode,jo as ContextNode,Hc as Continue,Dr as ConvertNode,J as CubeCamera,v as CubeReflectionMapping,A as CubeRefractionMapping,te as CubeTexture,Xl as CubeTextureNode,Ce as CubeUVReflectionMapping,Et as CullFaceBack,wt as CullFaceFront,Ct as CullFaceNone,Mt as CustomBlending,Mp as DFGApprox,Rp as D_GGX,U as DataArrayTexture,Oe as DataTexture,js as DecrementStencilOp,Hs as DecrementWrapStencilOp,zT as DenoiseNode,Xe as DepthFormat,RT as DepthOfFieldNode,qe as DepthStencilFormat,V as DepthTexture,rr as DirectionalLight,oS as DirectionalLightNode,Fu as Discard,ET as DotScreenNode,Je as DoubleSide,Nt as DstAlphaFactor,_t as DstColorFactor,f as DynamicDrawUsage,wa as EPSILON,zg as EnvironmentNode,Bs as EqualCompare,Lt as EqualDepth,Os as EqualStencilFunc,Zh as EquirectUVNode,se as EquirectangularReflectionMapping,re as EquirectangularRefractionMapping,a as EventDispatcher,Bu as ExpressionNode,$T as FXAANode,pp as F_Schlick,fr as FileLoader,UT as FilmNode,Pe as Float16BufferAttribute,De as Float32BufferAttribute,F as FloatType,Bi as Fn,U_ as FogExp2Node,E_ as FogNode,M_ as FogRangeNode,I as FramebufferTexture,Ml as FrontFacingNode,et as FrontSide,tt as Frustum,Jn as FunctionCallNode,of as FunctionNode,gx as FunctionOverloadingNode,SS as GLSLNodeParser,OT as GTAONode,oT as GaussianBlurNode,Fs as GreaterCompare,Pt as GreaterDepth,Us as GreaterEqualCompare,It as GreaterEqualDepth,Ds as GreaterEqualStencilFunc,Vs as GreaterStencilFunc,gr as Group,Me as HalfFloatType,ar as HemisphereLight,fS as HemisphereLightNode,yR as IESSpotLight,gS as IESSpotLightNode,Ma as INFINITY,Ii as If,qs as IncrementStencilOp,Ws as IncrementWrapStencilOp,wc as IndexNode,Pc as InstanceNode,B as InstancedBufferAttribute,M as InstancedInterleavedBuffer,zh as InstancedPointsNodeMaterial,T as IntType,m as InterleavedBuffer,x as InterleavedBufferAttribute,Xs as InvertStencilOp,ah as IrradianceNode,Gr as JoinNode,Qs as KeepStencilOp,He as LessCompare,Dt as LessDepth,Ms as LessEqualCompare,Vt as LessEqualDepth,Gs as LessEqualStencilFunc,zs as LessStencilFunc,or as LightProbe,xS as LightProbeNode,ih as LightingContextNode,up as LightingModel,sh as LightingNode,Jc as LightsNode,qh as Line2NodeMaterial,z as LineBasicMaterial,$h as LineBasicNodeMaterial,k as LineDashedMaterial,Wh as LineDashedNodeMaterial,K as LinearFilter,Ve as LinearMipMapLinearFilter,L as LinearMipmapLinearFilter,Ue as LinearMipmapNearestFilter,d as LinearSRGBColorSpace,ur as LinearToneMapping,mr as Loader,$c as Loop,kc as LoopNode,jt as LuminanceAlphaFormat,Wt as LuminanceFormat,PT as Lut3DNode,hx as MRTNode,tm as MatcapUVNode,D as Material,xr as MaterialLoader,Dd as MaterialNode,ud as MaterialReferenceNode,o as MathUtils,i as Matrix3,n as Matrix4,Zs as MaxEquation,$u as MaxMipLevelNode,q as Mesh,ue as MeshBasicMaterial,hp as MeshBasicNodeMaterial,le as MeshLambertMaterial,bp as MeshLambertNodeMaterial,xe as MeshMatcapMaterial,im as MeshMatcapNodeMaterial,$ as MeshNormalMaterial,Qh as MeshNormalNodeMaterial,ce as MeshPhongMaterial,_p as MeshPhongNodeMaterial,ge as MeshPhysicalMaterial,qg as MeshPhysicalNodeMaterial,Kg as MeshSSSNodeMaterial,pe as MeshStandardMaterial,Wg as MeshStandardNodeMaterial,me as MeshToonMaterial,Jg as MeshToonNodeMaterial,Js as MinEquation,Rs as MirroredRepeatWrapping,ne as MixOperation,hl as ModelNode,Cc as ModelViewProjectionNode,Yc as MorphNode,Bt as MultiplyBlending,oe as MultiplyOperation,ze as NearestFilter,Fe as NearestMipmapLinearFilter,Cs as NearestMipmapNearestFilter,pr as NeutralToneMapping,Es as NeverCompare,Gt as NeverDepth,$s as NeverStencilFunc,j as NoBlending,y as NoColorSpace,h as NoToneMapping,Lr as Node,Wm as NodeAttribute,rx as NodeBuilder,Qm as NodeCache,Km as NodeCode,ix as NodeFrame,nx as NodeFunctionInput,ER as NodeLoader,Oh as NodeMaterial,wR as NodeMaterialLoader,Tr as NodeMaterialObserver,MR as NodeObjectLoader,Er as NodeShaderStage,Mr as NodeType,jm as NodeUniform,wr as NodeUpdateType,Cr as NodeUtils,qm as NodeVar,Xm as NodeVarying,O as NormalBlending,Bd as NormalMapNode,Ps as NotEqualCompare,Ft as NotEqualDepth,Ls as NotEqualStencilFunc,Le as Object3D,nl as Object3DNode,yr as ObjectLoader,w as ObjectSpaceNormalMap,xt as OneFactor,Rt as OneMinusDstAlphaFactor,At as OneMinusDstColorFactor,St as OneMinusSrcAlphaFactor,vt as OneMinusSrcColorFactor,Ee as OrthographicCamera,Nx as OscNode,ox as OutputStructNode,Ze as PCFShadowMap,Ba as PI,Ua as PI2,Wf as PMREMGenerator,Dg as PMREMNode,b_ as ParallaxBarrierPassNode,Zm as ParameterNode,tT as PassNode,we as PerspectiveCamera,xp as PhongLightingModel,pg as PhysicalLightingModel,r_ as PixelationPassNode,_e as Plane,sr as PointLight,aS as PointLightNode,ay as PointUVNode,G as PointsMaterial,om as PointsNodeMaterial,SR as PostProcessing,jb as PosterizeNode,Tn as PropertyNode,Jx as QuadMesh,vs as RED_GREEN_RGTC2_Format,_s as RED_RGTC1_Format,Ie as REVISION,Be as RGBAFormat,ot as RGBAIntegerFormat,xs as RGBA_ASTC_10x10_Format,gs as RGBA_ASTC_10x5_Format,ms as RGBA_ASTC_10x6_Format,fs as RGBA_ASTC_10x8_Format,ys as RGBA_ASTC_12x10_Format,bs as RGBA_ASTC_12x12_Format,is as RGBA_ASTC_4x4_Format,ns as RGBA_ASTC_5x4_Format,as as RGBA_ASTC_5x5_Format,os as RGBA_ASTC_6x5_Format,us as RGBA_ASTC_6x6_Format,ls as RGBA_ASTC_8x5_Format,hs as RGBA_ASTC_8x6_Format,ps as RGBA_ASTC_8x8_Format,Ts as RGBA_BPTC_Format,rs as RGBA_ETC2_EAC_Format,es as RGBA_PVRTC_2BPPV1_Format,Jt as RGBA_PVRTC_4BPPV1_Format,Xt as RGBA_S3TC_DXT1_Format,Kt as RGBA_S3TC_DXT3_Format,Yt as RGBA_S3TC_DXT5_Format,at as RGBFormat,nt as RGBIntegerFormat,MT as RGBShiftNode,ts as RGB_ETC1_Format,ss as RGB_ETC2_Format,Zt as RGB_PVRTC_2BPPV1_Format,Qt as RGB_PVRTC_4BPPV1_Format,qt as RGB_S3TC_DXT1_Format,je as RGFormat,it as RGIntegerFormat,ty as RTTNode,L_ as RangeNode,ir as RectAreaLight,hS as RectAreaLightNode,rt as RedFormat,st as RedIntegerFormat,id as ReferenceNode,Xx as ReflectorNode,lr as ReinhardToneMapping,Eu as RemapNode,Iu as RenderOutputNode,Re as RenderTarget,hu as RendererReferenceNode,Ge as RepeatWrapping,Ks as ReplaceStencilOp,Pu as Return,mt as ReverseSubtractEquation,um as RotateNode,Ss as SIGNED_RED_GREEN_RGTC2_Format,Ns as SIGNED_RED_RGTC1_Format,c as SRGBColorSpace,a_ as SSAAPassNode,X as Scene,uy as SceneNode,Up as Schlick_to_F0,lh as ScreenNode,R_ as ScriptableNode,__ as ScriptableValueNode,$r as SetNode,Ai as ShaderNode,Te as ShadowMaterial,mm as ShadowNodeMaterial,ct as ShortType,Oc as SkinningNode,ST as SobelOperatorNode,Qe as SphereGeometry,kr as SplitNode,tr as SpotLight,pS as SpotLightNode,ye as SpriteMaterial,hm as SpriteNodeMaterial,Cx as SpriteSheetUVNode,bt as SrcAlphaFactor,Tt as SrcAlphaSaturateFactor,yt as SrcColorFactor,wf as StackNode,p as StaticDrawUsage,$e as StereoCamera,h_ as StereoPassNode,wx as StorageArrayElementNode,RR as StorageBufferAttribute,Db as StorageBufferNode,CR as StorageInstancedBufferAttribute,AR as StorageTexture,zb as StorageTextureNode,gt as SubtractEquation,Ut as SubtractiveBlending,Rd as TBNViewMatrix,C as TangentSpaceNormalMap,Or as TempNode,he as Texture,xm as Texture3DNode,Wu as TextureNode,zu as TextureSizeNode,xx as TimerNode,gu as ToneMappingNode,JT as TransitionNode,Bx as TriplanarTexturesNode,ve as Uint16BufferAttribute,Ne as Uint32BufferAttribute,Jl as UniformArrayNode,hn as UniformGroupNode,yn as UniformNode,Ye as UnsignedByteType,Ke as UnsignedInt248Type,$t as UnsignedInt5999Type,b as UnsignedIntType,zt as UnsignedShort4444Type,kt as UnsignedShort5551Type,ut as UnsignedShortType,Hb as UserDataNode,We as VSMShadowMap,Sp as V_GGX_SmithCorrelated,Ko as VarNode,Qo as VaryingNode,t as Vector2,s as Vector3,r as Vector4,iy as VertexColorNode,wh as ViewportDepthNode,Ch as ViewportDepthTextureNode,Kb as ViewportSharedTextureNode,vh as ViewportTextureNode,bm as VolumeNodeMaterial,_ as WebGLCoordinateSystem,H as WebGLCubeRenderTarget,R as WebGPUCoordinateSystem,TR as WebGPURenderer,ft as ZeroFactor,Ys as ZeroStencilOp,to as abs,PN as acesFilmicToneMapping,Za as acos,ra as add,Kr as addMethodChaining,Vu as addNodeElement,pT as afterImage,DN as agxToneMapping,Fa as all,Pn as alphaT,y_ as anaglyphPass,vT as anamorphic,xa as and,In as anisotropy,Vn as anisotropyB,Ln as anisotropyT,Pa as any,GT as ao,Li as append,on as arrayBuffer,Qa as asin,Zn as assign,Ja as atan,xo as atan2,Kn as attenuationColor,Xn as attenuationDistance,Ou as attribute,ly as backgroundBlurriness,hy as backgroundIntensity,Vc as batch,gN as billboarding,_a as bitAnd,Na as bitNot,va as bitOr,Sa as bitXor,Td as bitangentGeometry,_d as bitangentLocal,Nd as bitangentView,vd as bitangentWorld,mo as bitcast,RN as bleach,ZT as bloom,Pg as blur,zi as bool,Ql as buffer,yu as bufferAttribute,Ld as bumpMap,_N as burn,Wi as bvec2,Ki as bvec3,Ji as bvec4,Cu as bypass,Au as cache,ta as call,Yu as cameraFar,Qu as cameraLogDepth,Ku as cameraNear,rl as cameraNormalMatrix,il as cameraPosition,Zu as cameraProjectionMatrix,Ju as cameraProjectionMatrixInverse,tl as cameraViewMatrix,sl as cameraWorldMatrix,Uo as cbrt,Wa as ceil,qN as checker,UN as cineonToneMapping,Io as clamp,Cn as clearcoat,En as clearcoatRoughness,sf as code,Vi as color,ou as colorSpaceToWorking,Kh as colorToDirection,vu as compute,Wo as cond,qo as context,ln as convert,ry as convertToTexture,Ka as cos,ht as createCanvasElement,Ro as cross,Kl as cubeTexture,oo as dFdx,uo as dFdy,kn as dashSize,Ur as defaultBuildStages,Br as defaultShaderStages,vi as defined,Va as degrees,kT as denoise,F_ as densityFog,Ih as depth,iT as depthPass,So as difference,vn as diffuseColor,Xh as directionToColor,Yn as dispersion,vo as distance,aa as div,NN as dodge,CT as dof,Ao as dot,wT as dotScreen,Fc as drawIndex,bu as dynamicBufferAttribute,un as element,Sn as emissive,ua as equal,Ia as equals,Jh as equirectUV,Da as exp,Oa as exp2,Uu as expression,Ul as faceDirection,Oo as faceForward,FT as film,Di as float,Ha as floor,w_ as fog,qa as fract,mn as frameGroup,_x as frameId,Bl as frontFacing,go as fwidth,HT as fxaa,iN as gain,$n as gapSize,uT as gaussianBlur,su as getColorSpaceMethod,Si as getConstNodeType,Pi as getCurrentStack,Mg as getDirection,X_ as getDistanceAttenuation,Np as getGeometryRoughness,vp as getRoughness,nS as getShIrradianceAt,lx as getTextureIndex,A_ as global,af as glsl,lf as glslFn,gT as grayscale,pa as greaterThan,ma as greaterThanEqual,sN as hash,Nl as highPrecisionModelNormalViewMatrix,_l as highPrecisionModelViewMatrix,xT as hue,Ic as instance,Bc as instanceIndex,Tu as instancedBufferAttribute,_u as instancedDynamicBufferAttribute,Oi as int,$a as inverseSqrt,Uc as invocationLocalIndex,Wn as ior,Bn as iridescence,Un as iridescenceIOR,Fn as iridescenceThickness,$i as ivec2,qi as ivec3,Qi as ivec4,rf as js,Xo as label,ro as length,Fo as lengthSq,ha as lessThan,ga as lessThanEqual,Q_ as lightPosition,tN as lightTargetDirection,Z_ as lightTargetPosition,J_ as lightViewPosition,nh as lightingContext,th as lights,Lh as linearDepth,wN as linearSRGBTosRGB,MN as linearToneMapping,Ga as log,za as log2,jc as loop,bT as luminance,IT as lut3D,tn as mat2,sn as mat3,rn as mat4,sm as matcapUV,Ac as materialAOMap,Od as materialAlphaTest,nc as materialAnisotropy,Rc as materialAnisotropyVector,mc as materialAttenuationColor,gc as materialAttenuationDistance,Zd as materialClearcoat,tc as materialClearcoatNormal,Jd as materialClearcoatRoughness,Gd as materialColor,vc as materialDispersion,kd as materialEmissive,pc as materialIOR,ac as materialIridescence,oc as materialIridescenceIOR,uc as materialIridescenceThickness,Sc as materialLightMap,_c as materialLineDashOffset,yc as materialLineDashSize,bc as materialLineGapSize,xc as materialLineScale,Tc as materialLineWidth,Yd as materialMetalness,Qd as materialNormal,$d as materialOpacity,Nc as materialPointWidth,ld as materialReference,Xd as materialReflectivity,$l as materialRefractionRatio,sc as materialRotation,Kd as materialRoughness,rc as materialSheen,ic as materialSheenRoughness,zd as materialShininess,Hd as materialSpecular,jd as materialSpecularColor,Wd as materialSpecularIntensity,qd as materialSpecularStrength,hc as materialThickness,lc as materialTransmission,bo as max,Hu as maxMipLevel,Rn as metalness,yo as min,Po as mix,zo as mixElement,To as mod,oa as modInt,pl as modelDirection,yl as modelNormalMatrix,ml as modelPosition,fl as modelScale,Tl as modelViewMatrix,xl as modelViewPosition,Ec as modelViewProjection,gl as modelWorldMatrix,bl as modelWorldMatrixInverse,Qc as morphReference,AN as motionBlur,px as mrt,na as mul,Vv as mx_aastep,Jv as mx_cell_noise_float,jv as mx_contrast,tS as mx_fractal_noise_float,sS as mx_fractal_noise_vec2,rS as mx_fractal_noise_vec3,iS as mx_fractal_noise_vec4,Pv as mx_hsvtorgb,qv as mx_noise_float,Xv as mx_noise_vec3,Kv as mx_noise_vec4,Ov as mx_ramplr,Gv as mx_ramptb,Iv as mx_rgbtohsv,Wv as mx_safepower,kv as mx_splitlr,$v as mx_splittb,Lv as mx_srgb_texture_to_lin_rec709,Hv as mx_transform_uv,Yv as mx_worley_noise_float,Qv as mx_worley_noise_vec2,Zv as mx_worley_noise_vec3,io as negate,ON as neutralToneMapping,Ei as nodeArray,Mi as nodeImmutable,Ri as nodeObject,Ci as nodeObjects,wi as nodeProxy,Il as normalFlat,Fl as normalGeometry,Pl as normalLocal,Ud as normalMap,Ll as normalView,Vl as normalWorld,ja as normalize,ba as not,la as notEqual,al as objectDirection,xn as objectGroup,ul as objectPosition,ll as objectScale,dl as objectViewPosition,ol as objectWorldMatrix,no as oneMinus,ya as or,Bh as orthographicDepthToViewZ,Rx as oscSawtooth,vx as oscSine,Sx as oscSquare,Ax as oscTriangle,zn as output,ux as outputStruct,SN as overlay,fx as overloadingFn,rN as parabola,T_ as parallaxBarrierPass,Cd as parallaxDirection,Ed as parallaxUV,Jm as parameter,sT as pass,rT as passTexture,nN as pcurve,Fh as perspectiveDepthToViewZ,i_ as pixelationPass,Og as pmremTexture,oy as pointUV,Hn as pointWidth,vl as positionGeometry,Sl as positionLocal,Al as positionPrevious,El as positionView,wl as positionViewDirection,Rl as positionWorld,Cl as positionWorldDirection,qb as posterize,Co as pow,Eo as pow2,wo as pow3,Mo as pow4,_n as property,La as radians,Go as rand,V_ as range,B_ as rangeFog,ho as reciprocal,nd as reference,od as referenceBuffer,No as reflect,jl as reflectVector,Hl as reflectView,Kx as reflector,Vo as refract,ql as refractVector,Wl as refractView,BN as reinhardToneMapping,Ca as remainder,wu as remap,Mu as remapClamp,fn as renderGroup,Lu as renderOutput,pu as rendererReference,BT as rgbShift,lm as rotate,hN as rotateUV,An as roughness,lo as round,sy as rtt,EN as sRGBToLinearSRGB,Xu as sampler,Lo as saturate,mT as saturation,vN as screen,ph as screenCoordinate,hh as screenSize,dh as screenUV,C_ as scriptable,N_ as scriptableValue,Ho as select,CN as sepia,Fi as setCurrentStack,Fr as shaderStages,gn as sharedUniformGroup,wn as sheen,Mn as sheenRoughness,Aa as shiftLeft,Ra as shiftRight,Gn as shininess,so as sign,Xa as sin,aN as sinc,Gc as skinning,zc as skinningReference,Do as smoothstep,ko as smoothstepElement,AT as sobel,Dn as specularColor,On as specularF90,pN as spherizeUV,dn as split,Ex as spritesheetUV,ka as sqrt,u_ as ssaaPass,Mf as stack,_o as step,p_ as stereoPass,Ob as storage,kN as storageBarrier,Gb as storageObject,kb as storageTexture,nn as string,ia as sub,Ya as tan,hd as tangentGeometry,pd as tangentLocal,gd as tangentView,md as tangentWorld,Yo as temp,ju as texture,ym as texture3D,$N as textureBarrier,Yp as textureBicubic,Bg as textureCubeUV,qu as textureLoad,ku as textureSize,$b as textureStore,qn as thickness,TT as threshold,Tx as timerDelta,bx as timerGlobal,yx as timerLocal,iu as toOutputColorSpace,nu as toWorkingColorSpace,mu as toneMapping,fu as toneMappingExposure,Bo as transformDirection,zl as transformNormal,kl as transformNormalToView,wd as transformedBentNormalView,Sd as transformedBitangentView,Ad as transformedBitangentWorld,Gl as transformedClearcoatNormalView,Dl as transformedNormalView,Ol as transformedNormalWorld,xd as transformedTangentView,yd as transformedTangentWorld,t_ as transition,jn as transmission,fo as transpose,oN as tri,uN as tri3,lN as triNoise3D,Fx as triplanarTexture,Ux as triplanarTextures,po as trunc,Ui as tslFn,Gi as uint,bn as uniform,td as uniformArray,pn as uniformGroup,sd as uniforms,Wb as userData,Gu as uv,Hi as uvec2,Xi as uvec3,Zi as uvec4,Zo as varying,Nn as varyingProperty,ki as vec2,ji as vec3,Yi as vec4,Pr as vectorComponents,TN as velocity,ny as vertexColor,Mc as vertexIndex,fT as vibrance,Mh as viewZToOrthographicDepth,Uh as viewZToPerspectiveDepth,gh as viewport,_h as viewportBottomLeft,xh as viewportCoordinate,Eh as viewportDepthTexture,Vh as viewportLinearDepth,Ah as viewportMipTexture,bh as viewportResolution,mN as viewportSafeUV,Yb as viewportSharedTexture,mh as viewportSize,Sh as viewportTexture,Th as viewportTopLeft,yh as viewportUV,nf as wgsl,hf as wgslFn,jN as workgroupArray,zN as workgroupBarrier,au as workingToColorSpace,Ta as xor};
